shadow$provide.module$node_modules$react_map_gl$dist$es5$components$layer=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function createLayer(map,id,props){map.style&&map.style._loaded&&(id=_objectSpread(_objectSpread({},props),{},
{id}),delete id.beforeId,map.addLayer(id,props.beforeId))}function updateLayer(map,id,props,prevProps){(0,_assert["default"])(props.id===prevProps.id,"layer id changed");(0,_assert["default"])(props.type===prevProps.type,"layer type changed");try{var _props$layout=props.layout;_props$layout=void 0===_props$layout?{}:_props$layout;var _props$paint=props.paint;_props$paint=void 0===_props$paint?{}:_props$paint;var filter=props.filter,minzoom=props.minzoom,maxzoom=props.maxzoom,beforeId=props.beforeId,
otherProps=(0,_objectWithoutProperties2["default"])(props,"layout paint filter minzoom maxzoom beforeId".split(" "));beforeId!==prevProps.beforeId&&map.moveLayer(id,beforeId);if(_props$layout!==prevProps.layout){var prevLayout=prevProps.layout||{},key;for(key in _props$layout)(0,_deepEqual["default"])(_props$layout[key],prevLayout[key])||map.setLayoutProperty(id,key,_props$layout[key]);for(var _key in prevLayout)_props$layout.hasOwnProperty(_key)||map.setLayoutProperty(id,_key,void 0)}if(_props$paint!==
prevProps.paint){var prevPaint=prevProps.paint||{},_key2;for(_key2 in _props$paint)(0,_deepEqual["default"])(_props$paint[_key2],prevPaint[_key2])||map.setPaintProperty(id,_key2,_props$paint[_key2]);for(var _key3 in prevPaint)_props$paint.hasOwnProperty(_key3)||map.setPaintProperty(id,_key3,void 0)}(0,_deepEqual["default"])(filter,prevProps.filter)||map.setFilter(id,filter);minzoom===prevProps.minzoom&&maxzoom===prevProps.maxzoom||map.setLayerZoomRange(id,minzoom,maxzoom);for(var _key4 in otherProps)(0,
_deepEqual["default"])(otherProps[_key4],prevProps[_key4])||map.setLayerProperty(id,_key4,otherProps[_key4])}catch(error){console.warn(error)}}function Layer(props){var context=(0,_react.useContext)(_mapContext["default"]),propsRef=(0,_react.useRef)({id:props.id,type:props.type}),_useState=(0,_react.useState)(0),setStyleLoaded=(0,_slicedToArray2["default"])(_useState,2)[1],id=(0,_react.useMemo)(function(){return props.id||"jsx-layer-".concat(layerCounter++)},[]),map=context.map;(0,_react.useEffect)(function(){if(map){var forceUpdate=
function(){return setStyleLoaded(function(version){return version+1})};map.on("styledata",forceUpdate);return function(){map.off("styledata",forceUpdate);map.style&&map.style._loaded&&map.removeLayer(id)}}},[map]);map&&map.style&&map.getLayer(id)?updateLayer(map,id,props,propsRef.current):createLayer(map,id,props);propsRef.current=props;return null}module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_objectWithoutProperties2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutProperties")),_react=require("module$node_modules$react$index");module=module(require("module$node_modules$prop_types$index"));var _mapContext=
global(require("module$node_modules$react_map_gl$dist$es5$components$map_context")),_assert=global(require("module$node_modules$react_map_gl$dist$es5$utils$assert")),_deepEqual=global(require("module$node_modules$react_map_gl$dist$es5$utils$deep_equal"));require={type:module.oneOf("fill line symbol circle fill-extrusion raster background heatmap hillshade sky".split(" ")).isRequired,id:module.string,source:module.string,beforeId:module.string};var layerCounter=0;Layer.propTypes=require;exports["default"]=
Layer}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$components$layer.js.map
