{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$terrain$dist$es5$lib$decode_quantized_mesh.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/terrain/dist/es5/lib/decode-quantized-mesh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$terrain$dist$es5$lib$decode_quantized_mesh\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = decode;\nexports.DECODING_STEPS = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar QUANTIZED_MESH_HEADER = new Map([['centerX', Float64Array.BYTES_PER_ELEMENT], ['centerY', Float64Array.BYTES_PER_ELEMENT], ['centerZ', Float64Array.BYTES_PER_ELEMENT], ['minHeight', Float32Array.BYTES_PER_ELEMENT], ['maxHeight', Float32Array.BYTES_PER_ELEMENT], ['boundingSphereCenterX', Float64Array.BYTES_PER_ELEMENT], ['boundingSphereCenterY', Float64Array.BYTES_PER_ELEMENT], ['boundingSphereCenterZ', Float64Array.BYTES_PER_ELEMENT], ['boundingSphereRadius', Float64Array.BYTES_PER_ELEMENT], ['horizonOcclusionPointX', Float64Array.BYTES_PER_ELEMENT], ['horizonOcclusionPointY', Float64Array.BYTES_PER_ELEMENT], ['horizonOcclusionPointZ', Float64Array.BYTES_PER_ELEMENT]]);\n\nfunction decodeZigZag(value) {\n  return value >> 1 ^ -(value & 1);\n}\n\nfunction decodeHeader(dataView) {\n  var position = 0;\n  var header = {};\n\n  var _iterator = _createForOfIteratorHelper(QUANTIZED_MESH_HEADER),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = (0, _slicedToArray2[\"default\"])(_step.value, 2),\n          key = _step$value[0],\n          bytesCount = _step$value[1];\n\n      var getter = bytesCount === 8 ? dataView.getFloat64 : dataView.getFloat32;\n      header[key] = getter.call(dataView, position, true);\n      position += bytesCount;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    header: header,\n    headerEndPosition: position\n  };\n}\n\nfunction decodeVertexData(dataView, headerEndPosition) {\n  var position = headerEndPosition;\n  var elementsPerVertex = 3;\n  var vertexCount = dataView.getUint32(position, true);\n  var vertexData = new Uint16Array(vertexCount * elementsPerVertex);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n  var bytesPerArrayElement = Uint16Array.BYTES_PER_ELEMENT;\n  var elementArrayLength = vertexCount * bytesPerArrayElement;\n  var uArrayStartPosition = position;\n  var vArrayStartPosition = uArrayStartPosition + elementArrayLength;\n  var heightArrayStartPosition = vArrayStartPosition + elementArrayLength;\n  var u = 0;\n  var v = 0;\n  var height = 0;\n\n  for (var i = 0; i < vertexCount; i++) {\n    u += decodeZigZag(dataView.getUint16(uArrayStartPosition + bytesPerArrayElement * i, true));\n    v += decodeZigZag(dataView.getUint16(vArrayStartPosition + bytesPerArrayElement * i, true));\n    height += decodeZigZag(dataView.getUint16(heightArrayStartPosition + bytesPerArrayElement * i, true));\n    vertexData[i] = u;\n    vertexData[i + vertexCount] = v;\n    vertexData[i + vertexCount * 2] = height;\n  }\n\n  position += elementArrayLength * 3;\n  return {\n    vertexData: vertexData,\n    vertexDataEndPosition: position\n  };\n}\n\nfunction decodeIndex(buffer, position, indicesCount, bytesPerIndex) {\n  var encoded = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  var indices;\n\n  if (bytesPerIndex === 2) {\n    indices = new Uint16Array(buffer, position, indicesCount);\n  } else {\n    indices = new Uint32Array(buffer, position, indicesCount);\n  }\n\n  if (!encoded) {\n    return indices;\n  }\n\n  var highest = 0;\n\n  for (var i = 0; i < indices.length; ++i) {\n    var code = indices[i];\n    indices[i] = highest - code;\n\n    if (code === 0) {\n      ++highest;\n    }\n  }\n\n  return indices;\n}\n\nfunction decodeTriangleIndices(dataView, vertexData, vertexDataEndPosition) {\n  var position = vertexDataEndPosition;\n  var elementsPerVertex = 3;\n  var vertexCount = vertexData.length / elementsPerVertex;\n  var bytesPerIndex = vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n\n  if (position % bytesPerIndex !== 0) {\n    position += bytesPerIndex - position % bytesPerIndex;\n  }\n\n  var triangleCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n  var triangleIndicesCount = triangleCount * 3;\n  var triangleIndices = decodeIndex(dataView.buffer, position, triangleIndicesCount, bytesPerIndex);\n  position += triangleIndicesCount * bytesPerIndex;\n  return {\n    triangleIndicesEndPosition: position,\n    triangleIndices: triangleIndices\n  };\n}\n\nfunction decodeEdgeIndices(dataView, vertexData, triangleIndicesEndPosition) {\n  var position = triangleIndicesEndPosition;\n  var elementsPerVertex = 3;\n  var vertexCount = vertexData.length / elementsPerVertex;\n  var bytesPerIndex = vertexCount > 65536 ? Uint32Array.BYTES_PER_ELEMENT : Uint16Array.BYTES_PER_ELEMENT;\n  var westVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n  var westIndices = decodeIndex(dataView.buffer, position, westVertexCount, bytesPerIndex, false);\n  position += westVertexCount * bytesPerIndex;\n  var southVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n  var southIndices = decodeIndex(dataView.buffer, position, southVertexCount, bytesPerIndex, false);\n  position += southVertexCount * bytesPerIndex;\n  var eastVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n  var eastIndices = decodeIndex(dataView.buffer, position, eastVertexCount, bytesPerIndex, false);\n  position += eastVertexCount * bytesPerIndex;\n  var northVertexCount = dataView.getUint32(position, true);\n  position += Uint32Array.BYTES_PER_ELEMENT;\n  var northIndices = decodeIndex(dataView.buffer, position, northVertexCount, bytesPerIndex, false);\n  position += northVertexCount * bytesPerIndex;\n  return {\n    edgeIndicesEndPosition: position,\n    westIndices: westIndices,\n    southIndices: southIndices,\n    eastIndices: eastIndices,\n    northIndices: northIndices\n  };\n}\n\nfunction decodeVertexNormalsExtension(extensionDataView) {\n  return new Uint8Array(extensionDataView.buffer, extensionDataView.byteOffset, extensionDataView.byteLength);\n}\n\nfunction decodeWaterMaskExtension(extensionDataView) {\n  return extensionDataView.buffer.slice(extensionDataView.byteOffset, extensionDataView.byteOffset + extensionDataView.byteLength);\n}\n\nfunction decodeExtensions(dataView, indicesEndPosition) {\n  var extensions = {};\n\n  if (dataView.byteLength <= indicesEndPosition) {\n    return {\n      extensions: extensions,\n      extensionsEndPosition: indicesEndPosition\n    };\n  }\n\n  var position = indicesEndPosition;\n\n  while (position < dataView.byteLength) {\n    var extensionId = dataView.getUint8(position, true);\n    position += Uint8Array.BYTES_PER_ELEMENT;\n    var extensionLength = dataView.getUint32(position, true);\n    position += Uint32Array.BYTES_PER_ELEMENT;\n    var extensionView = new DataView(dataView.buffer, position, extensionLength);\n\n    switch (extensionId) {\n      case 1:\n        {\n          extensions.vertexNormals = decodeVertexNormalsExtension(extensionView);\n          break;\n        }\n\n      case 2:\n        {\n          extensions.waterMask = decodeWaterMaskExtension(extensionView);\n          break;\n        }\n\n      default:\n        {}\n    }\n\n    position += extensionLength;\n  }\n\n  return {\n    extensions: extensions,\n    extensionsEndPosition: position\n  };\n}\n\nvar DECODING_STEPS = {\n  header: 0,\n  vertices: 1,\n  triangleIndices: 2,\n  edgeIndices: 3,\n  extensions: 4\n};\nexports.DECODING_STEPS = DECODING_STEPS;\nvar DEFAULT_OPTIONS = {\n  maxDecodingStep: DECODING_STEPS.extensions\n};\n\nfunction decode(data, userOptions) {\n  var options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  var view = new DataView(data);\n\n  var _decodeHeader = decodeHeader(view),\n      header = _decodeHeader.header,\n      headerEndPosition = _decodeHeader.headerEndPosition;\n\n  if (options.maxDecodingStep < DECODING_STEPS.vertices) {\n    return {\n      header: header\n    };\n  }\n\n  var _decodeVertexData = decodeVertexData(view, headerEndPosition),\n      vertexData = _decodeVertexData.vertexData,\n      vertexDataEndPosition = _decodeVertexData.vertexDataEndPosition;\n\n  if (options.maxDecodingStep < DECODING_STEPS.triangleIndices) {\n    return {\n      header: header,\n      vertexData: vertexData\n    };\n  }\n\n  var _decodeTriangleIndice = decodeTriangleIndices(view, vertexData, vertexDataEndPosition),\n      triangleIndices = _decodeTriangleIndice.triangleIndices,\n      triangleIndicesEndPosition = _decodeTriangleIndice.triangleIndicesEndPosition;\n\n  if (options.maxDecodingStep < DECODING_STEPS.edgeIndices) {\n    return {\n      header: header,\n      vertexData: vertexData,\n      triangleIndices: triangleIndices\n    };\n  }\n\n  var _decodeEdgeIndices = decodeEdgeIndices(view, vertexData, triangleIndicesEndPosition),\n      westIndices = _decodeEdgeIndices.westIndices,\n      southIndices = _decodeEdgeIndices.southIndices,\n      eastIndices = _decodeEdgeIndices.eastIndices,\n      northIndices = _decodeEdgeIndices.northIndices,\n      edgeIndicesEndPosition = _decodeEdgeIndices.edgeIndicesEndPosition;\n\n  if (options.maxDecodingStep < DECODING_STEPS.extensions) {\n    return {\n      header: header,\n      vertexData: vertexData,\n      triangleIndices: triangleIndices,\n      westIndices: westIndices,\n      northIndices: northIndices,\n      eastIndices: eastIndices,\n      southIndices: southIndices\n    };\n  }\n\n  var _decodeExtensions = decodeExtensions(view, edgeIndicesEndPosition),\n      extensions = _decodeExtensions.extensions;\n\n  return {\n    header: header,\n    vertexData: vertexData,\n    triangleIndices: triangleIndices,\n    westIndices: westIndices,\n    northIndices: northIndices,\n    eastIndices: eastIndices,\n    southIndices: southIndices,\n    extensions: extensions\n  };\n}\n//# sourceMappingURL=decode-quantized-mesh.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","decodeZigZag","decodeIndex","buffer","position","indicesCount","bytesPerIndex","encoded","arguments","undefined","indices","Uint16Array","Uint32Array","highest","code","_interopRequireDefault","defineProperty","decode","data","userOptions","options","assign","DEFAULT_OPTIONS","view","DataView","header","_iterator","QUANTIZED_MESH_HEADER","_step","_step$value","_slicedToArray2","bytesCount","key","getter","getFloat64","getFloat32","maxDecodingStep","DECODING_STEPS","vertices","vertexCount","getUint32","vertexData","elementsPerVertex","BYTES_PER_ELEMENT","bytesPerArrayElement","elementArrayLength","uArrayStartPosition","vArrayStartPosition","heightArrayStartPosition","u","v","height","getUint16","triangleIndices","triangleCount","triangleIndicesCount","edgeIndices","westVertexCount","westIndices","southVertexCount","southIndices","eastVertexCount","eastIndices","northVertexCount","northIndices","extensions","byteLength","edgeIndicesEndPosition","extensionId","getUint8","Uint8Array","extensionLength","extensionView","vertexNormals","byteOffset","waterMask","Map","Float64Array","Float32Array"]
}
