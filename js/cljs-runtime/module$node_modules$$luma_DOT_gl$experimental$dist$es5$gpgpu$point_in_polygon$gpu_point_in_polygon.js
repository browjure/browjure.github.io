shadow$provide.module$node_modules$$luma_DOT_gl$experimental$dist$es5$gpgpu$point_in_polygon$gpu_point_in_polygon=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _toConsumableArray2=module(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),
_slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_classCallCheck2=module(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=module(require("module$node_modules$$babel$runtime$helpers$createClass")),_webgl=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$index"),_gltools=require("module$node_modules$$luma_DOT_gl$gltools$dist$es5$index"),
_engine=require("module$node_modules$$luma_DOT_gl$engine$dist$es5$index"),_textureFilter=module(require("module$node_modules$$luma_DOT_gl$experimental$dist$es5$gpgpu$point_in_polygon$texture_filter")),_shaders=require("module$node_modules$$luma_DOT_gl$experimental$dist$es5$gpgpu$point_in_polygon$shaders"),Polygon=global(require("module$node_modules$$luma_DOT_gl$experimental$dist$es5$gpgpu$point_in_polygon$polygon"));require=function(){function GPUPointInPolygon(gl){var opts=1<arguments.length&&void 0!==
arguments[1]?arguments[1]:{};(0,_classCallCheck2["default"])(this,GPUPointInPolygon);this.gl=gl;(0,_webgl.assert)((0,_gltools.isWebGL2)(gl));this.textureSize=512;this._setupResources();this.update(opts)}(0,_createClass2["default"])(GPUPointInPolygon,[{key:"update",value:function(){var _ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},polygons=_ref.polygons;if(_ref=_ref.textureSize)this.textureSize=_ref;if(polygons&&0!==polygons.length){_ref=[];for(var indices=[],ids=[],count=0,polygonId=
0,i=0;i<polygons.length;i++){var normalized=Polygon.normalize(polygons[i],2),curVertices=normalized.positions||normalized,curCount=curVertices.length/2,curIds=Array(curCount).fill(polygonId);_ref.push.apply(_ref,(0,_toConsumableArray2["default"])(curVertices));ids.push.apply(ids,(0,_toConsumableArray2["default"])(curIds));normalized=Polygon.getSurfaceIndices(normalized,2);curVertices=normalized.length;for(curIds=0;curIds<curVertices;curIds++)normalized[curIds]+=count;count+=curCount;indices.push.apply(indices,
(0,_toConsumableArray2["default"])(normalized));polygonId++}(0,_webgl.assert)(65536>count);polygons=Polygon.getVertexCount(_ref,2);this._updateResources(_ref,indices,ids,polygons)}}},{key:"filter",value:function(_ref2){this.filterTransform.update({sourceBuffers:{a_position:_ref2.positionBuffer},feedbackBuffers:{filterValueIndex:_ref2.filterValueIndexBuffer},elementCount:_ref2.count});this.filterTransform.run({moduleSettings:{boundingBox:this.boundingBox,texture:this.polygonTexture}})}},{key:"_setupResources",
value:function(){var _parameters,gl=this.gl;this.polygonTexture=new _webgl.Texture2D(gl,{format:6407,type:5121,dataFormat:6407,border:0,mipmaps:!1,parameters:(_parameters={},(0,_defineProperty2["default"])(_parameters,10240,9728),(0,_defineProperty2["default"])(_parameters,10241,9728),(0,_defineProperty2["default"])(_parameters,10242,33071),(0,_defineProperty2["default"])(_parameters,10243,33071),_parameters)});this.positionBuffer=new _webgl.Buffer(gl,{accessor:{type:5126,size:2}});this.idBuffer=
new _webgl.Buffer(gl,{accessor:{type:5126,size:1}});this.indexBuffer=new _webgl.Buffer(gl,{target:34963,accessor:{type:5123}});this.polyTextureTransform=new _engine.Transform(gl,{id:"polygon-texture-creation-transform",elementCount:0,_targetTexture:this.polygonTexture,_targetTextureVarying:"v_polygonColor",vs:_shaders.POLY_TEX_VS,drawMode:4,isIndexed:!0,sourceBuffers:{a_position:this.positionBuffer,a_polygonID:this.idBuffer,indices:this.indexBuffer}});this.filterTransform=new _engine.Transform(gl,
{id:"filter transform",vs:_shaders.FILTER_VS,modules:[_textureFilter["default"]],varyings:["filterValueIndex"]})}},{key:"_updateResources",value:function(vertices,indices,ids,vertexCount){for(var yMin=Infinity,yMax=-Infinity,xMin=Infinity,xMax=-Infinity,y,x,i=0;i<vertexCount;i++)x=vertices[2*i],y=vertices[2*i+1],yMin=y<yMin?y:yMin,yMax=y>yMax?y:yMax,xMin=x<xMin?x:xMin,xMax=x>xMax?x:xMax;vertexCount=[xMin,yMin,xMax,yMax];xMax=(0,_slicedToArray2["default"])(vertexCount,4);yMin=xMax[0];yMax=xMax[1];
xMin=xMax[2]-yMin;xMax=xMax[3]-yMax;y=xMin/xMax;x=i=this.textureSize;1<y?i=x/y:x=i*y;this.boundingBox=vertexCount;this.polygonTexture.resize({width:x,height:i,mipmaps:!1});this.positionBuffer.setData(new Float32Array(vertices));this.idBuffer.setData(new Float32Array(ids));this.indexBuffer.setData(new Uint16Array(indices));this.polyTextureTransform.update({elementCount:indices.length,_targetTexture:this.polygonTexture});this.polyTextureTransform.run({uniforms:{boundingBoxOriginSize:[yMin,yMax,xMin,
xMax]}})}}]);return GPUPointInPolygon}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$experimental$dist$es5$gpgpu$point_in_polygon$gpu_point_in_polygon.js.map
