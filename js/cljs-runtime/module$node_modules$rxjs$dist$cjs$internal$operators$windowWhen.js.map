{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$windowWhen.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,+DAAf,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE5HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,UAAR,CAAqB,IAAK,EAC1B,KAAIC,UAAYP,OAAA,CAAQ,oDAAR,CAAhB,CACIQ,OAASR,OAAA,CAAQ,sDAAR,CADb,CAEIS,qBAAuBT,OAAA,CAAQ,yEAAR,CAF3B,CAGIU,OAASV,OAAA,CAAQ,4DAAR,CAkCbE;OAAA,CAAQI,UAAR,CAjCAA,QAAmB,CAACK,eAAD,CAAkB,CACjC,MAAOH,OAAA,CAAOI,OAAP,CAAe,QAAS,CAACC,MAAD,CAASC,UAAT,CAAqB,CAChD,IAAIC,MAAJ,CACIC,iBADJ,CAEIC,YAAcA,QAAS,CAACC,GAAD,CAAM,CAC7BH,MAAA,CAAOI,KAAP,CAAaD,GAAb,CACAJ,WAAA,CAAWK,KAAX,CAAiBD,GAAjB,CAF6B,CAFjC,CAMIE,WAAaA,QAAS,EAAG,CACH,IAAtB,GAAAJ,iBAAA,EAAoD,IAAK,EAAzD,GAA8BA,iBAA9B,CAA6D,IAAK,EAAlE,CAAsEA,iBAAA,CAAkBK,WAAlB,EAC3D,KAAX,GAAAN,MAAA,EAA8B,IAAK,EAAnC,GAAmBA,MAAnB,CAAuC,IAAK,EAA5C,CAAgDA,MAAA,CAAOO,QAAP,EAChDP,OAAA,CAAS,IAAIR,SAAJ,CAAcgB,OACvBT,WAAA,CAAWU,IAAX,CAAgBT,MAAA,CAAOU,YAAP,EAAhB,CAEA,IAAI,CACA,IAAAC,gBAAkBhB,MAAA,CAAOiB,SAAP,CAAiBhB,eAAA,EAAjB,CADlB,CAGJ,MAAOO,GAAP,CAAY,CACRD,WAAA,CAAYC,GAAZ,CACA;MAFQ,CAIZQ,eAAA,CAAgBE,SAAhB,CAA2BZ,iBAA3B,CAA+C,IAAIP,oBAAJ,CAAyBoB,kBAAzB,CAA4Cf,UAA5C,CAAwDM,UAAxD,CAAoEH,WAApE,CAAiFG,UAAjF,CAA/C,CAbyB,CAe7BA,WAAA,EACAP,OAAA,CAAOe,SAAP,CAAiB,IAAInB,oBAAJ,CAAyBoB,kBAAzB,CAA4Cf,UAA5C,CAAwD,QAAS,CAACT,KAAD,CAAQ,CAAE,MAAOU,OAAA,CAAOS,IAAP,CAAYnB,KAAZ,CAAT,CAAzE,CAAyGY,WAAzG,CAAsH,QAAS,EAAG,CAC/IF,MAAA,CAAOO,QAAP,EACAR,WAAA,CAAWQ,QAAX,EAF+I,CAAlI,CAGd,QAAS,EAAG,CACW,IAAtB,GAAAN,iBAAA,EAAoD,IAAK,EAAzD,GAA8BA,iBAA9B,CAA6D,IAAK,EAAlE,CAAsEA,iBAAA,CAAkBK,WAAlB,EACtEN,OAAA,CAAS,IAFE,CAHE,CAAjB,CAvBgD,CAA7C,CAD0B,CARuF;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/windowWhen.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$windowWhen\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.windowWhen = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nvar from_1 = require(\"../observable/from\");\nfunction windowWhen(closingSelector) {\n    return lift_1.operate(function (source, subscriber) {\n        var window;\n        var closingSubscriber;\n        var handleError = function (err) {\n            window.error(err);\n            subscriber.error(err);\n        };\n        var openWindow = function () {\n            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n            window === null || window === void 0 ? void 0 : window.complete();\n            window = new Subject_1.Subject();\n            subscriber.next(window.asObservable());\n            var closingNotifier;\n            try {\n                closingNotifier = from_1.innerFrom(closingSelector());\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            closingNotifier.subscribe((closingSubscriber = new OperatorSubscriber_1.OperatorSubscriber(subscriber, openWindow, handleError, openWindow)));\n        };\n        openWindow();\n        source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) { return window.next(value); }, handleError, function () {\n            window.complete();\n            subscriber.complete();\n        }, function () {\n            closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();\n            window = null;\n        }));\n    });\n}\nexports.windowWhen = windowWhen;\n//# sourceMappingURL=windowWhen.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","windowWhen","Subject_1","lift_1","OperatorSubscriber_1","from_1","closingSelector","operate","source","subscriber","window","closingSubscriber","handleError","err","error","openWindow","unsubscribe","complete","Subject","next","asObservable","closingNotifier","innerFrom","subscribe","OperatorSubscriber"]
}
