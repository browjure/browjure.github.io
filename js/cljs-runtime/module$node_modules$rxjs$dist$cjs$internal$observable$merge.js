shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$merge=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.merge=void 0;var mergeAll_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$mergeAll"),fromArray_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$fromArray"),argsOrArgArray_1=require("module$node_modules$rxjs$dist$cjs$internal$util$argsOrArgArray"),from_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$from"),
empty_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$empty"),args_1=require("module$node_modules$rxjs$dist$cjs$internal$util$args");exports.merge=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];_i=args_1.popScheduler(args);var concurrent=args_1.popNumber(args,Infinity);args=argsOrArgArray_1.argsOrArgArray(args);return args.length?1===args.length?from_1.innerFrom(args[0]):mergeAll_1.mergeAll(concurrent)(fromArray_1.internalFromArray(args,_i)):empty_1.EMPTY}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$merge.js.map
