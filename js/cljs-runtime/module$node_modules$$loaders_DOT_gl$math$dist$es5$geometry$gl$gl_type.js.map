{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$math$dist$es5$geometry$gl$gl_type.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/math/dist/es5/geometry/gl/gl-type.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$math$dist$es5$geometry$gl$gl_type\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _constants = require(\"../constants\");\n\nvar _GL_TYPE_TO_ARRAY_TYP;\n\nvar GL_TYPE_TO_ARRAY_TYPE = (_GL_TYPE_TO_ARRAY_TYP = {}, (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.DOUBLE, Float64Array), (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.FLOAT, Float32Array), (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.UNSIGNED_SHORT, Uint16Array), (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.UNSIGNED_INT, Uint32Array), (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.UNSIGNED_BYTE, Uint8Array), (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.BYTE, Int8Array), (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.SHORT, Int16Array), (0, _defineProperty2[\"default\"])(_GL_TYPE_TO_ARRAY_TYP, _constants.GL_TYPE.INT, Int32Array), _GL_TYPE_TO_ARRAY_TYP);\nvar NAME_TO_GL_TYPE = {\n  DOUBLE: _constants.GL_TYPE.DOUBLE,\n  FLOAT: _constants.GL_TYPE.FLOAT,\n  UNSIGNED_SHORT: _constants.GL_TYPE.UNSIGNED_SHORT,\n  UNSIGNED_INT: _constants.GL_TYPE.UNSIGNED_INT,\n  UNSIGNED_BYTE: _constants.GL_TYPE.UNSIGNED_BYTE,\n  BYTE: _constants.GL_TYPE.BYTE,\n  SHORT: _constants.GL_TYPE.SHORT,\n  INT: _constants.GL_TYPE.INT\n};\nvar ERR_TYPE_CONVERSION = 'Failed to convert GL type';\n\nvar GLType = function () {\n  function GLType() {\n    (0, _classCallCheck2[\"default\"])(this, GLType);\n  }\n\n  (0, _createClass2[\"default\"])(GLType, null, [{\n    key: \"fromTypedArray\",\n    value: function fromTypedArray(arrayOrType) {\n      arrayOrType = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n\n      for (var glType in GL_TYPE_TO_ARRAY_TYPE) {\n        var ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n\n        if (ArrayType === arrayOrType) {\n          return glType;\n        }\n      }\n\n      throw new Error(ERR_TYPE_CONVERSION);\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(name) {\n      var glType = NAME_TO_GL_TYPE[name];\n\n      if (!glType) {\n        throw new Error(ERR_TYPE_CONVERSION);\n      }\n\n      return glType;\n    }\n  }, {\n    key: \"getArrayType\",\n    value: function getArrayType(glType) {\n      var clamped = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      switch (glType) {\n        case _constants.GL_TYPE.UNSIGNED_SHORT_5_6_5:\n        case _constants.GL_TYPE.UNSIGNED_SHORT_4_4_4_4:\n        case _constants.GL_TYPE.UNSIGNED_SHORT_5_5_5_1:\n          return Uint16Array;\n\n        default:\n          var ArrayType = GL_TYPE_TO_ARRAY_TYPE[glType];\n\n          if (!ArrayType) {\n            throw new Error(ERR_TYPE_CONVERSION);\n          }\n\n          return ArrayType;\n      }\n    }\n  }, {\n    key: \"getByteSize\",\n    value: function getByteSize(glType) {\n      var ArrayType = GLType.getArrayType(glType);\n      return ArrayType.BYTES_PER_ELEMENT;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(glType) {\n      return Boolean(GLType.getArrayType(glType));\n    }\n  }, {\n    key: \"createTypedArray\",\n    value: function createTypedArray(glType, buffer) {\n      var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var length = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (length === undefined) {\n        length = (buffer.byteLength - byteOffset) / GLType.getByteSize(glType);\n      }\n\n      var ArrayType = GLType.getArrayType(glType);\n      return new ArrayType(buffer, byteOffset, length);\n    }\n  }]);\n  return GLType;\n}();\n\nexports[\"default\"] = GLType;\n//# sourceMappingURL=gl-type.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_defineProperty2","_constants","_GL_TYPE_TO_ARRAY_TYP","GL_TYPE_TO_ARRAY_TYPE","GL_TYPE","DOUBLE","Float64Array","FLOAT","Float32Array","UNSIGNED_SHORT","Uint16Array","UNSIGNED_INT","Uint32Array","UNSIGNED_BYTE","Uint8Array","BYTE","Int8Array","SHORT","Int16Array","INT","Int32Array","NAME_TO_GL_TYPE","GLType","key","fromTypedArray","arrayOrType","ArrayBuffer","isView","constructor","glType","ArrayType","Error","ERR_TYPE_CONVERSION","fromName","name","getArrayType","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","getByteSize","BYTES_PER_ELEMENT","validate","createTypedArray","buffer","byteOffset","arguments","length","undefined","byteLength"]
}
