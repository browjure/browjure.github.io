shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$lifecycle$props=function(global,require,module,exports){function compareProps(){var _ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},newProps=_ref.newProps,oldProps=_ref.oldProps,_ref$ignoreProps=_ref.ignoreProps;_ref$ignoreProps=void 0===_ref$ignoreProps?{}:_ref$ignoreProps;var _ref$propTypes=_ref.propTypes;_ref$propTypes=void 0===_ref$propTypes?{}:_ref$propTypes;_ref=_ref.triggerName;_ref=void 0===_ref?"props":_ref;if(oldProps===
newProps)return null;if("object"!==(0,_typeof2["default"])(newProps)||null===newProps||"object"!==(0,_typeof2["default"])(oldProps)||null===oldProps)return"".concat(_ref," changed shallowly");for(var _i=0,_Object$keys=Object.keys(newProps);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];if(!(key in _ref$ignoreProps)){if(!(key in oldProps))return"".concat(_ref,".").concat(key," added");var changed=comparePropValues(newProps[key],oldProps[key],_ref$propTypes[key]);if(changed)return"".concat(_ref,
".").concat(key," ").concat(changed)}}_i=0;for(_Object$keys=Object.keys(oldProps);_i<_Object$keys.length;_i++)if(key=_Object$keys[_i],!(key in _ref$ignoreProps)){if(!(key in newProps))return"".concat(_ref,".").concat(key," dropped");if(!Object.hasOwnProperty.call(newProps,key)&&(changed=comparePropValues(newProps[key],oldProps[key],_ref$propTypes[key])))return"".concat(_ref,".").concat(key," ").concat(changed)}return null}function comparePropValues(newProp,oldProp,propType){var equal=propType&&propType.equal;
return equal&&!equal(newProp,oldProp,propType)||!equal&&(equal=newProp&&oldProp&&newProp.equals)&&!equal.call(newProp,oldProp)?"changed deeply":equal||oldProp===newProp?null:"changed shallowly"}function diffExtensions(props,oldProps){if(null===oldProps)return"oldProps is null, initial diff";oldProps=oldProps.extensions;props=props.extensions;if(props===oldProps)return!1;if(props.length!==oldProps.length)return!0;for(var i=0;i<props.length;i++)if(!props[i].equals(oldProps[i]))return!0;return!1}function diffUpdateTrigger(props,
oldProps,triggerName){props=props.updateTriggers[triggerName];props=void 0===props||null===props?{}:props;oldProps=oldProps.updateTriggers[triggerName];oldProps=void 0===oldProps||null===oldProps?{}:oldProps;return compareProps({oldProps,newProps:props,triggerName})}function getPropTypes(props){return(props=(props=props[COMPONENT])&&props.constructor)?props._propTypes:{}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});
exports.validateProps=function(props){var propTypes=getPropTypes(props),propName;for(propName in propTypes){var propType=propTypes[propName],validate=propType.validate;if(validate&&!validate(props[propName],propType))throw Error("Invalid prop ".concat(propName,": ").concat(props[propName]));}};exports.diffProps=function(props,oldProps){var propsChangedReason=compareProps({newProps:props,oldProps,propTypes:getPropTypes(props),ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}});
if(null===oldProps)var dataChangedReason="oldProps is null, initial diff";else{dataChangedReason=null;var dataComparator=props.dataComparator,_dataDiff=props._dataDiff;dataComparator?dataComparator(props.data,oldProps.data)||(dataChangedReason="Data comparator detected a change"):props.data!==oldProps.data&&(dataChangedReason="A new data container was supplied");dataChangedReason&&_dataDiff&&(dataChangedReason=_dataDiff(props.data,oldProps.data)||dataChangedReason)}dataComparator=!1;if(!dataChangedReason)if(null===
oldProps)dataComparator="oldProps is null, initial diff";else if("all"in props.updateTriggers&&diffUpdateTrigger(props,oldProps,"all"))dataComparator={all:!0};else{dataComparator={};_dataDiff=!1;for(var triggerName in props.updateTriggers)"all"!==triggerName&&diffUpdateTrigger(props,oldProps,triggerName)&&(dataComparator[triggerName]=!0,_dataDiff=dataComparator);dataComparator=_dataDiff}triggerName=dataComparator;dataComparator=diffExtensions(props,oldProps);if(props.transitions){_dataDiff={};var propTypes=
getPropTypes(props),key;for(key in props.transitions){var propType=propTypes[key],type=propType&&propType.type;"number"!==type&&"color"!==type&&"array"!==type||!comparePropValues(props[key],oldProps[key],propType)||(_dataDiff[key]=!0)}props=_dataDiff}else props=null;return{dataChanged:dataChangedReason,propsChanged:propsChangedReason,updateTriggersChanged:triggerName,extensionsChanged:dataComparator,transitionsChanged:props}};exports.compareProps=compareProps;var _typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),
COMPONENT=require("module$node_modules$$deck_DOT_gl$core$dist$es5$lifecycle$constants").PROP_SYMBOLS.COMPONENT}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$lifecycle$props.js.map
