shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$controllers$transition_manager=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=exports.TRANSITION_EVENTS=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),
_transition=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$transitions$transition")),noop=function(){},TRANSITION_EVENTS={BREAK:1,SNAP_TO_END:2,IGNORE:3};exports.TRANSITION_EVENTS=TRANSITION_EVENTS;var DEFAULT_PROPS={transitionEasing:function(t){return t},transitionInterruption:TRANSITION_EVENTS.BREAK,onTransitionStart:noop,onTransitionInterrupt:noop,onTransitionEnd:noop};require=function(){function TransitionManager(ControllerState){var props=1<arguments.length&&void 0!==arguments[1]?
arguments[1]:{};(0,_classCallCheck2["default"])(this,TransitionManager);this.ControllerState=ControllerState;this.props=Object.assign({},DEFAULT_PROPS,props);this.propsInTransition=null;this.transition=new _transition["default"](props.timeline);this.onViewStateChange=props.onViewStateChange||noop;this.onStateChange=props.onStateChange||noop;this._onTransitionUpdate=this._onTransitionUpdate.bind(this)}(0,_createClass2["default"])(TransitionManager,[{key:"finalize",value:function(){this.transition.cancel()}},
{key:"getViewportInTransition",value:function(){return this.propsInTransition}},{key:"processViewStateChange",value:function(nextProps){var transitionTriggered=!1,currentProps=this.props;this.props=nextProps=Object.assign({},DEFAULT_PROPS,nextProps);if(this._shouldIgnoreViewportChange(currentProps,nextProps))return transitionTriggered;if(this._isTransitionEnabled(nextProps)){transitionTriggered=this.transition.settings;var endProps=transitionTriggered.endProps;currentProps=Object.assign({},currentProps,
transitionTriggered.interruption===TRANSITION_EVENTS.SNAP_TO_END?endProps:this.propsInTransition||currentProps);this._triggerTransition(currentProps,nextProps);transitionTriggered=!0}else this.transition.cancel();return transitionTriggered}},{key:"updateTransition",value:function(){this.transition.update()}},{key:"_isTransitionEnabled",value:function(props){var transitionDuration=props.transitionDuration;props=props.transitionInterpolator;return(0<transitionDuration||"auto"===transitionDuration)&&
!!props}},{key:"_isUpdateDueToCurrentTransition",value:function(props){return this.transition.inProgress?this.transition.settings.interpolator.arePropsEqual(props,this.propsInTransition):!1}},{key:"_shouldIgnoreViewportChange",value:function(currentProps,nextProps){return this.transition.inProgress?this.transition.settings.interruption===TRANSITION_EVENTS.IGNORE||this._isUpdateDueToCurrentTransition(nextProps):this._isTransitionEnabled(nextProps)?nextProps.transitionInterpolator.arePropsEqual(currentProps,
nextProps):!0}},{key:"_triggerTransition",value:function(startProps,endProps){var startViewstate=new this.ControllerState(startProps);startViewstate=(new this.ControllerState(endProps)).shortestPathFrom(startViewstate);var transitionInterpolator=endProps.transitionInterpolator;transitionInterpolator=transitionInterpolator.getDuration?transitionInterpolator.getDuration(startProps,endProps):endProps.transitionDuration;0!==transitionInterpolator&&(startProps=endProps.transitionInterpolator.initializeProps(startProps,
startViewstate),this.propsInTransition={},this.duration=transitionInterpolator,this.transition.start({duration:transitionInterpolator,easing:endProps.transitionEasing,interpolator:endProps.transitionInterpolator,interruption:endProps.transitionInterruption,startProps:startProps.start,endProps:startProps.end,onStart:endProps.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(endProps.onTransitionInterrupt),onEnd:this._onTransitionEnd(endProps.onTransitionEnd)}),this.onStateChange({inTransition:!0}),
this.updateTransition())}},{key:"_onTransitionEnd",value:function(callback){var _this=this;return function(transition){_this.propsInTransition=null;_this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1});callback(transition)}}},{key:"_onTransitionUpdate",value:function(transition){var _transition$settings=transition.settings,interpolator=_transition$settings.interpolator,startProps=_transition$settings.startProps,endProps=_transition$settings.endProps,easing=_transition$settings.easing;
transition=easing(transition.time/_transition$settings.duration);interpolator=interpolator.interpolateProps(startProps,endProps,transition);this.propsInTransition=(new this.ControllerState(Object.assign({},this.props,interpolator))).getViewportProps();this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})}}]);return TransitionManager}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$controllers$transition_manager.js.map
