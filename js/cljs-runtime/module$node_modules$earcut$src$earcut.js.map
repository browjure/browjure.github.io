{
"version":3,
"file":"module$node_modules$earcut$src$earcut.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/earcut/src/earcut.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$earcut$src$earcut\"] = function(global,require,module,exports) {\n'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","earcut","data","holeIndices","dim","hasHoles","length","outerLen","outerNode","linkedList","triangles","next","prev","maxX","queue","len","i","start","end","list","steiner","push","getLeftmost","sort","compareX","findHoleBridge","hole","b","splitPolygon","filterPoints","minX","minY","maxY","x","y","invSize","Math","max","earcutLinked","clockwise","signedArea","last","insertNode","equals","removeNode","again","p","area","ear","pass","z","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","tail","q","e","stop","a","c","pointInTriangle","intersects","locallyInside","inside","px","py","isEarHashed","maxTX","maxTY","minZ","minTX","minTY","maxZ","n","hx","hy","qx","Infinity","m","mx","my","tanMin","tan","abs","leftmost","ax","ay","bx","by","cx","cy","r","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","min","num","a2","Node","b2","an","bp","sum","j","default","deviation","earcut.deviation","polygonArea","trianglesArea","flatten","earcut.flatten","result","vertices","holes","dimensions","holeIndex","d"]
}
