shadow$provide.module$node_modules$react_map_gl$dist$es5$utils$map_controller=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=exports.LINEAR_TRANSITION_PROPS=void 0;var _classCallCheck2=module(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=module(require("module$node_modules$$babel$runtime$helpers$createClass")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_mapState=module(require("module$node_modules$react_map_gl$dist$es5$utils$map_state")),_transition=require("module$node_modules$react_map_gl$dist$es5$utils$transition$index"),
_transitionManager=global(require("module$node_modules$react_map_gl$dist$es5$utils$transition_manager")),NO_TRANSITION_PROPS={transitionDuration:0},LINEAR_TRANSITION_PROPS={transitionDuration:300,transitionEasing:function(t){return t},transitionInterpolator:new _transition.LinearInterpolator,transitionInterruption:_transitionManager.TRANSITION_EVENTS.BREAK};exports.LINEAR_TRANSITION_PROPS=LINEAR_TRANSITION_PROPS;var INERTIA_EASING=function(t){return 1-(1-t)*(1-t)},JSCompiler_object_inline_WHEEL_4314=
["wheel"],JSCompiler_object_inline_PAN_4315=["panstart","panmove","panend"],JSCompiler_object_inline_PINCH_4316=["pinchstart","pinchmove","pinchend"],JSCompiler_object_inline_TRIPLE_PAN_4317=["tripanstart","tripanmove","tripanend"],JSCompiler_object_inline_DOUBLE_TAP_4318=["doubletap"],JSCompiler_object_inline_KEYBOARD_4319=["keydown"];require=function(){function MapController(){var _this=this;(0,_classCallCheck2["default"])(this,MapController);(0,_defineProperty2["default"])(this,"events",[]);(0,
_defineProperty2["default"])(this,"scrollZoom",!0);(0,_defineProperty2["default"])(this,"dragPan",!0);(0,_defineProperty2["default"])(this,"dragRotate",!0);(0,_defineProperty2["default"])(this,"doubleClickZoom",!0);(0,_defineProperty2["default"])(this,"touchZoom",!0);(0,_defineProperty2["default"])(this,"touchRotate",!1);(0,_defineProperty2["default"])(this,"keyboard",!0);(0,_defineProperty2["default"])(this,"_interactionState",{isDragging:!1});(0,_defineProperty2["default"])(this,"_events",{});(0,
_defineProperty2["default"])(this,"_setInteractionState",function(newState){Object.assign(_this._interactionState,newState);if(_this.onStateChange)_this.onStateChange(_this._interactionState)});(0,_defineProperty2["default"])(this,"_onTransition",function(newViewport,oldViewport){_this.onViewportChange(newViewport,_this._interactionState,oldViewport)});this.handleEvent=this.handleEvent.bind(this);this._transitionManager=new _transitionManager["default"]({onViewportChange:this._onTransition,onStateChange:this._setInteractionState})}
(0,_createClass2["default"])(MapController,[{key:"handleEvent",value:function(event){this.mapState=this.getMapState();var eventStartBlocked=this._eventStartBlocked;switch(event.type){case "panstart":return eventStartBlocked?!1:this._onPanStart(event);case "panmove":return this._onPan(event);case "panend":return this._onPanEnd(event);case "pinchstart":return eventStartBlocked?!1:this._onPinchStart(event);case "pinchmove":return this._onPinch(event);case "pinchend":return this._onPinchEnd(event);case "tripanstart":return eventStartBlocked?
!1:this._onTriplePanStart(event);case "tripanmove":return this._onTriplePan(event);case "tripanend":return this._onTriplePanEnd(event);case "doubletap":return this._onDoubleTap(event);case "wheel":return this._onWheel(event);case "keydown":return this._onKeyDown(event);default:return!1}}},{key:"getCenter",value:function(event){event=event.offsetCenter;return[event.x,event.y]}},{key:"isFunctionKeyPressed",value:function(event){event=event.srcEvent;return!!(event.metaKey||event.altKey||event.ctrlKey||
event.shiftKey)}},{key:"blockEvents",value:function(timeout){var _this2=this,timer=setTimeout(function(){_this2._eventStartBlocked===timer&&(_this2._eventStartBlocked=null)},timeout);this._eventStartBlocked=timer}},{key:"updateViewport",value:function(newMapState,extraProps,interactionState){var oldViewport=this.mapState instanceof _mapState["default"]?this.mapState.getViewportProps():this.mapState,newViewport=_objectSpread(_objectSpread({},newMapState.getViewportProps()),extraProps);extraProps=Object.keys(newViewport).some(function(key){return oldViewport[key]!==
newViewport[key]});this._state=newMapState.getState();this._setInteractionState(interactionState);if(extraProps)this.onViewportChange(newViewport,this._interactionState,oldViewport)}},{key:"getMapState",value:function(overrides){return new _mapState["default"](_objectSpread(_objectSpread(_objectSpread({},this.mapStateProps),this._state),overrides))}},{key:"isDragging",value:function(){return this._interactionState.isDragging}},{key:"setOptions",value:function(options){var onStateChange=options.onStateChange,
_options$eventManager=options.eventManager;_options$eventManager=void 0===_options$eventManager?this.eventManager:_options$eventManager;var _options$isInteractiv=options.isInteractive;_options$isInteractiv=void 0===_options$isInteractiv?!0:_options$isInteractiv;var _options$scrollZoom=options.scrollZoom;_options$scrollZoom=void 0===_options$scrollZoom?this.scrollZoom:_options$scrollZoom;var _options$dragPan=options.dragPan;_options$dragPan=void 0===_options$dragPan?this.dragPan:_options$dragPan;var _options$dragRotate=
options.dragRotate;_options$dragRotate=void 0===_options$dragRotate?this.dragRotate:_options$dragRotate;var _options$doubleClickZ=options.doubleClickZoom;_options$doubleClickZ=void 0===_options$doubleClickZ?this.doubleClickZoom:_options$doubleClickZ;var _options$touchZoom=options.touchZoom;_options$touchZoom=void 0===_options$touchZoom?this.touchZoom:_options$touchZoom;var _options$touchRotate=options.touchRotate;_options$touchRotate=void 0===_options$touchRotate?this.touchRotate:_options$touchRotate;
var _options$keyboard=options.keyboard;_options$keyboard=void 0===_options$keyboard?this.keyboard:_options$keyboard;this.onViewportChange=options.onViewportChange;this.onStateChange=onStateChange;onStateChange=this.mapStateProps||{};var dimensionChanged=onStateChange.height!==options.height||onStateChange.width!==options.width;this.mapStateProps=options;dimensionChanged&&(this.mapState=onStateChange,this.updateViewport(new _mapState["default"](options)));this._transitionManager.processViewportChange(options);
this.eventManager!==_options$eventManager&&(this.eventManager=_options$eventManager,this._events={},this.toggleEvents(this.events,!0));this.toggleEvents(JSCompiler_object_inline_WHEEL_4314,_options$isInteractiv&&!!_options$scrollZoom);this.toggleEvents(JSCompiler_object_inline_PAN_4315,_options$isInteractiv&&!(!_options$dragPan&&!_options$dragRotate));this.toggleEvents(JSCompiler_object_inline_PINCH_4316,_options$isInteractiv&&!(!_options$touchZoom&&!_options$touchRotate));this.toggleEvents(JSCompiler_object_inline_TRIPLE_PAN_4317,
_options$isInteractiv&&!!_options$touchRotate);this.toggleEvents(JSCompiler_object_inline_DOUBLE_TAP_4318,_options$isInteractiv&&!!_options$doubleClickZ);this.toggleEvents(JSCompiler_object_inline_KEYBOARD_4319,_options$isInteractiv&&!!_options$keyboard);this.scrollZoom=_options$scrollZoom;this.dragPan=_options$dragPan;this.dragRotate=_options$dragRotate;this.doubleClickZoom=_options$doubleClickZ;this.touchZoom=_options$touchZoom;this.touchRotate=_options$touchRotate;this.keyboard=_options$keyboard}},
{key:"toggleEvents",value:function(eventNames,enabled){var _this3=this;this.eventManager&&eventNames.forEach(function(eventName){if(_this3._events[eventName]!==enabled)if(_this3._events[eventName]=enabled)_this3.eventManager.on(eventName,_this3.handleEvent);else _this3.eventManager.off(eventName,_this3.handleEvent)})}},{key:"_onPanStart",value:function(event){var pos=this.getCenter(event);event=(this._panRotate=this.isFunctionKeyPressed(event)||event.rightButton)?this.mapState.rotateStart({pos}):
this.mapState.panStart({pos});this.updateViewport(event,NO_TRANSITION_PROPS,{isDragging:!0});return!0}},{key:"_onPan",value:function(event){return this.isDragging()?this._panRotate?this._onPanRotate(event):this._onPanMove(event):!1}},{key:"_onPanEnd",value:function(event){return this.isDragging()?this._panRotate?this._onPanRotateEnd(event):this._onPanMoveEnd(event):!1}},{key:"_onPanMove",value:function(event){if(!this.dragPan)return!1;event=this.getCenter(event);event=this.mapState.pan({pos:event});
this.updateViewport(event,NO_TRANSITION_PROPS,{isPanning:!0});return!0}},{key:"_onPanMoveEnd",value:function(event){if(this.dragPan){var _this$dragPan$inertia=this.dragPan.inertia;if((_this$dragPan$inertia=void 0===_this$dragPan$inertia?300:_this$dragPan$inertia)&&event.velocity){var pos=this.getCenter(event);event=this.mapState.pan({pos:[pos[0]+event.velocityX*_this$dragPan$inertia/2,pos[1]+event.velocityY*_this$dragPan$inertia/2]}).panEnd();this.updateViewport(event,_objectSpread(_objectSpread({},
LINEAR_TRANSITION_PROPS),{},{transitionDuration:_this$dragPan$inertia,transitionEasing:INERTIA_EASING}),{isDragging:!1,isPanning:!0});return!0}}event=this.mapState.panEnd();this.updateViewport(event,null,{isDragging:!1,isPanning:!1});return!0}},{key:"_onPanRotate",value:function(event){if(!this.dragRotate)return!1;event=this.getCenter(event);event=this.mapState.rotate({pos:event});this.updateViewport(event,NO_TRANSITION_PROPS,{isRotating:!0});return!0}},{key:"_onPanRotateEnd",value:function(event){if(this.dragRotate){var _this$dragRotate$iner=
this.dragRotate.inertia;if((_this$dragRotate$iner=void 0===_this$dragRotate$iner?300:_this$dragRotate$iner)&&event.velocity){var pos=this.getCenter(event);event=this.mapState.rotate({pos:[pos[0]+event.velocityX*_this$dragRotate$iner/2,pos[1]+event.velocityY*_this$dragRotate$iner/2]}).rotateEnd();this.updateViewport(event,_objectSpread(_objectSpread({},LINEAR_TRANSITION_PROPS),{},{transitionDuration:_this$dragRotate$iner,transitionEasing:INERTIA_EASING}),{isDragging:!1,isRotating:!0});return!0}}event=
this.mapState.panEnd();this.updateViewport(event,null,{isDragging:!1,isRotating:!1});return!0}},{key:"_onWheel",value:function(event){if(!this.scrollZoom)return!1;var _this$scrollZoom=this.scrollZoom,_this$scrollZoom$spee=_this$scrollZoom.speed;_this$scrollZoom$spee=void 0===_this$scrollZoom$spee?.01:_this$scrollZoom$spee;_this$scrollZoom=_this$scrollZoom.smooth;_this$scrollZoom=void 0===_this$scrollZoom?!1:_this$scrollZoom;event.preventDefault();var pos=this.getCenter(event);event=event.delta;_this$scrollZoom$spee=
2/(1+Math.exp(-Math.abs(event*_this$scrollZoom$spee)));0>event&&0!==_this$scrollZoom$spee&&(_this$scrollZoom$spee=1/_this$scrollZoom$spee);event=this.mapState.zoom({pos,scale:_this$scrollZoom$spee});this.updateViewport(event,_objectSpread(_objectSpread({},LINEAR_TRANSITION_PROPS),{},{transitionInterpolator:new _transition.LinearInterpolator({around:pos}),transitionDuration:_this$scrollZoom?250:1}),{isPanning:!0,isZooming:!0});return!0}},{key:"_onPinchStart",value:function(event){var pos=this.getCenter(event);
pos=this.mapState.zoomStart({pos}).rotateStart({pos});this._startPinchRotation=event.rotation;this._lastPinchEvent=event;this.updateViewport(pos,NO_TRANSITION_PROPS,{isDragging:!0});return!0}},{key:"_onPinch",value:function(event){if(!this.isDragging()||!this.touchZoom&&!this.touchRotate)return!1;var newMapState=this.mapState;if(this.touchZoom){var scale=event.scale,pos=this.getCenter(event);newMapState=newMapState.zoom({pos,scale})}this.touchRotate&&(newMapState=newMapState.rotate({deltaAngleX:this._startPinchRotation-
event.rotation}));this.updateViewport(newMapState,NO_TRANSITION_PROPS,{isDragging:!0,isPanning:!!this.touchZoom,isZooming:!!this.touchZoom,isRotating:!!this.touchRotate});this._lastPinchEvent=event;return!0}},{key:"_onPinchEnd",value:function(event){if(!this.isDragging())return!1;if(this.touchZoom){var _this$touchZoom$inert=this.touchZoom.inertia;_this$touchZoom$inert=void 0===_this$touchZoom$inert?300:_this$touchZoom$inert;var _lastPinchEvent=this._lastPinchEvent;if(_this$touchZoom$inert&&_lastPinchEvent&&
event.scale!==_lastPinchEvent.scale){var pos=this.getCenter(event),_newMapState=this.mapState.rotateEnd(),z=Math.log2(event.scale);_newMapState=_newMapState.zoom({pos,scale:Math.pow(2,z+(z-Math.log2(_lastPinchEvent.scale))/(event.deltaTime-_lastPinchEvent.deltaTime)*_this$touchZoom$inert/2)}).zoomEnd();this.updateViewport(_newMapState,_objectSpread(_objectSpread({},LINEAR_TRANSITION_PROPS),{},{transitionInterpolator:new _transition.LinearInterpolator({around:pos}),transitionDuration:_this$touchZoom$inert,
transitionEasing:INERTIA_EASING}),{isDragging:!1,isPanning:!!this.touchZoom,isZooming:!!this.touchZoom,isRotating:!1});this.blockEvents(_this$touchZoom$inert);return!0}}event=this.mapState.zoomEnd().rotateEnd();this._state.startPinchRotation=0;this.updateViewport(event,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1});this._lastPinchEvent=this._startPinchRotation=null;return!0}},{key:"_onTriplePanStart",value:function(event){event=this.getCenter(event);event=this.mapState.rotateStart({pos:event});
this.updateViewport(event,NO_TRANSITION_PROPS,{isDragging:!0});return!0}},{key:"_onTriplePan",value:function(event){if(!this.isDragging()||!this.touchRotate)return!1;var pos=this.getCenter(event);pos[0]-=event.deltaX;event=this.mapState.rotate({pos});this.updateViewport(event,NO_TRANSITION_PROPS,{isRotating:!0});return!0}},{key:"_onTriplePanEnd",value:function(event){if(!this.isDragging())return!1;if(this.touchRotate){var _this$touchRotate$ine=this.touchRotate.inertia;if((_this$touchRotate$ine=void 0===
_this$touchRotate$ine?300:_this$touchRotate$ine)&&event.velocityY){var pos=this.getCenter(event);event=[pos[0],pos[1]+=event.velocityY*_this$touchRotate$ine/2];event=this.mapState.rotate({pos:event});this.updateViewport(event,_objectSpread(_objectSpread({},LINEAR_TRANSITION_PROPS),{},{transitionDuration:_this$touchRotate$ine,transitionEasing:INERTIA_EASING}),{isDragging:!1,isRotating:!0});this.blockEvents(_this$touchRotate$ine);return!1}}_this$touchRotate$ine=this.mapState.rotateEnd();this.updateViewport(_this$touchRotate$ine,
null,{isDragging:!1,isRotating:!1});return!0}},{key:"_onDoubleTap",value:function(event){if(!this.doubleClickZoom)return!1;var pos=this.getCenter(event);event=this.isFunctionKeyPressed(event);event=this.mapState.zoom({pos,scale:event?.5:2});this.updateViewport(event,Object.assign({},LINEAR_TRANSITION_PROPS,{transitionInterpolator:new _transition.LinearInterpolator({around:pos})}),{isZooming:!0});return!0}},{key:"_onKeyDown",value:function(event){if(!this.keyboard)return!1;var funcKey=this.isFunctionKeyPressed(event),
_this$keyboard=this.keyboard,_this$keyboard$zoomSp=_this$keyboard.zoomSpeed;_this$keyboard$zoomSp=void 0===_this$keyboard$zoomSp?2:_this$keyboard$zoomSp;var _this$keyboard$moveSp=_this$keyboard.moveSpeed;_this$keyboard$moveSp=void 0===_this$keyboard$moveSp?100:_this$keyboard$moveSp;var _this$keyboard$rotate=_this$keyboard.rotateSpeedX;_this$keyboard$rotate=void 0===_this$keyboard$rotate?15:_this$keyboard$rotate;_this$keyboard=_this$keyboard.rotateSpeedY;_this$keyboard=void 0===_this$keyboard?10:_this$keyboard;
var mapStateProps=this.mapStateProps;switch(event.srcEvent.keyCode){case 189:event=funcKey?this.getMapState({zoom:mapStateProps.zoom-Math.log2(_this$keyboard$zoomSp)-1}):this.getMapState({zoom:mapStateProps.zoom-Math.log2(_this$keyboard$zoomSp)});break;case 187:event=funcKey?this.getMapState({zoom:mapStateProps.zoom+Math.log2(_this$keyboard$zoomSp)+1}):this.getMapState({zoom:mapStateProps.zoom+Math.log2(_this$keyboard$zoomSp)});break;case 37:event=funcKey?this.getMapState({bearing:mapStateProps.bearing-
_this$keyboard$rotate}):this.mapState.pan({pos:[_this$keyboard$moveSp,0],startPos:[0,0]});break;case 39:event=funcKey?this.getMapState({bearing:mapStateProps.bearing+_this$keyboard$rotate}):this.mapState.pan({pos:[-_this$keyboard$moveSp,0],startPos:[0,0]});break;case 38:event=funcKey?this.getMapState({pitch:mapStateProps.pitch+_this$keyboard}):this.mapState.pan({pos:[0,_this$keyboard$moveSp],startPos:[0,0]});break;case 40:event=funcKey?this.getMapState({pitch:mapStateProps.pitch-_this$keyboard}):
this.mapState.pan({pos:[0,-_this$keyboard$moveSp],startPos:[0,0]});break;default:return!1}return this.updateViewport(event,LINEAR_TRANSITION_PROPS)}}]);return MapController}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$utils$map_controller.js.map
