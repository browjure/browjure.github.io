shadow$provide.module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$utils$matrix=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e;
},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=o[Symbol.iterator]()},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,
minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function calculateTransformMatrix(targetMatrix,
orientation,scale){var pitch=orientation[0]*RADIAN_PER_DEGREE,yaw=orientation[1]*RADIAN_PER_DEGREE,roll=orientation[2]*RADIAN_PER_DEGREE;orientation=Math.sin(roll);var sp=Math.sin(pitch),sw=Math.sin(yaw);roll=Math.cos(roll);pitch=Math.cos(pitch);yaw=Math.cos(yaw);var scx=scale[0],scy=scale[1];scale=scale[2];targetMatrix[0]=scx*yaw*pitch;targetMatrix[1]=scx*sw*pitch;targetMatrix[2]=scx*-sp;targetMatrix[3]=scy*(-sw*roll+yaw*sp*orientation);targetMatrix[4]=scy*(yaw*roll+sw*sp*orientation);targetMatrix[5]=
scy*pitch*orientation;targetMatrix[6]=scale*(sw*orientation+yaw*sp*roll);targetMatrix[7]=scale*(-yaw*orientation+sw*sp*roll);targetMatrix[8]=scale*pitch*roll}function getExtendedMat3FromMat4(mat4){mat4[0]=mat4[0];mat4[1]=mat4[1];mat4[2]=mat4[2];mat4[3]=mat4[4];mat4[4]=mat4[5];mat4[5]=mat4[6];mat4[6]=mat4[8];mat4[7]=mat4[9];mat4[8]=mat4[10];mat4[9]=mat4[12];mat4[10]=mat4[13];mat4[11]=mat4[14];return mat4.subarray(0,12)}Object.defineProperty(exports,"__esModule",{value:!0});exports.shouldComposeModelMatrix=
function(viewport,coordinateSystem){return coordinateSystem===_core.COORDINATE_SYSTEM.CARTESIAN||coordinateSystem===_core.COORDINATE_SYSTEM.METER_OFFSETS||coordinateSystem===_core.COORDINATE_SYSTEM.DEFAULT&&!viewport.isGeospatial};exports.MATRIX_ATTRIBUTES=void 0;var _core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),RADIAN_PER_DEGREE=Math.PI/180,modelMatrix=new Float32Array(16),valueArray=new Float32Array(12);exports.MATRIX_ATTRIBUTES={size:12,accessor:["getOrientation","getScale",
"getTranslation","getTransformMatrix"],shaderAttributes:{instanceModelMatrix__LOCATION_0:{size:3,elementOffset:0},instanceModelMatrix__LOCATION_1:{size:3,elementOffset:3},instanceModelMatrix__LOCATION_2:{size:3,elementOffset:6},instanceTranslation:{size:3,elementOffset:9}},update:function(attribute,_ref){var startRow=_ref.startRow,endRow=_ref.endRow,_this$props=this.props,data=_this$props.data;_ref=_this$props.getOrientation;var getScale=_this$props.getScale,getTranslation=_this$props.getTranslation;
_this$props=_this$props.getTransformMatrix;var arrayMatrix=Array.isArray(_this$props),constantMatrix=arrayMatrix&&16===_this$props.length,constantScale=Array.isArray(getScale),constantOrientation=Array.isArray(_ref),constantTranslation=Array.isArray(getTranslation);arrayMatrix=constantMatrix||!arrayMatrix&&!!_this$props(data[0]);attribute.constant=arrayMatrix?constantMatrix:constantOrientation&&constantScale&&constantTranslation;var instanceModelMatrixData=attribute.value;if(attribute.constant){if(arrayMatrix){modelMatrix.set(_this$props);
var matrix=getExtendedMat3FromMat4(modelMatrix)}else matrix=valueArray,calculateTransformMatrix(matrix,_ref,getScale),matrix.set(getTranslation,9);attribute.value=new Float32Array(matrix)}else{attribute=startRow*attribute.size;endRow=(0,_core.createIterable)(data,startRow,endRow);startRow=endRow.objectInfo;endRow=_createForOfIteratorHelper(endRow.iterable);try{for(endRow.s();!(matrix=endRow.n()).done;){var object=matrix.value;startRow.index++;data=void 0;if(arrayMatrix)modelMatrix.set(constantMatrix?
_this$props:_this$props(object,startRow)),data=getExtendedMat3FromMat4(modelMatrix);else{data=valueArray;var _orientation=constantOrientation?_ref:_ref(object,startRow),_scale=constantScale?getScale:getScale(object,startRow);calculateTransformMatrix(data,_orientation,_scale);data.set(constantTranslation?getTranslation:getTranslation(object,startRow),9)}instanceModelMatrixData[attribute++]=data[0];instanceModelMatrixData[attribute++]=data[1];instanceModelMatrixData[attribute++]=data[2];instanceModelMatrixData[attribute++]=
data[3];instanceModelMatrixData[attribute++]=data[4];instanceModelMatrixData[attribute++]=data[5];instanceModelMatrixData[attribute++]=data[6];instanceModelMatrixData[attribute++]=data[7];instanceModelMatrixData[attribute++]=data[8];instanceModelMatrixData[attribute++]=data[9];instanceModelMatrixData[attribute++]=data[10];instanceModelMatrixData[attribute++]=data[11]}}catch(err){endRow.e(err)}finally{endRow.f()}}}}}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$utils$matrix.js.map
