shadow$provide.module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$gpu_grid_layer$gpu_grid_layer=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_get2=global(require("module$node_modules$$babel$runtime$helpers$get")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),
_core=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_core2=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),_gpuGridAggregator=global(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$gpu_grid_aggregation$gpu_grid_aggregator")),_aggregationOperationUtils=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$aggregation_operation_utils"),_colorUtils=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$color_utils"),
_gpuGridCellLayer=global(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$gpu_grid_layer$gpu_grid_cell_layer")),_gridAggregator=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$cpu_grid_layer$grid_aggregator");global=global(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$grid_aggregation_layer"));var _gridAggregationUtils=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$grid_aggregation_utils");require={colorDomain:null,
colorRange:_colorUtils.defaultColorRange,getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",elevationDomain:null,elevationRange:[0,1E3],getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},cellSize:{type:"number",min:1,max:1E3,value:1E3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:function(x){return x.position}},extruded:!1,material:!0};var DIMENSIONS={data:{props:["cellSize","colorAggregation",
"elevationAggregation"]}};global=function(_GridAggregationLayer){function GPUGridLayer(){(0,_classCallCheck2["default"])(this,GPUGridLayer);return _super.apply(this,arguments)}(0,_inherits2["default"])(GPUGridLayer,_GridAggregationLayer);var _super=_createSuper(GPUGridLayer);(0,_createClass2["default"])(GPUGridLayer,[{key:"initializeState",value:function(){var _attributeManager$add,gl=this.context.gl,isSupported=_gpuGridAggregator["default"].isSupported(gl);isSupported||_core2.log.error("GPUGridLayer is not supported on this browser, use GridLayer instead")();
(0,_get2["default"])((0,_getPrototypeOf2["default"])(GPUGridLayer.prototype),"initializeState",this).call(this,{dimensions:DIMENSIONS});this.setState({gpuAggregation:!0,projectPoints:!1,isSupported,weights:{color:{needMin:!0,needMax:!0,combineMaxMin:!0,maxMinBuffer:new _core.Buffer(gl,{byteLength:16,accessor:{size:4,type:5126,divisor:1}})},elevation:{needMin:!0,needMax:!0,combineMaxMin:!0,maxMinBuffer:new _core.Buffer(gl,{byteLength:16,accessor:{size:4,type:5126,divisor:1}})}},positionAttributeName:"positions"});
this.getAttributeManager().add((_attributeManager$add={},(0,_defineProperty2["default"])(_attributeManager$add,"positions",{size:3,accessor:"getPosition",type:5130,fp64:this.use64bitPositions()}),(0,_defineProperty2["default"])(_attributeManager$add,"color",{size:3,accessor:"getColorWeight"}),(0,_defineProperty2["default"])(_attributeManager$add,"elevation",{size:3,accessor:"getElevationWeight"}),_attributeManager$add))}},{key:"updateState",value:function(opts){!1!==this.state.isSupported&&((0,_get2["default"])((0,
_getPrototypeOf2["default"])(GPUGridLayer.prototype),"updateState",this).call(this,opts),this.state.aggregationDirty&&this.setState({gridHash:null}))}},{key:"getHashKeyForIndex",value:function(index){var _this$state=this.state,boundingBox=_this$state.boundingBox,gridOffset=_this$state.gridOffset;_this$state=[_this$state.numCol,_this$state.numRow];boundingBox=[boundingBox.xMin,boundingBox.yMin];gridOffset=[gridOffset.xOffset,gridOffset.yOffset];var yIndex=Math.floor(index/_this$state[0]);index=Math.floor(((index-
yIndex*_this$state[0])*gridOffset[0]+boundingBox[0]+180+gridOffset[0]/2)/gridOffset[0]);return"".concat(Math.floor((yIndex*gridOffset[1]+boundingBox[1]+90+gridOffset[1]/2)/gridOffset[1]),"-").concat(index)}},{key:"getPositionForIndex",value:function(index){var _this$state2=this.state,boundingBox=_this$state2.boundingBox,gridOffset=_this$state2.gridOffset;_this$state2=[_this$state2.numCol,_this$state2.numRow];boundingBox=[boundingBox.xMin,boundingBox.yMin];gridOffset=[gridOffset.xOffset,gridOffset.yOffset];
var yIndex=Math.floor(index/_this$state2[0]);return[(index-yIndex*_this$state2[0])*gridOffset[0]+boundingBox[0],yIndex*gridOffset[1]+boundingBox[1]]}},{key:"getPickingInfo",value:function(_ref){var info=_ref.info,mode=_ref.mode;_ref=info.index;var object=null;if(0<=_ref){var gpuGridAggregator=this.state.gpuGridAggregator;object=this.getPositionForIndex(_ref);var colorInfo=_gpuGridAggregator["default"].getAggregationData(Object.assign({pixelIndex:_ref},gpuGridAggregator.getData("color")));gpuGridAggregator=
_gpuGridAggregator["default"].getAggregationData(Object.assign({pixelIndex:_ref},gpuGridAggregator.getData("elevation")));object={colorValue:colorInfo.cellWeight,elevationValue:gpuGridAggregator.cellWeight,count:colorInfo.cellCount||gpuGridAggregator.cellCount,position:object,totalCount:colorInfo.totalCount||gpuGridAggregator.totalCount};if("hover"!==mode){mode=this.props;colorInfo=this.state.gridHash;if(!colorInfo){var _this$state3=this.state;colorInfo=_this$state3.gridOffset;gpuGridAggregator=_this$state3.translation;
_this$state3=_this$state3.boundingBox;var viewport=this.context.viewport,attributes=this.getAttributes();colorInfo=(0,_gridAggregator.pointToDensityGridDataCPU)(mode,{gridOffset:colorInfo,attributes,viewport,translation:gpuGridAggregator,boundingBox:_this$state3}).gridHash;this.setState({gridHash:colorInfo})}_ref=this.getHashKeyForIndex(_ref);Object.assign(object,colorInfo[_ref])}}return Object.assign(info,{picked:!!object,object})}},{key:"renderLayers",value:function(){if(!this.state.isSupported)return null;
var _this$props=this.props,elevationScale=_this$props.elevationScale,extruded=_this$props.extruded,cellSizeMeters=_this$props.cellSize,coverage=_this$props.coverage,material=_this$props.material,elevationRange=_this$props.elevationRange,colorDomain=_this$props.colorDomain;_this$props=_this$props.elevationDomain;var _this$state4=this.state,weights=_this$state4.weights,numRow=_this$state4.numRow,numCol=_this$state4.numCol,gridOrigin=_this$state4.gridOrigin;_this$state4=_this$state4.gridOffset;var color=
weights.color;weights=weights.elevation;var colorRange=(0,_colorUtils.colorRangeToFlatArray)(this.props.colorRange);return new (this.getSubLayerClass("gpu-grid-cell",_gpuGridCellLayer["default"]))({gridSize:[numCol,numRow],gridOrigin,gridOffset:[_this$state4.xOffset,_this$state4.yOffset],colorRange,elevationRange,colorDomain,elevationDomain:_this$props,cellSize:cellSizeMeters,coverage,material,elevationScale,extruded},this.getSubLayerProps({id:"gpu-grid-cell"}),{data:{attributes:{colors:color.aggregationBuffer,
elevations:weights.aggregationBuffer}},colorMaxMinBuffer:color.maxMinBuffer,elevationMaxMinBuffer:weights.maxMinBuffer,numInstances:numCol*numRow})}},{key:"finalizeState",value:function(){var _this$state$weights=this.state.weights;[_this$state$weights.color,_this$state$weights.elevation].forEach(function(weight){var aggregationBuffer=weight.aggregationBuffer;weight.maxMinBuffer["delete"]();if(aggregationBuffer)aggregationBuffer["delete"]()});(0,_get2["default"])((0,_getPrototypeOf2["default"])(GPUGridLayer.prototype),
"finalizeState",this).call(this)}},{key:"updateAggregationState",value:function(opts){var props=opts.props,cellSize=props.cellSize,coordinateSystem=props.coordinateSystem,viewport=this.context.viewport,cellSizeChanged=opts.oldProps.cellSize!==cellSize;props=this.state.dimensions;var positionsChanged=this.isAttributeChanged("positions"),attributesChanged=positionsChanged||this.isAttributeChanged(),boundingBox=this.state.boundingBox;positionsChanged&&(boundingBox=(0,_gridAggregationUtils.getBoundingBox)(this.getAttributes(),
this.getNumInstances()),this.setState({boundingBox}));if(positionsChanged||cellSizeChanged)boundingBox=(0,_gridAggregationUtils.getGridParams)(boundingBox,cellSize,viewport,coordinateSystem),cellSize=boundingBox.gridOffset,coordinateSystem=boundingBox.translation,viewport=boundingBox.width,cellSizeChanged=boundingBox.height,positionsChanged=boundingBox.numCol,boundingBox=boundingBox.numRow,this.allocateResources(boundingBox,positionsChanged),this.setState({gridOffset:cellSize,translation:coordinateSystem,
gridOrigin:[-1*coordinateSystem[0],-1*coordinateSystem[1]],width:viewport,height:cellSizeChanged,numCol:positionsChanged,numRow:boundingBox});(props=attributesChanged||this.isAggregationDirty(opts,{dimension:props.data,compareAll:!0}))&&this._updateAccessors(opts);this.setState({aggregationDataDirty:props})}},{key:"_updateAccessors",value:function(opts){opts=opts.props;var elevationAggregation=opts.elevationAggregation,_this$state$weights2=this.state.weights,elevation=_this$state$weights2.elevation;
_this$state$weights2.color.operation=_aggregationOperationUtils.AGGREGATION_OPERATION[opts.colorAggregation];elevation.operation=_aggregationOperationUtils.AGGREGATION_OPERATION[elevationAggregation]}}]);return GPUGridLayer}(global["default"]);exports["default"]=global;global.layerName="GPUGridLayer";global.defaultProps=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$gpu_grid_layer$gpu_grid_layer.js.map
