shadow$provide.module$node_modules$$luma_DOT_gl$engine$dist$es5$lib$model_utils=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function inferAttributeAccessor(attributeName,attribute){switch(attributeName){case "texCoords":case "texCoord1":case "texCoord2":case "texCoord3":var category=
"uvs";break;case "vertices":case "positions":case "normals":case "pickingColors":category="vectors"}switch(category){case "vectors":attribute.size=attribute.size||3;break;case "uvs":attribute.size=attribute.size||2}(0,_webgl.assert)(Number.isFinite(attribute.size),"attribute ".concat(attributeName," needs size"))}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.getBuffersFromGeometry=function(gl,geometry,
options){var buffers={},indices=geometry.indices,name;for(name in geometry.attributes){var attribute=geometry.attributes[name];var remappedName=(options||{}).attributeMap;remappedName=(remappedName=void 0===remappedName?GLTF_TO_LUMA_ATTRIBUTE_MAP:remappedName)&&remappedName[name]||name;if("indices"===name)indices=attribute;else if(attribute.constant)buffers[remappedName]=attribute.value;else{var typedArray=attribute.value;attribute=_objectSpread({},attribute);delete attribute.value;buffers[remappedName]=
[new _webgl.Buffer(gl,typedArray),attribute];inferAttributeAccessor(name,attribute)}}indices&&(geometry=indices.value||indices,(0,_webgl.assert)(geometry instanceof Uint16Array||geometry instanceof Uint32Array,'attribute array for "indices" must be of integer type'),indices={size:1,isIndexed:void 0===indices.isIndexed?!0:indices.isIndexed},buffers.indices=[new _webgl.Buffer(gl,{data:geometry,target:34963}),indices]);return buffers};exports.inferAttributeAccessor=inferAttributeAccessor;var _defineProperty2=
global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_webgl=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$index"),GLTF_TO_LUMA_ATTRIBUTE_MAP={POSITION:"positions",NORMAL:"normals",COLOR_0:"colors",TEXCOORD_0:"texCoords",TEXCOORD_1:"texCoords1",TEXCOORD_2:"texCoords2"}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$engine$dist$es5$lib$model_utils.js.map
