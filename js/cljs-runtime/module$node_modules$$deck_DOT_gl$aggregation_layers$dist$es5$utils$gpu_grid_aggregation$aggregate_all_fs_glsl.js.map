{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$gpu_grid_aggregation$aggregate_all_fs_glsl.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,6GAAf,CAAkI,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1KC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1BA,QAAA,CAAQ,SAAR,CAAA,CADeI,kdAP2J;",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/utils/gpu-grid-aggregation/aggregate-all-fs.glsl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$gpu_grid_aggregation$aggregate_all_fs_glsl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = \"#version 300 es\\n#define SHADER_NAME gpu-aggregation-all-fs\\n\\nprecision highp float;\\n\\nin vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform bool combineMaxMin;\\nout vec4 fragColor;\\nvoid main(void) {\\n  vec4 textureColor = texture(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\\n  if (textureColor.a == 0.) {\\n    discard;\\n  }\\n  fragColor.rgb = textureColor.rgb;\\n  fragColor.a = combineMaxMin ? textureColor.r : textureColor.a;\\n}\\n\";\nexports[\"default\"] = _default;\n//# sourceMappingURL=aggregate-all-fs.glsl.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_default"]
}
