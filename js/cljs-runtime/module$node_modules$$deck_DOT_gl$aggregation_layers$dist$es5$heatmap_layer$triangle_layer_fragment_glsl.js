shadow$provide.module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$heatmap_layer$triangle_layer_fragment_glsl=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;exports["default"]="#define SHADER_NAME triangle-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D texture;\nuniform sampler2D colorTexture;\nuniform float aggregationMode;\n\nvarying vec2 vTexCoords;\nvarying float vIntensityMin;\nvarying float vIntensityMax;\n\nvec4 getLinearColor(float value) {\n  float factor \x3d clamp(value * vIntensityMax, 0., 1.);\n  vec4 color \x3d texture2D(colorTexture, vec2(factor, 0.5));\n  color.a *\x3d min(value * vIntensityMin, 1.0);\n  return color;\n}\n\nvoid main(void) {\n  vec4 weights \x3d texture2D(texture, vTexCoords);\n  float weight \x3d weights.r;\n\n  if (aggregationMode \x3e 0.5) {\n    weight /\x3d max(1.0, weights.a);\n  }\n  if (weight \x3c\x3d 0.) {\n     discard;\n  }\n\n  vec4 linearColor \x3d getLinearColor(weight);\n  linearColor.a *\x3d opacity;\n  gl_FragColor \x3dlinearColor;\n}\n"}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$heatmap_layer$triangle_layer_fragment_glsl.js.map
