shadow$provide.module$node_modules$react_map_gl$dist$es5$components$interactive_map=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function normalizeEvent(event){if(event.lngLat||!event.offsetCenter)return event;var _event$offsetCenter=event.offsetCenter;
_event$offsetCenter=[_event$offsetCenter.x,_event$offsetCenter.y];var viewport=new _viewportMercatorProject["default"](Object.assign({},this.props,this.props.viewState,{width:this.width,height:this.height}));event.point=_event$offsetCenter;event.lngLat=viewport.unproject(_event$offsetCenter);return event}function getFeatures(pos){var map=this.map;if(!map||!pos)return null;var queryParams={},size=this.props.clickRadius;this.props.interactiveLayerIds&&(queryParams.layers=this.props.interactiveLayerIds);
try{return map.queryRenderedFeatures(size?[[pos[0]-size,pos[1]+size],[pos[0]+size,pos[1]-size]]:pos,queryParams)}catch(_unused){return null}}function onEvent(callbackName,event){(callbackName=this.props[callbackName])&&callbackName(normalizeEvent.call(this,event))}function onPointerDown(event){onEvent.call(this,"touch"===event.pointerType?"onTouchStart":"onMouseDown",event)}function onPointerUp(event){onEvent.call(this,"touch"===event.pointerType?"onTouchEnd":"onMouseUp",event)}function onPointerMove(event){onEvent.call(this,
"touch"===event.pointerType?"onTouchMove":"onMouseMove",event);if(!this.state.isDragging){var _this$props=this.props,onHover=_this$props.onHover;_this$props=_this$props.interactiveLayerIds;event=normalizeEvent.call(this,event);if(_this$props||onHover)var features=getFeatures.call(this,event.point);onHover&&(event.features=features,onHover(event));features=(onHover=!!(_this$props&&features&&0<features.length))&&!this.state.isHovering;_this$props=!onHover&&this.state.isHovering;features&&onEvent.call(this,
"onMouseEnter",event);_this$props&&onEvent.call(this,"onMouseLeave",event);(features||_this$props)&&this.setState({isHovering:onHover})}}function onPointerClick(event){var _this$props2=this.props,onClick=_this$props2.onClick,onNativeClick=_this$props2.onNativeClick,doubleClickZoom=_this$props2.doubleClickZoom,callbacks=[];_this$props2=_this$props2.onDblClick||doubleClickZoom;switch(event.type){case "anyclick":callbacks.push(onNativeClick);_this$props2||callbacks.push(onClick);break;case "click":_this$props2&&
callbacks.push(onClick)}callbacks=callbacks.filter(Boolean);callbacks.length&&(event=normalizeEvent.call(this,event),event.features=getFeatures.call(this,event.point),callbacks.forEach(function(cb){return cb(event)}))}var _interopRequireWildcard=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard"),_interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;
var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_toConsumableArray2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$toConsumableArray")),_defineProperty2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$defineProperty")),React=_interopRequireWildcard(require("module$node_modules$react$index")),PropTypes=_interopRequireWildcard(require("module$node_modules$prop_types$index")),_staticMap=_interopRequireDefault(require("module$node_modules$react_map_gl$dist$es5$components$static_map"));
global=require("module$node_modules$react_map_gl$dist$es5$utils$map_state");var _viewportMercatorProject=_interopRequireDefault(require("module$node_modules$viewport_mercator_project$index"));module=_interopRequireDefault(require("module$node_modules$react_map_gl$dist$es5$utils$transition_manager"));var _mapContext=_interopRequireWildcard(require("module$node_modules$react_map_gl$dist$es5$components$map_context")),_mjolnir=require("module$node_modules$mjolnir_DOT_js$dist$es5$index"),_mapController=
_interopRequireDefault(require("module$node_modules$react_map_gl$dist$es5$utils$map_controller")),_useIsomorphicLayoutEffect=_interopRequireDefault(require("module$node_modules$react_map_gl$dist$es5$utils$use_isomorphic_layout_effect"));require=Object.assign({},_staticMap["default"].propTypes,{maxZoom:PropTypes.number,minZoom:PropTypes.number,maxPitch:PropTypes.number,minPitch:PropTypes.number,onViewStateChange:PropTypes.func,onViewportChange:PropTypes.func,onInteractionStateChange:PropTypes.func,
transitionDuration:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),transitionInterpolator:PropTypes.object,transitionInterruption:PropTypes.number,transitionEasing:PropTypes.func,onTransitionStart:PropTypes.func,onTransitionInterrupt:PropTypes.func,onTransitionEnd:PropTypes.func,scrollZoom:PropTypes.oneOfType([PropTypes.bool,PropTypes.object]),dragPan:PropTypes.oneOfType([PropTypes.bool,PropTypes.object]),dragRotate:PropTypes.oneOfType([PropTypes.bool,PropTypes.object]),doubleClickZoom:PropTypes.bool,
touchZoom:PropTypes.oneOfType([PropTypes.bool,PropTypes.object]),touchRotate:PropTypes.oneOfType([PropTypes.bool,PropTypes.object]),keyboard:PropTypes.oneOfType([PropTypes.bool,PropTypes.object]),onHover:PropTypes.func,onClick:PropTypes.func,onDblClick:PropTypes.func,onContextMenu:PropTypes.func,onMouseDown:PropTypes.func,onMouseMove:PropTypes.func,onMouseUp:PropTypes.func,onTouchStart:PropTypes.func,onTouchMove:PropTypes.func,onTouchEnd:PropTypes.func,onMouseEnter:PropTypes.func,onMouseLeave:PropTypes.func,
onMouseOut:PropTypes.func,onWheel:PropTypes.func,touchAction:PropTypes.string,eventRecognizerOptions:PropTypes.object,clickRadius:PropTypes.number,interactiveLayerIds:PropTypes.array,getCursor:PropTypes.func,controller:PropTypes.instanceOf(_mapController["default"])});global=Object.assign({},_staticMap["default"].defaultProps,global.MAPBOX_LIMITS,module["default"].defaultProps,{onViewStateChange:null,onViewportChange:null,onClick:null,onNativeClick:null,onHover:null,onContextMenu:function(event){return event.preventDefault()},
scrollZoom:!0,dragPan:!0,dragRotate:!0,doubleClickZoom:!0,touchZoom:!0,touchRotate:!1,keyboard:!0,touchAction:"none",eventRecognizerOptions:{},clickRadius:0,getCursor:function(_ref){var isHovering=_ref.isHovering;return _ref.isDragging?"grabbing":isHovering?"pointer":"grab"}});module=(0,React.forwardRef)(function(props,ref){var parentContext=(0,React.useContext)(_mapContext["default"]),controller=(0,React.useMemo)(function(){return props.controller||new _mapController["default"]},[]),eventManager=
(0,React.useMemo)(function(){return new _mjolnir.EventManager(null,{touchAction:props.touchAction,recognizerOptions:props.eventRecognizerOptions})},[]),eventCanvasRef=(0,React.useRef)(null),staticMapRef=(0,React.useRef)(null),thisRef=(0,React.useRef)({width:0,height:0,state:{isHovering:!1,isDragging:!1}}).current;thisRef.props=props;thisRef.map=staticMapRef.current&&staticMapRef.current.getMap();thisRef.setState=function(newState){thisRef.state=_objectSpread(_objectSpread({},thisRef.state),newState);
eventCanvasRef.current.style.cursor=props.getCursor(thisRef.state)};var inRender=!0,viewportUpdateRequested,stateUpdateRequested,handleViewportChange=function(viewState,interactionState,oldViewState){if(inRender)viewportUpdateRequested=[viewState,interactionState,oldViewState];else{var _thisRef$props=thisRef.props,onViewStateChange=_thisRef$props.onViewStateChange;_thisRef$props=_thisRef$props.onViewportChange;onViewStateChange&&onViewStateChange({viewState,interactionState,oldViewState});_thisRef$props&&
_thisRef$props(viewState,interactionState,oldViewState)}};(0,React.useImperativeHandle)(ref,function(){return{getMap:staticMapRef.current&&staticMapRef.current.getMap,queryRenderedFeatures:staticMapRef.current&&staticMapRef.current.queryRenderedFeatures}},[]);ref=(0,React.useMemo)(function(){return _objectSpread(_objectSpread({},parentContext),{},{eventManager,container:parentContext.container||eventCanvasRef.current})},[parentContext,eventCanvasRef.current]);ref.onViewportChange=handleViewportChange;
var handleInteractionStateChange=function(interactionState){var _interactionState$isD=interactionState.isDragging;_interactionState$isD=void 0===_interactionState$isD?!1:_interactionState$isD;_interactionState$isD!==thisRef.state.isDragging&&thisRef.setState({isDragging:_interactionState$isD});inRender?stateUpdateRequested=interactionState:(_interactionState$isD=thisRef.props.onInteractionStateChange)&&_interactionState$isD(interactionState)},updateControllerOpts=function(){thisRef.width&&thisRef.height&&
controller.setOptions(_objectSpread(_objectSpread(_objectSpread({},thisRef.props),thisRef.props.viewState),{},{isInteractive:!(!thisRef.props.onViewStateChange&&!thisRef.props.onViewportChange),onViewportChange:handleViewportChange,onStateChange:handleInteractionStateChange,eventManager,width:thisRef.width,height:thisRef.height}))},onResize=function(_ref2){var width=_ref2.width;_ref2=_ref2.height;thisRef.width=width;thisRef.height=_ref2;updateControllerOpts();thisRef.props.onResize({width,height:_ref2})};
(0,React.useEffect)(function(){eventManager.setElement(eventCanvasRef.current);eventManager.on({pointerdown:onPointerDown.bind(thisRef),pointermove:onPointerMove.bind(thisRef),pointerup:onPointerUp.bind(thisRef),pointerleave:onEvent.bind(thisRef,"onMouseOut"),click:onPointerClick.bind(thisRef),anyclick:onPointerClick.bind(thisRef),dblclick:onEvent.bind(thisRef,"onDblClick"),wheel:onEvent.bind(thisRef,"onWheel"),contextmenu:onEvent.bind(thisRef,"onContextMenu")});return function(){eventManager.destroy()}},
[]);(0,_useIsomorphicLayoutEffect["default"])(function(){viewportUpdateRequested&&handleViewportChange.apply(void 0,(0,_toConsumableArray2["default"])(viewportUpdateRequested));stateUpdateRequested&&handleInteractionStateChange(stateUpdateRequested)});updateControllerOpts();var width$jscomp$0=props.width,height=props.height,style=props.style,getCursor=props.getCursor,eventCanvasStyle=(0,React.useMemo)(function(){return _objectSpread(_objectSpread({position:"relative"},style),{},{width:width$jscomp$0,
height,cursor:getCursor(thisRef.state)})},[style,width$jscomp$0,height,getCursor,thisRef.state]);viewportUpdateRequested&&thisRef._child||(thisRef._child=React.createElement(_mapContext.MapContextProvider,{value:ref},React.createElement("div",{key:"event-canvas",ref:eventCanvasRef,style:eventCanvasStyle},React.createElement(_staticMap["default"],(0,_extends2["default"])({},props,{width:"100%",height:"100%",style:null,onResize,ref:staticMapRef})))));inRender=!1;return thisRef._child});module.supported=
_staticMap["default"].supported;module.propTypes=require;module.defaultProps=global;exports["default"]=module}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$components$interactive_map.js.map
