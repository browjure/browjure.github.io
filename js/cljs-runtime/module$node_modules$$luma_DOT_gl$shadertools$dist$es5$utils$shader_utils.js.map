{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$utils$shader_utils.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/shadertools/dist/es5/utils/shader-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$utils$shader_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getQualifierDetails = getQualifierDetails;\nexports.getPassthroughFS = getPassthroughFS;\nexports.typeToChannelSuffix = typeToChannelSuffix;\nexports.typeToChannelCount = typeToChannelCount;\nexports.convertToVec4 = convertToVec4;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _utils = require(\"../utils\");\n\nvar FS100 = \"void main() {gl_FragColor = vec4(0);}\";\nvar FS_GLES = \"out vec4 transform_output;\\nvoid main() {\\n  transform_output = vec4(0);\\n}\";\nvar FS300 = \"#version 300 es\\n\".concat(FS_GLES);\n\nfunction getQualifierDetails(line, qualifiers) {\n  qualifiers = Array.isArray(qualifiers) ? qualifiers : [qualifiers];\n  var words = line.replace(/^\\s+/, '').split(/\\s+/);\n\n  var _words = (0, _slicedToArray2[\"default\"])(words, 3),\n      qualifier = _words[0],\n      type = _words[1],\n      definition = _words[2];\n\n  if (!qualifiers.includes(qualifier) || !type || !definition) {\n    return null;\n  }\n\n  var name = definition.split(';')[0];\n  return {\n    qualifier: qualifier,\n    type: type,\n    name: name\n  };\n}\n\nfunction getPassthroughFS() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$version = options.version,\n      version = _options$version === void 0 ? 100 : _options$version,\n      input = options.input,\n      inputType = options.inputType,\n      output = options.output;\n\n  if (!input) {\n    if (version === 300) {\n      return FS300;\n    } else if (version > 300) {\n      return \"#version \".concat(version, \"\\n\").concat(FS_GLES);\n    }\n\n    return FS100;\n  }\n\n  var outputValue = convertToVec4(input, inputType);\n\n  if (version >= 300) {\n    return \"#version \".concat(version, \" \").concat(version === 300 ? 'es' : '', \"\\nin \").concat(inputType, \" \").concat(input, \";\\nout vec4 \").concat(output, \";\\nvoid main() {\\n  \").concat(output, \" = \").concat(outputValue, \";\\n}\");\n  }\n\n  return \"varying \".concat(inputType, \" \").concat(input, \";\\nvoid main() {\\n  gl_FragColor = \").concat(outputValue, \";\\n}\");\n}\n\nfunction typeToChannelSuffix(type) {\n  switch (type) {\n    case 'float':\n      return 'x';\n\n    case 'vec2':\n      return 'xy';\n\n    case 'vec3':\n      return 'xyz';\n\n    case 'vec4':\n      return 'xyzw';\n\n    default:\n      (0, _utils.assert)(false);\n      return null;\n  }\n}\n\nfunction typeToChannelCount(type) {\n  switch (type) {\n    case 'float':\n      return 1;\n\n    case 'vec2':\n      return 2;\n\n    case 'vec3':\n      return 3;\n\n    case 'vec4':\n      return 4;\n\n    default:\n      (0, _utils.assert)(false);\n      return null;\n  }\n}\n\nfunction convertToVec4(variable, type) {\n  switch (type) {\n    case 'float':\n      return \"vec4(\".concat(variable, \", 0.0, 0.0, 1.0)\");\n\n    case 'vec2':\n      return \"vec4(\".concat(variable, \", 0.0, 1.0)\");\n\n    case 'vec3':\n      return \"vec4(\".concat(variable, \", 1.0)\");\n\n    case 'vec4':\n      return variable;\n\n    default:\n      (0, _utils.assert)(false);\n      return null;\n  }\n}\n//# sourceMappingURL=shader-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","convertToVec4","variable","type","concat","_utils","assert","_interopRequireDefault","Object","defineProperty","value","getQualifierDetails","line","qualifiers","Array","isArray","words","replace","split","_words","_slicedToArray2","qualifier","definition","includes","name","getPassthroughFS","options","arguments","length","undefined","_options$version","version","input","inputType","output","FS300","FS_GLES","FS100","outputValue","typeToChannelSuffix","typeToChannelCount"]
}
