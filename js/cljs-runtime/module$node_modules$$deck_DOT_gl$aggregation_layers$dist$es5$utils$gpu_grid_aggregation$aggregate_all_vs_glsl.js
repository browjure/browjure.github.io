shadow$provide.module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$gpu_grid_aggregation$aggregate_all_vs_glsl=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;exports["default"]="#version 300 es\n#define SHADER_NAME gpu-aggregation-all-vs-64\n\nin vec2 position;\nuniform ivec2 gridSize;\nout vec2 vTextureCoord;\n\nvoid main(void) {\n  vec2 pos \x3d vec2(-1.0, -1.0);\n  vec2 offset \x3d 1.0 / vec2(gridSize);\n  pos \x3d pos + offset;\n\n  gl_Position \x3d vec4(pos, 0.0, 1.0);\n\n  int yIndex \x3d gl_InstanceID / gridSize[0];\n  int xIndex \x3d gl_InstanceID - (yIndex * gridSize[0]);\n\n  vec2 yIndexFP64 \x3d vec2(float(yIndex), 0.);\n  vec2 xIndexFP64 \x3d vec2(float(xIndex), 0.);\n  vec2 gridSizeYFP64 \x3d vec2(gridSize[1], 0.);\n  vec2 gridSizeXFP64 \x3d vec2(gridSize[0], 0.);\n\n  vec2 texCoordXFP64 \x3d div_fp64(yIndexFP64, gridSizeYFP64);\n  vec2 texCoordYFP64 \x3d div_fp64(xIndexFP64, gridSizeXFP64);\n\n  vTextureCoord \x3d vec2(texCoordYFP64.x, texCoordXFP64.x);\n  gl_PointSize \x3d 1.0;\n}\n"}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$gpu_grid_aggregation$aggregate_all_vs_glsl.js.map
