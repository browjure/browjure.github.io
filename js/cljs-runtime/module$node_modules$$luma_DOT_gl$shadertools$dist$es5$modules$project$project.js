shadow$provide.module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$project$project=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.project=void 0;var _core=require("module$node_modules$$math_DOT_gl$core$dist$es5$index");global=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];var DEFAULT_MODULE_OPTIONS={modelMatrix:global,viewMatrix:global,projectionMatrix:global,cameraPositionWorld:[0,0,0]};global="".concat("varying vec4 project_vPositionWorld;\nvarying vec3 project_vNormalWorld;\n\nvec4 project_getPosition_World() {\n  return project_vPositionWorld;\n}\n\nvec3 project_getNormal_World() {\n  return project_vNormalWorld;\n}\n",
"\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewProjectionMatrix;\nuniform vec3 cameraPositionWorld;\n\nstruct World {\n  vec3 position;\n  vec3 normal;\n};\n\nWorld world;\n\nvoid project_setPosition(vec4 position) {\n  project_vPositionWorld \x3d position;\n}\n\nvoid project_setNormal(vec3 normal) {\n  project_vNormalWorld \x3d normal;\n}\n\nvoid project_setPositionAndNormal_World(vec3 position, vec3 normal) {\n  world.position \x3d position;\n  world.normal \x3d normal;\n}\n\nvoid project_setPositionAndNormal_Model(vec3 position, vec3 normal) {\n  world.position \x3d (modelMatrix * vec4(position, 1.)).xyz;\n  world.normal \x3d mat3(modelMatrix) * normal;\n}\n\nvec4 project_model_to_clipspace(vec4 position) {\n  return viewProjectionMatrix * modelMatrix * position;\n}\n\nvec4 project_model_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * modelMatrix * vec4(position, 1.);\n}\n\nvec4 project_world_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_view_to_clipspace(vec3 position) {\n  return projectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n");
require="\n".concat("varying vec4 project_vPositionWorld;\nvarying vec3 project_vNormalWorld;\n\nvec4 project_getPosition_World() {\n  return project_vPositionWorld;\n}\n\nvec3 project_getNormal_World() {\n  return project_vNormalWorld;\n}\n");exports.project={name:"project",getUniforms:function(){var opts=0<arguments.length&&void 0!==arguments[0]?arguments[0]:DEFAULT_MODULE_OPTIONS,uniforms={};void 0!==opts.modelMatrix&&(uniforms.modelMatrix=opts.modelMatrix);void 0!==opts.viewMatrix&&(uniforms.viewMatrix=
opts.viewMatrix);void 0!==opts.projectionMatrix&&(uniforms.projectionMatrix=opts.projectionMatrix);void 0!==opts.cameraPositionWorld&&(uniforms.cameraPositionWorld=opts.cameraPositionWorld);if(void 0!==opts.projectionMatrix||void 0!==opts.viewMatrix)uniforms.viewProjectionMatrix=(new _core.Matrix4(opts.projectionMatrix)).multiplyRight(opts.viewMatrix);return uniforms},vs:global,fs:require}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$project$project.js.map
