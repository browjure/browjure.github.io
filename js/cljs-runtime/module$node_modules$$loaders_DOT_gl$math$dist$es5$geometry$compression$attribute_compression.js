shadow$provide.module$node_modules$$loaders_DOT_gl$math$dist$es5$geometry$compression$attribute_compression=function(global,require,module,exports){function forceUint8(value){uint8ForceArray[0]=value;return uint8ForceArray[0]}function fromSNorm(value){var rangeMaximum=1<arguments.length&&void 0!==arguments[1]?arguments[1]:255;return(0,_core.clamp)(value,0,rangeMaximum)/rangeMaximum*2-1}function toSNorm(value){var rangeMaximum=1<arguments.length&&void 0!==arguments[1]?arguments[1]:255;return Math.round((.5*
(0,_core.clamp)(value,-1,1)+.5)*rangeMaximum)}function octEncodeInRange(vector,rangeMax,result){(0,_assert["default"])(vector);(0,_assert["default"])(result);var vector3=scratchVector3.from(vector);(0,_assert["default"])(Math.abs(vector3.magnitudeSquared()-1)<=_core._MathUtils.EPSILON6);result.x=vector.x/(Math.abs(vector.x)+Math.abs(vector.y)+Math.abs(vector.z));result.y=vector.y/(Math.abs(vector.x)+Math.abs(vector.y)+Math.abs(vector.z));0>vector.z&&(vector=result.x,vector3=result.y,result.x=(1-Math.abs(vector3))*
(0>vector?-1:1),result.y=(1-Math.abs(vector))*(0>vector3?-1:1));result.x=toSNorm(result.x,rangeMax);result.y=toSNorm(result.y,rangeMax);return result}function octEncode(vector,result){return octEncodeInRange(vector,255,result)}function octDecodeInRange(x,y,rangeMax,result){(0,_assert["default"])(result);if(0>x||x>rangeMax||0>y||y>rangeMax)throw Error("x and y must be unsigned normalized integers between 0 and ".concat(rangeMax));result.x=fromSNorm(x,rangeMax);result.y=fromSNorm(y,rangeMax);result.z=
1-(Math.abs(result.x)+Math.abs(result.y));0>result.z&&(x=result.x,result.x=(1-Math.abs(result.y))*(0>x?-1:1),result.y=(1-Math.abs(x))*(0>result.y?-1:1));return result.normalize()}function octDecode(x,y,result){return octDecodeInRange(x,y,255,result)}function octPackFloat(encoded){encoded=scratchVector2.from(encoded);return 256*encoded.x+encoded.y}function octEncodeFloat(vector){octEncode(vector,scratchEncodeVector2);return octPackFloat(scratchEncodeVector2)}function octDecodeFloat(value,result){(0,
_assert["default"])(Number.isFinite(value));value/=256;var x=Math.floor(value);return octDecode(x,256*(value-x),result)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.octEncodeInRange=octEncodeInRange;exports.octEncode=octEncode;exports.octEncodeToVector4=function(vector,result){octEncodeInRange(vector,65535,octEncodeScratch);result.x=forceUint8(octEncodeScratch.x*RIGHT_SHIFT);result.y=forceUint8(octEncodeScratch.x);
result.z=forceUint8(octEncodeScratch.y*RIGHT_SHIFT);result.w=forceUint8(octEncodeScratch.y);return result};exports.octDecodeInRange=octDecodeInRange;exports.octDecode=octDecode;exports.octDecodeFromVector4=function(encoded,result){(0,_assert["default"])(encoded);(0,_assert["default"])(result);var x=encoded.x,y=encoded.y,z=encoded.z;encoded=encoded.w;if(0>x||255<x||0>y||255<y||0>z||255<z||0>encoded||255<encoded)throw Error("x, y, z, and w must be unsigned normalized integers between 0 and 255");return octDecodeInRange(x*
LEFT_SHIFT+y,z*LEFT_SHIFT+encoded,65535,result)};exports.octPackFloat=octPackFloat;exports.octEncodeFloat=octEncodeFloat;exports.octDecodeFloat=octDecodeFloat;exports.octPack=function(v1,v2,v3,result){(0,_assert["default"])(v1);(0,_assert["default"])(v2);(0,_assert["default"])(v3);(0,_assert["default"])(result);v1=octEncodeFloat(v1);v2=octEncodeFloat(v2);v3=octEncode(v3,scratchEncodeVector2);result.x=65536*v3.x+v1;result.y=65536*v3.y+v2;return result};exports.octUnpack=function(packed,v1,v2,v3){var temp=
packed.x/65536,x=Math.floor(temp),encodedFloat1=65536*(temp-x);temp=packed.y/65536;packed=Math.floor(temp);temp=65536*(temp-packed);octDecodeFloat(encodedFloat1,v1);octDecodeFloat(temp,v2);octDecode(x,packed,v3)};exports.compressTextureCoordinates=function(textureCoordinates){return 4096*(4095*textureCoordinates.x|0)+(4095*textureCoordinates.y|0)};exports.decompressTextureCoordinates=function(compressed,result){var xZeroTo4095=Math.floor(compressed/4096);result.x=xZeroTo4095/4095;result.y=(compressed-
4096*xZeroTo4095)/4095;return result};exports.zigZagDeltaDecode=function(uBuffer,vBuffer,heightBuffer){function zigZagDecode(value){return value>>1^-(value&1)}(0,_assert["default"])(uBuffer);(0,_assert["default"])(vBuffer);(0,_assert["default"])(uBuffer.length===vBuffer.length);heightBuffer&&(0,_assert["default"])(uBuffer.length===heightBuffer.length);for(var u=0,v=0,height=0,i=0;i<uBuffer.length;++i)u+=zigZagDecode(uBuffer[i]),v+=zigZagDecode(vBuffer[i]),uBuffer[i]=u,vBuffer[i]=v,heightBuffer&&(height+=
zigZagDecode(heightBuffer[i]),heightBuffer[i]=height)};var _core=require("module$node_modules$$math_DOT_gl$core$dist$es5$index"),_assert=global(require("module$node_modules$$loaders_DOT_gl$math$dist$es5$geometry$utils$assert")),RIGHT_SHIFT=1/256,LEFT_SHIFT=256,scratchVector2=new _core.Vector2,scratchVector3=new _core.Vector3,scratchEncodeVector2=new _core.Vector2,octEncodeScratch=new _core.Vector2,uint8ForceArray=new Uint8Array(1)}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$math$dist$es5$geometry$compression$attribute_compression.js.map
