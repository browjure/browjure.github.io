{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$images$dist$es5$lib$category_api$image_type.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,+EAAf,CAAoG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG5IC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,oBAAR,CAWAA,QAA6B,CAACC,IAAD,CAAO,CAClC,OAAQA,IAAR,EACE,KAAK,MAAL,CACE,MAAOC,uBAAP,EAAiCC,eAAjC,EAAoDC,cAEtD,MAAK,aAAL,CACE,MAAOF,uBAET,MAAK,OAAL,CACE,MAAOC,gBAET,MAAK,MAAL,CACE,MAAOC,eAET,MAAK,MAAL,CACE,MAAOD,gBAET,MAAK,SAAL,CACE,MAAOC,eAET;QACE,KAAUC,MAAJ,CAAUC,4BAAA,CAA6BA,MAA7B,CAAoCL,IAApC,CAA0C,oCAA1C,CAAV,CAAN,CApBJ,CADkC,CAVpCL,QAAA,CAAQW,mBAAR,CAmCAA,QAA4B,EAAG,CAC7B,GAAIL,sBAAJ,CACE,MAAO,aAGT,IAAIC,eAAJ,CACE,MAAO,OAGT,IAAIC,cAAJ,CACE,MAAO,MAGT,MAAUC,MAAJ,CAAU,+DAAV,CAAN,CAb6B,CAjC3BG,OAAAA,CAAWd,OAAA,CAAQ,uEAAR,CAGf,KAAIS,gBAAmC,WAAnCA,GAAkB,MAAOM,MAA7B,CACIP,uBAAgD,WAAhDA;AAAyB,MAAOQ,YAChCC,QAAAA,CAAuB,CAAA,CAHLH,MAGK,CAHIf,MAGJ,CAHWmB,eAItC,KAAIR,eAAiBI,MAAA,CAASK,SAAT,CAAqB,CAAA,CAArB,CAA4BF,OAf2F;",
"sources":["node_modules/@loaders_DOT_gl/images/dist/es5/lib/category-api/image-type.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$images$dist$es5$lib$category_api$image_type\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isImageTypeSupported = isImageTypeSupported;\nexports.getDefaultImageType = getDefaultImageType;\n\nvar _globals = require(\"../utils/globals\");\n\nvar _parseImageNode = _globals.global._parseImageNode;\nvar IMAGE_SUPPORTED = typeof Image !== 'undefined';\nvar IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';\nvar NODE_IMAGE_SUPPORTED = Boolean(_parseImageNode);\nvar DATA_SUPPORTED = _globals.isBrowser ? true : NODE_IMAGE_SUPPORTED;\n\nfunction isImageTypeSupported(type) {\n  switch (type) {\n    case 'auto':\n      return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || DATA_SUPPORTED;\n\n    case 'imagebitmap':\n      return IMAGE_BITMAP_SUPPORTED;\n\n    case 'image':\n      return IMAGE_SUPPORTED;\n\n    case 'data':\n      return DATA_SUPPORTED;\n\n    case 'html':\n      return IMAGE_SUPPORTED;\n\n    case 'ndarray':\n      return DATA_SUPPORTED;\n\n    default:\n      throw new Error(\"@loaders.gl/images: image \".concat(type, \" not supported in this environment\"));\n  }\n}\n\nfunction getDefaultImageType() {\n  if (IMAGE_BITMAP_SUPPORTED) {\n    return 'imagebitmap';\n  }\n\n  if (IMAGE_SUPPORTED) {\n    return 'image';\n  }\n\n  if (DATA_SUPPORTED) {\n    return 'data';\n  }\n\n  throw new Error(\"Install '@loaders.gl/polyfills' to parse images under Node.js\");\n}\n//# sourceMappingURL=image-type.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","isImageTypeSupported","type","IMAGE_BITMAP_SUPPORTED","IMAGE_SUPPORTED","DATA_SUPPORTED","Error","concat","getDefaultImageType","_globals","Image","ImageBitmap","NODE_IMAGE_SUPPORTED","_parseImageNode","isBrowser"]
}
