{"version":3,"sources":["sci/impl/types.cljc"],"mappings":"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","names":["sci$impl$types$IBox$setVal$dyn","x__4428__auto__","m__4429__auto__","sci.impl.types/setVal","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","sci$impl$types$IBox$getVal$dyn","sci.impl.types/getVal","sci.impl.types/IBox","_this","_v","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","sci.impl.types/EvalVar","sci.impl.types/->EvalVar","v","sci$impl$types$IReified$getInterface$dyn","sci.impl.types/getInterface","sci$impl$types$IReified$getMethods$dyn","sci.impl.types/getMethods","sci.impl.types/IReified","_","sci.impl.types/Reified","sci.impl.types/->Reified","interface","meths","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","sci.impl.types/type-impl","seq61375","G__61376","cljs.core/first","cljs.core/next","self__4723__auto__","x","_xs","or__4126__auto__","G__61394","cljs.core/meta","cljs.core/type","sci.impl.types/EvalForm","sci.impl.types/->EvalForm","form","sci$impl$types$Sexpr$sexpr$dyn","sci.impl.types/sexpr","sci.impl.types/Sexpr","this","goog.object/set","sci.impl.types/EvalFn","sci.impl.types/->EvalFn","f","m","expr","G__61422","G__61423","G__61424","cljs.core/with-meta"],"sourcesContent":["(ns sci.impl.types\n  {:no-doc true})\n\n(defprotocol IBox\n  (setVal [_this _v])\n  (getVal [_this]))\n\n(deftype EvalVar [v]\n  IBox\n  (getVal [_this] v))\n\n(defprotocol IReified\n  (getInterface [_])\n  (getMethods [_]))\n\n(deftype Reified [interface meths]\n  IReified\n  (getInterface [_] interface)\n  (getMethods [_] meths))\n\n(defn type-impl [x & _xs]\n  (or (when (instance? sci.impl.types.Reified x)\n        :sci.impl.protocols/reified)\n      (some-> x meta :type)\n      #?(:clj (class x) ;; no need to check for metadata anymore\n         :cljs (type x))))\n\n;; returned from analyzer when macroexpansion needs interleaved eval\n(deftype EvalForm [form]\n  IBox\n  (getVal [_this] form))\n\n(declare ->EvalFn)\n\n(defprotocol Sexpr\n  (sexpr [this]))\n\n(extend-protocol Sexpr\n  #?(:clj Object :cljs default) (sexpr [this] this))\n\n(deftype EvalFn [f m expr]\n  ;; f = (fn [ctx] ...)\n  ;; m = meta\n  IBox\n  (getVal [_this] f)\n  #?(:clj clojure.lang.IMeta\n     :cljs IMeta)\n  (#?(:clj meta\n      :cljs -meta) [_this] (meta expr))\n  #?(:clj clojure.lang.IObj\n     :cljs IWithMeta)\n  (#?(:clj withMeta\n      :cljs -with-meta) [_this m]\n    (->EvalFn f m (with-meta expr m)))\n  Sexpr\n  (sexpr [_] expr)\n  Object\n  (toString [_this]\n    (str expr)))\n"]}