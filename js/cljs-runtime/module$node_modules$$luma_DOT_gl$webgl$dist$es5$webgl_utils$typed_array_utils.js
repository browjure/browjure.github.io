shadow$provide.module$node_modules$$luma_DOT_gl$webgl$dist$es5$webgl_utils$typed_array_utils=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.getGLTypeFromTypedArray=function(arrayOrType){switch(ArrayBuffer.isView(arrayOrType)?arrayOrType.constructor:arrayOrType){case Float32Array:return 5126;case Uint16Array:return 5123;case Uint32Array:return 5125;case Uint8Array:return 5121;case Uint8ClampedArray:return 5121;case Int8Array:return 5120;case Int16Array:return 5122;
case Int32Array:return 5124;default:throw Error(ERR_TYPE_DEDUCTION);}};exports.getTypedArrayFromGLType=function(glType){var _ref$clamped=(1<arguments.length&&void 0!==arguments[1]?arguments[1]:{}).clamped;switch(glType){case 5126:return Float32Array;case 5123:case 33635:case 32819:case 32820:return Uint16Array;case 5125:return Uint32Array;case 5121:return void 0===_ref$clamped||_ref$clamped?Uint8ClampedArray:Uint8Array;case 5120:return Int8Array;case 5122:return Int16Array;case 5124:return Int32Array;
default:throw Error("Failed to deduce typed array type from GL constant");}};exports.flipRows=function(_ref2){var data=_ref2.data,height=_ref2.height,_ref2$bytesPerPixel=_ref2.bytesPerPixel,temp=_ref2.temp;_ref2=_ref2.width*(void 0===_ref2$bytesPerPixel?4:_ref2$bytesPerPixel);temp=temp||new Uint8Array(_ref2);for(_ref2$bytesPerPixel=0;_ref2$bytesPerPixel<height/2;++_ref2$bytesPerPixel){var topOffset=_ref2$bytesPerPixel*_ref2,bottomOffset=(height-_ref2$bytesPerPixel-1)*_ref2;temp.set(data.subarray(topOffset,
topOffset+_ref2));data.copyWithin(topOffset,bottomOffset,bottomOffset+_ref2);data.set(temp,bottomOffset)}};exports.scalePixels=function(_ref3){var data=_ref3.data,width=_ref3.width,newWidth=Math.round(width/2);_ref3=Math.round(_ref3.height/2);for(var newData=new Uint8Array(newWidth*_ref3*4),y=0;y<_ref3;y++)for(var x=0;x<newWidth;x++)for(var c=0;4>c;c++)newData[4*(y*newWidth+x)+c]=data[4*(2*y*width+2*x)+c];return{data:newData,width:newWidth,height:_ref3}};var ERR_TYPE_DEDUCTION="Failed to deduce GL constant from typed array"}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$webgl$dist$es5$webgl_utils$typed_array_utils.js.map
