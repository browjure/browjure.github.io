shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$lib$view_manager=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_assert=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$assert")),_deepEqual=require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$deep_equal"),
_log=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$log")),_flatten=require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$flatten");require=function(){function ViewManager(){var props=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};(0,_classCallCheck2["default"])(this,ViewManager);this.views=[];this.height=this.width=100;this.viewState={};this.controllers={};this.timeline=props.timeline;this._viewports=[];this._viewportMap={};this._isUpdating=!1;this._needsRedraw=
"Initial render";this._needsUpdate=!0;this._eventManager=props.eventManager;this._eventCallbacks={onViewStateChange:props.onViewStateChange,onInteractionStateChange:props.onInteractionStateChange};Object.seal(this);this.setProps(props)}(0,_createClass2["default"])(ViewManager,[{key:"finalize",value:function(){for(var key in this.controllers)this.controllers[key]&&this.controllers[key].finalize();this.controllers={}}},{key:"needsRedraw",value:function(){var redraw=this._needsRedraw;(0<arguments.length&&
void 0!==arguments[0]?arguments[0]:{clearRedrawFlags:!1}).clearRedrawFlags&&(this._needsRedraw=!1);return redraw}},{key:"setNeedsUpdate",value:function(reason){this._needsUpdate=this._needsUpdate||reason;this._needsRedraw=this._needsRedraw||reason}},{key:"updateViewStates",value:function(){for(var viewId in this.controllers){var controller=this.controllers[viewId];controller&&controller.updateTransition()}}},{key:"getViewports",value:function(rect){return rect?this._viewports.filter(function(viewport){return viewport.containsPixel(rect)}):
this._viewports}},{key:"getViews",value:function(){var viewMap={};this.views.forEach(function(view){viewMap[view.id]=view});return viewMap}},{key:"getView",value:function(viewOrViewId){return"string"===typeof viewOrViewId?this.views.find(function(view){return view.id===viewOrViewId}):viewOrViewId}},{key:"getViewState",value:function(viewId){var viewState=(viewId=this.getView(viewId))&&this.viewState[viewId.getViewStateId()]||this.viewState;return viewId?viewId.filterViewState(viewState):viewState}},
{key:"getViewport",value:function(viewId){return this._viewportMap[viewId]}},{key:"unproject",value:function(xyz,opts){for(var viewports=this.getViewports(),pixel={x:xyz[0],y:xyz[1]},i=viewports.length-1;0<=i;--i){var viewport=viewports[i];if(viewport.containsPixel(pixel))return xyz=xyz.slice(),xyz[0]-=viewport.x,xyz[1]-=viewport.y,viewport.unproject(xyz,opts)}return null}},{key:"setProps",value:function(props){"views"in props&&this._setViews(props.views);"viewState"in props&&this._setViewState(props.viewState);
("width"in props||"height"in props)&&this._setSize(props.width,props.height);this._isUpdating||this._update()}},{key:"_update",value:function(){this._isUpdating=!0;this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports());this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports());this._isUpdating=!1}},{key:"_setSize",value:function(width,height){(0,_assert["default"])(Number.isFinite(width)&&Number.isFinite(height));if(width!==this.width||height!==this.height)this.width=width,this.height=
height,this.setNeedsUpdate("Size changed")}},{key:"_setViews",value:function(views){views=(0,_flatten.flatten)(views,Boolean);this._diffViews(views,this.views)&&this.setNeedsUpdate("views changed");this.views=views}},{key:"_setViewState",value:function(viewState){viewState?((0,_deepEqual.deepEqual)(viewState,this.viewState)||this.setNeedsUpdate("viewState changed"),this.viewState=viewState):_log["default"].warn("missing `viewState` or `initialViewState`")()}},{key:"_onViewStateChange",value:function(viewId,
event){event.viewId=viewId;this._eventCallbacks.onViewStateChange(event)}},{key:"_createController",value:function(view,props){return new props.type(_objectSpread({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._onViewStateChange.bind(this,props.id),onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:function(viewState){return view._getViewport(viewState,{width:viewState.width,height:viewState.height})}},props))}},{key:"_updateController",value:function(view,
viewState,viewport,controller){var controllerProps=view.controller;return controllerProps?(controllerProps=_objectSpread(_objectSpread(_objectSpread(_objectSpread({},viewState),view.props),controllerProps),{},{id:view.id,x:viewport.x,y:viewport.y,width:viewport.width,height:viewport.height}),controller?controller.setProps(controllerProps):controller=this._createController(view,controllerProps),controller):null}},{key:"_rebuildViewports",value:function(){var width=this.width,height=this.height,views=
this.views,oldControllers=this.controllers;this._viewports=[];this.controllers={};for(var i=views.length;i--;){var view=views[i],viewState=this.getViewState(view),viewport=view.makeViewport({width,height,viewState});this.controllers[view.id]=this._updateController(view,viewState,viewport,oldControllers[view.id]);this._viewports.unshift(viewport)}for(var id in oldControllers)oldControllers[id]&&!this.controllers[id]&&oldControllers[id].finalize();this._buildViewportMap()}},{key:"_buildViewportMap",
value:function(){var _this=this;this._viewportMap={};this._viewports.forEach(function(viewport){viewport.id&&(_this._viewportMap[viewport.id]=_this._viewportMap[viewport.id]||viewport)})}},{key:"_diffViews",value:function(newViews,oldViews){return newViews.length!==oldViews.length?!0:newViews.some(function(_,i){return!newViews[i].equals(oldViews[i])})}}]);return ViewManager}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$lib$view_manager.js.map
