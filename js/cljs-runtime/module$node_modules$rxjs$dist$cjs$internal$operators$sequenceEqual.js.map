{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$sequenceEqual.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,kEAAf,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE/HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,aAAR,CAAwB,IAAK,EAC7B,KAAIC,OAASP,OAAA,CAAQ,sDAAR,CAAb,CACIQ,qBAAuBR,OAAA,CAAQ,yEAAR,CA+B3BE,QAAA,CAAQI,aAAR,CA9BAA,QAAsB,CAACG,SAAD,CAAYC,UAAZ,CAAwB,CACvB,IAAK,EAAxB,GAAIA,UAAJ,GAA6BA,UAA7B,CAA0CA,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAAE,MAAOD,EAAP,GAAaC,CAAf,CAA1D,CACA,OAAOL,OAAA,CAAOM,OAAP,CAAe,QAAS,CAACC,MAAD;AAASC,UAAT,CAAqB,CAChD,IAAIC,OA6BD,CACHC,OAAQ,EADL,CAEHC,SAAU,CAAA,CAFP,CA7BH,CACIC,OA4BD,CACHF,OAAQ,EADL,CAEHC,SAAU,CAAA,CAFP,CA7BH,CAMIE,iBAAmBA,QAAS,CAACC,SAAD,CAAYC,UAAZ,CAAwB,CACpD,IAAIC,wBAA0B,IAAIf,oBAAJ,CAAyBgB,kBAAzB,CAA4CT,UAA5C,CAAwD,QAAS,CAACJ,CAAD,CAAI,CAAA,IAC3FM,OAASK,UAATL,CAAoBA,MADuE,CAC/DC,SAAWI,UAAXJ,CAAsBA,QAChC,EAAtB,GAAID,MAAJ,CAAWQ,MAAX,CACIP,QAAA,EAPRH,UAAA,CAAWW,IAAX,CAOwBC,CAAAA,CAPxB,CACA,CAAAZ,UAAA,CAAWG,QAAX,EAMQ,EAAyBG,SAAA,CAAUJ,MAAV,CAAiBW,IAAjB,CAAsBjB,CAAtB,CAD7B,CAIKD,UAAA,CAAWC,CAAX,CAAcM,MAAA,CAAOY,KAAP,EAAd,CAJL,GANJd,UAAA,CAAWW,IAAX,CAU+CC,CAAAA,CAV/C,CACA,CAAAZ,UAAA,CAAWG,QAAX,EAKI,CAF+F,CAArE,CAQ3BY,IAAAA,EAR2B,CAQhB,QAAS,EAAG,CACtBT,SAAA,CAAUH,QAAV,CAAqB,CAAA,CACrB,KAAoCD;AAASK,UAATL,CAAoBA,MAAzCK,WACf,CAD0BJ,QAC1B,GAfJH,UAAA,CAAWW,IAAX,CAeuC,CAfvC,GAeqBT,MAfrB,CAe4BQ,MAf5B,CACA,CAAAV,UAAA,CAAWG,QAAX,EAcI,CAC4B,KAA5B,GAAAK,uBAAA,EAAgE,IAAK,EAArE,GAAoCA,uBAApC,CAAyE,IAAK,EAA9E,CAAkFA,uBAAA,CAAwBQ,WAAxB,EAJ5D,CARI,CAc9B,OAAOR,wBAf6C,CAiBxDT,OAAA,CAAOkB,SAAP,CAAiBZ,gBAAA,CAAiBJ,MAAjB,CAAyBG,MAAzB,CAAjB,CACAV,UAAA,CAAUuB,SAAV,CAAoBZ,gBAAA,CAAiBD,MAAjB,CAAyBH,MAAzB,CAApB,CAzBgD,CAA7C,CAFmC,CANiF;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/sequenceEqual.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$sequenceEqual\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceEqual = void 0;\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction sequenceEqual(compareTo, comparator) {\n    if (comparator === void 0) { comparator = function (a, b) { return a === b; }; }\n    return lift_1.operate(function (source, subscriber) {\n        var aState = createState();\n        var bState = createState();\n        var emit = function (isEqual) {\n            subscriber.next(isEqual);\n            subscriber.complete();\n        };\n        var createSubscriber = function (selfState, otherState) {\n            var sequenceEqualSubscriber = new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (a) {\n                var buffer = otherState.buffer, complete = otherState.complete;\n                if (buffer.length === 0) {\n                    complete ? emit(false) : selfState.buffer.push(a);\n                }\n                else {\n                    !comparator(a, buffer.shift()) && emit(false);\n                }\n            }, undefined, function () {\n                selfState.complete = true;\n                var complete = otherState.complete, buffer = otherState.buffer;\n                complete && emit(buffer.length === 0);\n                sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();\n            });\n            return sequenceEqualSubscriber;\n        };\n        source.subscribe(createSubscriber(aState, bState));\n        compareTo.subscribe(createSubscriber(bState, aState));\n    });\n}\nexports.sequenceEqual = sequenceEqual;\nfunction createState() {\n    return {\n        buffer: [],\n        complete: false,\n    };\n}\n//# sourceMappingURL=sequenceEqual.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","sequenceEqual","lift_1","OperatorSubscriber_1","compareTo","comparator","a","b","operate","source","subscriber","aState","buffer","complete","bState","createSubscriber","selfState","otherState","sequenceEqualSubscriber","OperatorSubscriber","length","next","isEqual","push","shift","undefined","unsubscribe","subscribe"]
}
