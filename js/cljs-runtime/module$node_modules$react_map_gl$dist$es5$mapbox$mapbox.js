shadow$provide.module$node_modules$react_map_gl$dist$es5$mapbox$mapbox=function(global,require,module,exports){function getAccessToken(){var accessToken=null;"undefined"!==typeof window&&window.location&&(accessToken=(accessToken=window.location.search.match(/access_token=([^&\/]*)/))&&accessToken[1]);accessToken||"undefined"===typeof process||(accessToken=accessToken||process.env.MapboxAccessToken||process.env.REACT_APP_MAPBOX_ACCESS_TOKEN);return accessToken||"no-token"}function checkPropTypes(props){var component=
1<arguments.length&&void 0!==arguments[1]?arguments[1]:"component";props.debug&&PropTypes.checkPropTypes(propTypes,props,"prop",component)}var process=require("module$node_modules$process$browser");"use strict";global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.getAccessToken=getAccessToken;exports["default"]=void 0;var _classCallCheck2=
module(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=module(require("module$node_modules$$babel$runtime$helpers$createClass")),_defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),PropTypes=global(require("module$node_modules$prop_types$index")),_globals=require("module$node_modules$react_map_gl$dist$es5$utils$globals"),_styleUtils=require("module$node_modules$react_map_gl$dist$es5$utils$style_utils"),propTypes={container:PropTypes.object,
gl:PropTypes.object,mapboxApiAccessToken:PropTypes.string,mapboxApiUrl:PropTypes.string,attributionControl:PropTypes.bool,preserveDrawingBuffer:PropTypes.bool,reuseMaps:PropTypes.bool,transformRequest:PropTypes.func,mapOptions:PropTypes.object,mapStyle:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),preventStyleDiffing:PropTypes.bool,visible:PropTypes.bool,asyncRender:PropTypes.bool,onLoad:PropTypes.func,onError:PropTypes.func,width:PropTypes.number,height:PropTypes.number,viewState:PropTypes.object,
longitude:PropTypes.number,latitude:PropTypes.number,zoom:PropTypes.number,bearing:PropTypes.number,pitch:PropTypes.number,altitude:PropTypes.number},defaultProps={container:_globals.document.body,mapboxApiAccessToken:getAccessToken(),mapboxApiUrl:"https://api.mapbox.com",preserveDrawingBuffer:!1,attributionControl:!0,reuseMaps:!1,mapOptions:{},mapStyle:"mapbox://styles/mapbox/light-v8",preventStyleDiffing:!1,visible:!0,asyncRender:!1,onLoad:function(){},onError:function(event){event&&console.error(event.error)},
width:0,height:0,longitude:0,latitude:0,zoom:0,bearing:0,pitch:0,altitude:1.5};require=function(){function Mapbox(props){var _this=this;(0,_classCallCheck2["default"])(this,Mapbox);(0,_defineProperty2["default"])(this,"props",defaultProps);(0,_defineProperty2["default"])(this,"width",0);(0,_defineProperty2["default"])(this,"height",0);(0,_defineProperty2["default"])(this,"_fireLoadEvent",function(){_this.props.onLoad({type:"load",target:_this._map})});if(!props.mapboxgl)throw Error("Mapbox not available");
this.mapboxgl=props.mapboxgl;Mapbox.initialized||(Mapbox.initialized=!0,this._checkStyleSheet(this.mapboxgl.version));this._initialize(props)}(0,_createClass2["default"])(Mapbox,[{key:"finalize",value:function(){this._destroy();return this}},{key:"setProps",value:function(props){this._update(this.props,props);return this}},{key:"redraw",value:function(){var map=this._map;map.style&&(map._frame&&(map._frame.cancel(),map._frame=null),map._render())}},{key:"getMap",value:function(){return this._map}},
{key:"_reuse",value:function(props){this._map=Mapbox.savedMap;var oldContainer=this._map.getContainer(),newContainer=props.container;for(newContainer.classList.add("mapboxgl-map");0<oldContainer.childNodes.length;)newContainer.appendChild(oldContainer.childNodes[0]);this._map._container=newContainer;Mapbox.savedMap=null;props.mapStyle&&this._map.setStyle((0,_styleUtils.normalizeStyle)(props.mapStyle),{diff:!1});if(this._map.isStyleLoaded())this._fireLoadEvent();else this._map.once("styledata",this._fireLoadEvent)}},
{key:"_create",value:function(props){if(props.reuseMaps&&Mapbox.savedMap)this._reuse(props);else{if(props.gl){var getContext=HTMLCanvasElement.prototype.getContext;HTMLCanvasElement.prototype.getContext=function(){HTMLCanvasElement.prototype.getContext=getContext;return props.gl}}var mapOptions={container:props.container,center:[0,0],zoom:8,pitch:0,bearing:0,maxZoom:24,style:(0,_styleUtils.normalizeStyle)(props.mapStyle),interactive:!1,trackResize:!1,attributionControl:props.attributionControl,preserveDrawingBuffer:props.preserveDrawingBuffer};
props.transformRequest&&(mapOptions.transformRequest=props.transformRequest);this._map=new this.mapboxgl.Map(Object.assign({},mapOptions,props.mapOptions));this._map.once("load",props.onLoad);this._map.on("error",props.onError)}return this}},{key:"_destroy",value:function(){this._map&&(Mapbox.savedMap?this._map.remove():(Mapbox.savedMap=this._map,this._map.off("load",this.props.onLoad),this._map.off("error",this.props.onError),this._map.off("styledata",this._fireLoadEvent)),this._map=null)}},{key:"_initialize",
value:function(props){var _this2=this;props=Object.assign({},defaultProps,props);checkPropTypes(props,"Mapbox");this.mapboxgl.accessToken=props.mapboxApiAccessToken||defaultProps.mapboxApiAccessToken;this.mapboxgl.baseApiUrl=props.mapboxApiUrl;this._create(props);var container=props.container;Object.defineProperty(container,"offsetWidth",{get:function(){return _this2.width}});Object.defineProperty(container,"clientWidth",{get:function(){return _this2.width}});Object.defineProperty(container,"offsetHeight",
{get:function(){return _this2.height}});Object.defineProperty(container,"clientHeight",{get:function(){return _this2.height}});if(container=this._map.getCanvas())container.style.outline="none";this._updateMapViewport({},props);this._updateMapSize({},props);this.props=props}},{key:"_update",value:function(oldProps,newProps){if(this._map){newProps=Object.assign({},this.props,newProps);checkPropTypes(newProps,"Mapbox");var viewportChanged=this._updateMapViewport(oldProps,newProps),sizeChanged=this._updateMapSize(oldProps,
newProps);this._updateMapStyle(oldProps,newProps);newProps.asyncRender||!viewportChanged&&!sizeChanged||this.redraw();this.props=newProps}}},{key:"_updateMapStyle",value:function(oldProps,newProps){oldProps.mapStyle!==newProps.mapStyle&&this._map.setStyle((0,_styleUtils.normalizeStyle)(newProps.mapStyle),{diff:!newProps.preventStyleDiffing})}},{key:"_updateMapSize",value:function(oldProps,newProps){if(oldProps=oldProps.width!==newProps.width||oldProps.height!==newProps.height)this.width=newProps.width,
this.height=newProps.height,this._map.resize();return oldProps}},{key:"_updateMapViewport",value:function(oldProps,newProps){oldProps=this._getViewState(oldProps);newProps=this._getViewState(newProps);var viewportChanged=newProps.latitude!==oldProps.latitude||newProps.longitude!==oldProps.longitude||newProps.zoom!==oldProps.zoom||newProps.pitch!==oldProps.pitch||newProps.bearing!==oldProps.bearing||newProps.altitude!==oldProps.altitude;viewportChanged&&(this._map.jumpTo(this._viewStateToMapboxProps(newProps)),
newProps.altitude!==oldProps.altitude&&(this._map.transform.altitude=newProps.altitude));return viewportChanged}},{key:"_getViewState",value:function(props){props=props.viewState||props;var _ref$pitch=props.pitch,_ref$bearing=props.bearing,_ref$altitude=props.altitude;return{longitude:props.longitude,latitude:props.latitude,zoom:props.zoom,pitch:void 0===_ref$pitch?0:_ref$pitch,bearing:void 0===_ref$bearing?0:_ref$bearing,altitude:void 0===_ref$altitude?1.5:_ref$altitude}}},{key:"_checkStyleSheet",
value:function(){var mapboxVersion=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"0.47.0";if("undefined"!==typeof _globals.document)try{var testElement=_globals.document.createElement("div");testElement.className="mapboxgl-map";testElement.style.display="none";_globals.document.body.appendChild(testElement);if("static"===window.getComputedStyle(testElement).position){var link=_globals.document.createElement("link");link.setAttribute("rel","stylesheet");link.setAttribute("type","text/css");
link.setAttribute("href","https://api.tiles.mapbox.com/mapbox-gl-js/v".concat(mapboxVersion,"/mapbox-gl.css"));_globals.document.head.appendChild(link)}}catch(error){}}},{key:"_viewStateToMapboxProps",value:function(viewState){return{center:[viewState.longitude,viewState.latitude],zoom:viewState.zoom,bearing:viewState.bearing,pitch:viewState.pitch}}}]);return Mapbox}();exports["default"]=require;(0,_defineProperty2["default"])(require,"initialized",!1);(0,_defineProperty2["default"])(require,"propTypes",
propTypes);(0,_defineProperty2["default"])(require,"defaultProps",defaultProps);(0,_defineProperty2["default"])(require,"savedMap",null)}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$mapbox$mapbox.js.map
