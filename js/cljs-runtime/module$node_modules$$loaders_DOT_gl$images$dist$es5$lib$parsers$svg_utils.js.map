{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$images$dist$es5$lib$parsers$svg_utils.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,yEAAf,CAA8F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYtIC,QAASA,MAAK,CAACC,GAAD,CAAM,CAClB,MAAOA,IAAP,GAAeC,oBAAA,CAAqBC,IAArB,CAA0BF,GAA1B,CAAf,EAAiDG,eAAA,CAAgBD,IAAhB,CAAqBF,GAArB,CAAjD,CADkB,CAepBI,QAASA,QAAO,CAACC,WAAD,CAAcL,GAAd,CAAmB,CACjC,GAAID,KAAA,CAAMC,GAAN,CAAJ,CACE,KAAUM,MAAJ,CAAU,8CAAV,CAAN,CAGF,MAAO,KAAIC,IAAJ,CAAS,CAAC,IAAIC,UAAJ,CAAeH,WAAf,CAAD,CAAT,CAL0B,CAxBnCI,MAAA,CAAOC,cAAP,CAAsBZ,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Ca,MAAO,CAAA,CADoC,CAA7C,CAGAb,QAAA,CAAQC,KAAR,CAAgBA,KAChBD,QAAA,CAAQc,mBAAR,CASAA,QAA4B,CAACP,WAAD,CAAcL,GAAd,CAAmB,CAC7C,MAAID,MAAA,CAAMC,GAAN,CAAJ;CAEMa,WACMC,CADI,CADIC,IAAIC,WACR,EAAYC,MAAZ,CAAmBZ,WAAnB,CACJS,CAAAI,4BAAAJ,CAA6BI,MAA7BJ,CAAoCK,IAAA,CAAKN,WAAL,CAApCC,CAHZ,EAOOV,OAAA,CAAQC,WAAR,CAAqBL,GAArB,CARsC,CAR/CF,QAAA,CAAQM,OAAR,CAAkBA,OAClB,KAAIH,qBAAuB,uBAA3B,CACIE,gBAAkB,mBAVgH;",
"sources":["node_modules/@loaders_DOT_gl/images/dist/es5/lib/parsers/svg-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$images$dist$es5$lib$parsers$svg_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSVG = isSVG;\nexports.getBlobOrSVGDataUrl = getBlobOrSVGDataUrl;\nexports.getBlob = getBlob;\nvar SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nvar SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\n\nfunction isSVG(url) {\n  return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\n\nfunction getBlobOrSVGDataUrl(arrayBuffer, url) {\n  if (isSVG(url)) {\n    var textDecoder = new TextDecoder();\n    var xmlText = textDecoder.decode(arrayBuffer);\n    var src = \"data:image/svg+xml;base64,\".concat(btoa(xmlText));\n    return src;\n  }\n\n  return getBlob(arrayBuffer, url);\n}\n\nfunction getBlob(arrayBuffer, url) {\n  if (isSVG(url)) {\n    throw new Error('SVG cannot be parsed directly to imagebitmap');\n  }\n\n  return new Blob([new Uint8Array(arrayBuffer)]);\n}\n//# sourceMappingURL=svg-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","isSVG","url","SVG_DATA_URL_PATTERN","test","SVG_URL_PATTERN","getBlob","arrayBuffer","Error","Blob","Uint8Array","Object","defineProperty","value","getBlobOrSVGDataUrl","xmlText","src","textDecoder","TextDecoder","decode","concat","btoa"]
}
