shadow$provide.module$node_modules$$luma_DOT_gl$shadertools$dist$es5$lib$filters$prop_types=function(global,require,module,exports){function parsePropType(propDef){var type=getTypeOf(propDef);if("object"===type){if(!propDef)return{type:"object",value:null};if("type"in propDef)return Object.assign({},propDef,TYPE_DEFINITIONS[propDef.type]);if(!("value"in propDef))return{type:"object",value:propDef};type=getTypeOf(propDef.value);return Object.assign({type},propDef,TYPE_DEFINITIONS[type])}return Object.assign({type,
value:propDef},TYPE_DEFINITIONS[type])}function getTypeOf(value){return Array.isArray(value)||ArrayBuffer.isView(value)?"array":(0,_typeof2["default"])(value)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.parsePropTypes=function(propDefs){var propTypes={},propName;for(propName in propDefs){var propType=parsePropType(propDefs[propName]);propTypes[propName]=propType}return propTypes};var _typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),
TYPE_DEFINITIONS={number:{validate:function(value,propType){return Number.isFinite(value)&&(!("max"in propType)||value<=propType.max)&&(!("min"in propType)||value>=propType.min)}},array:{validate:function(value,propType){return Array.isArray(value)||ArrayBuffer.isView(value)}}}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$shadertools$dist$es5$lib$filters$prop_types.js.map
