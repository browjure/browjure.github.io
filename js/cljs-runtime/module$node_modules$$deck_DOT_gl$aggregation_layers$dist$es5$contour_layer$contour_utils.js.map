{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$contour_layer$contour_utils.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/contour-layer/contour-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$contour_layer$contour_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateContours = generateContours;\n\nvar _marchingSquares = require(\"./marching-squares\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction generateContours(_ref) {\n  var thresholdData = _ref.thresholdData,\n      colors = _ref.colors,\n      cellWeights = _ref.cellWeights,\n      gridSize = _ref.gridSize,\n      gridOrigin = _ref.gridOrigin,\n      cellSize = _ref.cellSize;\n  var contourSegments = [];\n  var contourPolygons = [];\n  var width = gridSize[0];\n  var height = gridSize[1];\n  var segmentIndex = 0;\n  var polygonIndex = 0;\n\n  var _iterator = _createForOfIteratorHelper(thresholdData),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var data = _step.value;\n      var contour = data.contour;\n      var threshold = contour.threshold;\n\n      for (var x = -1; x < width; x++) {\n        for (var y = -1; y < height; y++) {\n          var _getCode = (0, _marchingSquares.getCode)({\n            cellWeights: cellWeights,\n            threshold: threshold,\n            x: x,\n            y: y,\n            width: width,\n            height: height\n          }),\n              code = _getCode.code,\n              meanCode = _getCode.meanCode;\n\n          var opts = {\n            gridOrigin: gridOrigin,\n            cellSize: cellSize,\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            code: code,\n            meanCode: meanCode,\n            thresholdData: data\n          };\n\n          if (Array.isArray(threshold)) {\n            opts.type = _marchingSquares.CONTOUR_TYPE.ISO_BANDS;\n            var polygons = (0, _marchingSquares.getVertices)(opts);\n\n            var _iterator2 = _createForOfIteratorHelper(polygons),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var polygon = _step2.value;\n                contourPolygons[polygonIndex++] = {\n                  vertices: polygon,\n                  contour: contour\n                };\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          } else {\n            opts.type = _marchingSquares.CONTOUR_TYPE.ISO_LINES;\n            var vertices = (0, _marchingSquares.getVertices)(opts);\n\n            for (var i = 0; i < vertices.length; i += 2) {\n              contourSegments[segmentIndex++] = {\n                start: vertices[i],\n                end: vertices[i + 1],\n                contour: contour\n              };\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    contourSegments: contourSegments,\n    contourPolygons: contourPolygons\n  };\n}\n//# sourceMappingURL=contour-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","defineProperty","generateContours","_ref","cellWeights","gridSize","gridOrigin","cellSize","contourSegments","contourPolygons","width","height","segmentIndex","polygonIndex","_iterator","thresholdData","_step","data","contour","threshold","x","y","_getCode","_marchingSquares","getCode","opts","code","meanCode","type","CONTOUR_TYPE","ISO_BANDS","polygons","getVertices","_iterator2","_step2","polygon","vertices","ISO_LINES","start","end"]
}
