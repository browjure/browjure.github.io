shadow$provide.module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$mvt_layer$coordinate_transform=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function Point(_ref,_ref2,viewport){var _ref3=(0,_slicedToArray2["default"])(_ref,2);_ref=_ref3[0];_ref3=_ref3[1];
var _ref4=(0,_slicedToArray2["default"])(_ref2,2);_ref2=_ref4[0];_ref4=_ref4[1];_ref=(0,_math.lerp)(_ref2[0],_ref4[0],_ref);_ref3=(0,_math.lerp)(_ref2[1],_ref4[1],_ref3);return viewport.unprojectFlat([_ref,_ref3])}function getPoints(geometry,bbox,viewport){return geometry.map(function(g){return Point(g,bbox,viewport)})}function Polygon(polygon,bbox,viewport){return polygon.map(function(polygonRing){return getPoints(polygonRing,bbox,viewport)})}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.transform=function(geometry,bbox,viewport){var nw=viewport.projectFlat([bbox.west,bbox.north]);bbox=viewport.projectFlat([bbox.east,bbox.south]);nw=[nw,bbox];return _objectSpread(_objectSpread({},geometry),{},{coordinates:availableTransformations[geometry.type](geometry.coordinates,nw,viewport)})};var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),
_math=require("module$node_modules$math_DOT_gl$dist$es5$index"),availableTransformations={Point,MultiPoint:function(multiPoint,bbox,viewport){return getPoints(multiPoint,bbox,viewport)},LineString:function(line,bbox,viewport){return getPoints(line,bbox,viewport)},MultiLineString:function(multiLineString,bbox,viewport){return multiLineString.map(function(lineString){return getPoints(lineString,bbox,viewport)})},Polygon,MultiPolygon:function(multiPolygon,bbox,viewport){return multiPolygon.map(function(polygon){return Polygon(polygon,
bbox,viewport)})}}}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$mvt_layer$coordinate_transform.js.map
