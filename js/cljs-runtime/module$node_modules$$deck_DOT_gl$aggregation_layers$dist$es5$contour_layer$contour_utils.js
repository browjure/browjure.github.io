shadow$provide.module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$contour_layer$contour_utils=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},
e:function(_e){throw _e;},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=o[Symbol.iterator]()},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,
minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}Object.defineProperty(exports,
"__esModule",{value:!0});exports.generateContours=function(_ref){var cellWeights=_ref.cellWeights,gridSize=_ref.gridSize,gridOrigin=_ref.gridOrigin,cellSize=_ref.cellSize,contourSegments=[],contourPolygons=[],width=gridSize[0];gridSize=gridSize[1];var segmentIndex=0,polygonIndex=0;_ref=_createForOfIteratorHelper(_ref.thresholdData);var _step;try{for(_ref.s();!(_step=_ref.n()).done;)for(var data=_step.value,contour=data.contour,threshold=contour.threshold,x=-1;x<width;x++)for(var y=-1;y<gridSize;y++){var _getCode=
(0,_marchingSquares.getCode)({cellWeights,threshold,x,y,width,height:gridSize}),opts={gridOrigin,cellSize,x,y,width,height:gridSize,code:_getCode.code,meanCode:_getCode.meanCode,thresholdData:data};if(Array.isArray(threshold)){opts.type=_marchingSquares.CONTOUR_TYPE.ISO_BANDS;var polygons=(0,_marchingSquares.getVertices)(opts),_iterator2=_createForOfIteratorHelper(polygons),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var polygon=_step2.value;contourPolygons[polygonIndex++]={vertices:polygon,
contour}}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}}else{opts.type=_marchingSquares.CONTOUR_TYPE.ISO_LINES;for(var vertices=(0,_marchingSquares.getVertices)(opts),i=0;i<vertices.length;i+=2)contourSegments[segmentIndex++]={start:vertices[i],end:vertices[i+1],contour}}}}catch(err){_ref.e(err)}finally{_ref.f()}return{contourSegments,contourPolygons}};var _marchingSquares=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$contour_layer$marching_squares")}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$contour_layer$contour_utils.js.map
