shadow$provide.module$node_modules$$math_DOT_gl$culling$dist$es5$lib$culling_volume=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e;
},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=o[Symbol.iterator]()},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,
minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_core=require("module$node_modules$$math_DOT_gl$core$dist$es5$index"),_constants=require("module$node_modules$$math_DOT_gl$culling$dist$es5$constants"),_plane=global(require("module$node_modules$$math_DOT_gl$culling$dist$es5$lib$plane")),
faces=[new _core.Vector3([1,0,0]),new _core.Vector3([0,1,0]),new _core.Vector3([0,0,1])],scratchPlaneCenter=new _core.Vector3,scratchPlaneNormal=new _core.Vector3;new _plane["default"](new _core.Vector3(1,0,0),0);require=function(){function CullingVolume(){var planes=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];(0,_classCallCheck2["default"])(this,CullingVolume);this.planes=planes;(0,_core.assert)(this.planes.every(function(plane){return plane instanceof _plane["default"]}))}(0,_createClass2["default"])(CullingVolume,
null,[{key:"MASK_OUTSIDE",get:function(){return 4294967295}},{key:"MASK_INSIDE",get:function(){return 0}},{key:"MASK_INDETERMINATE",get:function(){return 2147483647}}]);(0,_createClass2["default"])(CullingVolume,[{key:"fromBoundingSphere",value:function(boundingSphere){this.planes.length=2*faces.length;var center=boundingSphere.center;boundingSphere=boundingSphere.radius;var planeIndex=0,_iterator=_createForOfIteratorHelper(faces),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var faceNormal=
_step.value,plane0=this.planes[planeIndex],plane1=this.planes[planeIndex+1];plane0||(plane0=this.planes[planeIndex]=new _plane["default"]);plane1||(plane1=this.planes[planeIndex+1]=new _plane["default"]);var plane0Center=scratchPlaneCenter.copy(faceNormal).scale(-boundingSphere).add(center);faceNormal.dot(plane0Center);plane0.fromPointNormal(plane0Center,faceNormal);var plane1Center=scratchPlaneCenter.copy(faceNormal).scale(boundingSphere).add(center),negatedFaceNormal=scratchPlaneNormal.copy(faceNormal).negate();
negatedFaceNormal.dot(plane1Center);plane1.fromPointNormal(plane1Center,negatedFaceNormal);planeIndex+=2}}catch(err){_iterator.e(err)}finally{_iterator.f()}return this}},{key:"computeVisibility",value:function(boundingVolume){(0,_core.assert)(boundingVolume);var intersect=_constants.INTERSECTION.INSIDE,_iterator2=_createForOfIteratorHelper(this.planes),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;)switch(boundingVolume.intersectPlane(_step2.value)){case _constants.INTERSECTION.OUTSIDE:return _constants.INTERSECTION.OUTSIDE;
case _constants.INTERSECTION.INTERSECTING:intersect=_constants.INTERSECTION.INTERSECTING}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}return intersect}},{key:"computeVisibilityWithPlaneMask",value:function(boundingVolume,parentPlaneMask){(0,_core.assert)(boundingVolume,"boundingVolume is required.");(0,_core.assert)(Number.isFinite(parentPlaneMask),"parentPlaneMask is required.");if(parentPlaneMask===CullingVolume.MASK_OUTSIDE||parentPlaneMask===CullingVolume.MASK_INSIDE)return parentPlaneMask;
for(var mask=CullingVolume.MASK_INSIDE,planes=this.planes,k=0;k<this.planes.length;++k){var flag=31>k?1<<k:0;if(!(31>k&&0===(parentPlaneMask&flag))){var result=boundingVolume.intersectPlane(planes[k]);if(result===_constants.INTERSECTION.OUTSIDE)return CullingVolume.MASK_OUTSIDE;result===_constants.INTERSECTION.INTERSECTING&&(mask|=flag)}}return mask}}]);return CullingVolume}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$culling$dist$es5$lib$culling_volume.js.map
