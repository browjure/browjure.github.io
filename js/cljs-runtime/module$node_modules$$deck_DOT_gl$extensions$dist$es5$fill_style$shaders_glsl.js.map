{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$extensions$dist$es5$fill_style$shaders_glsl.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAe,4EAAf,CAAiG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzIC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,cAAR,CAAyB,IAAK,EAE9B,KAAIC,MAAQP,OAAA,CAAQ,sDAAR,CAiDZE,QAAA,CAAQI,cAAR,CARqBA,CACnBE,KAAM,cADaF,CAEnBG,GAzCcC,ssBAuCKJ;AAGnBK,GAzCcC,4SAsCKN,CAInBO,OAzCWA,CACX,+BAAgC,8CADrBA,CAEX,yBAA0B,8TAFfA;AAGX,yBAA0B,6iBAHfA,CAqCQP;AAKnBQ,aAAc,CAACP,KAAD,CAAOQ,OAAP,CALKT,CAMnBU,YArCFC,QAA2B,EAAG,CAC5B,IAAIC,KAA0B,CAAnB,CAAAC,SAAA,CAAUC,MAAV,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,EAA/E,CACIG,SAA8B,CAAnB,CAAAH,SAAA,CAAUC,MAAV,CAAuBD,SAAA,CAAU,CAAV,CAAvB,CAAsCE,IAAAA,EAErD,IAAI,oBAAJ,EAA4BH,KAA5B,CAEE,MADIK,SACG,CADkBL,IAClB,CADuBK,kBACvB,CAAA,CACLC,oBAAqBD,QADhB,CAELE,wBAAyB,CAACF,QAAD,CAAoBG,KAApB,CAA2BH,QAA3B,CAA8CI,MAA9C,CAFpB,CAMT,IAAIT,IAAJ,CAASU,QAAT,CAAmB,CAAA,IACbA,SAAWV,IAAXU,CAAgBA,QADH,CAEbC,sBAAwBX,IAAxBW,CAA6BC,eAC7BA,sBAAAA,CAA4C,IAAK,EAA/B,GAAAD,qBAAA,CAAmC,CAAA,CAAnC,CAA0CA,qBAC5DE,KAAAA,CAAwBb,IAAxBa,CAA6BC,kBAC7BA;IAAAA,CAA+C,IAAK,EAA/B,GAAAD,IAAA,CAAmC,CAAA,CAAnC,CAA0CA,IALlD,KAMbE,0BAA4BX,QAA5BW,CAAqCA,yBAGzC,OAAO,CACLC,wBAAyB,CAHKZ,QACHa,CADYC,yBACZD,GAA8B5B,KAA9B4B,CAAoCE,iBAApCF,CAAsDG,SAAtDH,CAAkEF,yBAAlEE,CAA8FP,QAAA,CAASW,eAAT,CAAyBN,yBAAzB,CAEhG,EAAuBO,KAAvB,CAA6B,CAA7B,CAAgC,CAAhC,CADpB,CAELC,iBAAkBX,qBAFb,CAGLY,oBAAqBV,IAHhB,CATU,CAgBnB,MAAO,EA5BqB,CA+BT1B,CAjDoH;",
"sources":["node_modules/@deck_DOT_gl/extensions/dist/es5/fill-style/shaders.glsl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$extensions$dist$es5$fill_style$shaders_glsl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patternShaders = void 0;\n\nvar _core = require(\"@deck.gl/core\");\n\nvar patternVs = \"\\n#ifdef NON_INSTANCED_MODEL\\n  #define FILL_PATTERN_FRAME_ATTRIB fillPatternFrames\\n  #define FILL_PATTERN_SCALE_ATTRIB fillPatternScales\\n  #define FILL_PATTERN_OFFSET_ATTRIB fillPatternOffsets\\n#else\\n  #define FILL_PATTERN_FRAME_ATTRIB instanceFillPatternFrames\\n  #define FILL_PATTERN_SCALE_ATTRIB instanceFillPatternScales\\n  #define FILL_PATTERN_OFFSET_ATTRIB instanceFillPatternOffsets\\n#endif\\n\\nattribute vec4 FILL_PATTERN_FRAME_ATTRIB;\\nattribute float FILL_PATTERN_SCALE_ATTRIB;\\nattribute vec2 FILL_PATTERN_OFFSET_ATTRIB;\\n\\nuniform bool fill_patternEnabled;\\nuniform vec2 fill_patternTextureSize;\\n\\nvarying vec2 fill_uv;\\nvarying vec4 fill_patternBounds;\\nvarying vec3 fill_patternPlacement;\\n\";\nvar patternFs = \"\\nuniform bool fill_patternEnabled;\\nuniform bool fill_patternMask;\\nuniform sampler2D fill_patternTexture;\\nuniform vec2 fill_uvCoordinateOrigin;\\n\\nvarying vec4 fill_patternBounds;\\nvarying vec3 fill_patternPlacement;\\nvarying vec2 fill_uv;\\n\\nconst float FILL_UV_SCALE = 512.0 / 40000000.0;\\n\";\nvar inject = {\n  'vs:DECKGL_FILTER_GL_POSITION': \"\\n    fill_uv = geometry.position.xy;\\n  \",\n  'vs:DECKGL_FILTER_COLOR': \"\\n    if (fill_patternEnabled) {\\n      fill_patternBounds = FILL_PATTERN_FRAME_ATTRIB / vec4(fill_patternTextureSize, fill_patternTextureSize);\\n      fill_patternPlacement.xy = FILL_PATTERN_OFFSET_ATTRIB;\\n      fill_patternPlacement.z = FILL_PATTERN_SCALE_ATTRIB * FILL_PATTERN_FRAME_ATTRIB.w;\\n    }\\n  \",\n  'fs:DECKGL_FILTER_COLOR': \"\\n    if (fill_patternEnabled) {\\n      float scale = FILL_UV_SCALE * fill_patternPlacement.z;\\n      vec2 patternUV = mod(mod(fill_uvCoordinateOrigin, scale) + fill_uv, scale) / scale;\\n      patternUV = mod(fill_patternPlacement.xy + patternUV, 1.0);\\n\\n      vec2 texCoords = fill_patternBounds.xy + fill_patternBounds.zw * patternUV;\\n\\n      vec4 patternColor = texture2D(fill_patternTexture, texCoords);\\n      color.a *= patternColor.a;\\n      if (!fill_patternMask) {\\n        color.rgb = patternColor.rgb;\\n      }\\n    }\\n  \"\n};\n\nfunction getPatternUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var uniforms = arguments.length > 1 ? arguments[1] : undefined;\n\n  if ('fillPatternTexture' in opts) {\n    var fillPatternTexture = opts.fillPatternTexture;\n    return {\n      fill_patternTexture: fillPatternTexture,\n      fill_patternTextureSize: [fillPatternTexture.width, fillPatternTexture.height]\n    };\n  }\n\n  if (opts.viewport) {\n    var viewport = opts.viewport,\n        _opts$fillPatternMask = opts.fillPatternMask,\n        fillPatternMask = _opts$fillPatternMask === void 0 ? true : _opts$fillPatternMask,\n        _opts$fillPatternEnab = opts.fillPatternEnabled,\n        fillPatternEnabled = _opts$fillPatternEnab === void 0 ? true : _opts$fillPatternEnab;\n    var project_uCoordinateOrigin = uniforms.project_uCoordinateOrigin,\n        project_uCoordinateSystem = uniforms.project_uCoordinateSystem;\n    var coordinateOriginCommon = project_uCoordinateSystem === _core.COORDINATE_SYSTEM.CARTESIAN ? project_uCoordinateOrigin : viewport.projectPosition(project_uCoordinateOrigin);\n    return {\n      fill_uvCoordinateOrigin: coordinateOriginCommon.slice(0, 2),\n      fill_patternMask: fillPatternMask,\n      fill_patternEnabled: fillPatternEnabled\n    };\n  }\n\n  return {};\n}\n\nvar patternShaders = {\n  name: 'fill-pattern',\n  vs: patternVs,\n  fs: patternFs,\n  inject: inject,\n  dependencies: [_core.project],\n  getUniforms: getPatternUniforms\n};\nexports.patternShaders = patternShaders;\n//# sourceMappingURL=shaders.glsl.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","patternShaders","_core","name","vs","patternVs","fs","patternFs","inject","dependencies","project","getUniforms","getPatternUniforms","opts","arguments","length","undefined","uniforms","fillPatternTexture","fill_patternTexture","fill_patternTextureSize","width","height","viewport","_opts$fillPatternMask","fillPatternMask","_opts$fillPatternEnab","fillPatternEnabled","project_uCoordinateOrigin","fill_uvCoordinateOrigin","coordinateOriginCommon","project_uCoordinateSystem","COORDINATE_SYSTEM","CARTESIAN","projectPosition","slice","fill_patternMask","fill_patternEnabled"]
}
