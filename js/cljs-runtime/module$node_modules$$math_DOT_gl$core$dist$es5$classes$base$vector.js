shadow$provide.module$node_modules$$math_DOT_gl$core$dist$es5$classes$base$vector=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),
_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf"));module=global(require("module$node_modules$$math_DOT_gl$core$dist$es5$classes$base$math_array"));var _validators=require("module$node_modules$$math_DOT_gl$core$dist$es5$lib$validators"),
_assert=global(require("module$node_modules$$math_DOT_gl$core$dist$es5$lib$assert"));require=function(_MathArray){function Vector(){(0,_classCallCheck2["default"])(this,Vector);return _super.apply(this,arguments)}(0,_inherits2["default"])(Vector,_MathArray);var _super=_createSuper(Vector);(0,_createClass2["default"])(Vector,[{key:"copy",value:function(vector){(0,_assert["default"])(!1);return this}},{key:"len",value:function(){return Math.sqrt(this.lengthSquared())}},{key:"magnitude",value:function(){return this.len()}},
{key:"lengthSquared",value:function(){for(var length=0,i=0;i<this.ELEMENTS;++i)length+=this[i]*this[i];return length}},{key:"magnitudeSquared",value:function(){return this.lengthSquared()}},{key:"distance",value:function(mathArray){return Math.sqrt(this.distanceSquared(mathArray))}},{key:"distanceSquared",value:function(mathArray){for(var length=0,i=0;i<this.ELEMENTS;++i){var dist=this[i]-mathArray[i];length+=dist*dist}return(0,_validators.checkNumber)(length)}},{key:"dot",value:function(mathArray){for(var product=
0,i=0;i<this.ELEMENTS;++i)product+=this[i]*mathArray[i];return(0,_validators.checkNumber)(product)}},{key:"normalize",value:function(){var length=this.magnitude();if(0!==length)for(var i=0;i<this.ELEMENTS;++i)this[i]/=length;return this.check()}},{key:"multiply",value:function(){for(var _len=arguments.length,vectors=Array(_len),_key=0;_key<_len;_key++)vectors[_key]=arguments[_key];for(_len=0;_len<vectors.length;_len++){_key=vectors[_len];for(var i=0;i<this.ELEMENTS;++i)this[i]*=_key[i]}return this.check()}},
{key:"divide",value:function(){for(var _len2=arguments.length,vectors=Array(_len2),_key2=0;_key2<_len2;_key2++)vectors[_key2]=arguments[_key2];for(_len2=0;_len2<vectors.length;_len2++){_key2=vectors[_len2];for(var i=0;i<this.ELEMENTS;++i)this[i]/=_key2[i]}return this.check()}},{key:"lengthSq",value:function(){return this.lengthSquared()}},{key:"distanceTo",value:function(vector){return this.distance(vector)}},{key:"distanceToSquared",value:function(vector){return this.distanceSquared(vector)}},{key:"getComponent",
value:function(i){(0,_assert["default"])(0<=i&&i<this.ELEMENTS,"index is out of range");return(0,_validators.checkNumber)(this[i])}},{key:"setComponent",value:function(i,value){(0,_assert["default"])(0<=i&&i<this.ELEMENTS,"index is out of range");this[i]=value;return this.check()}},{key:"addVectors",value:function(a,b){return this.copy(a).add(b)}},{key:"subVectors",value:function(a,b){return this.copy(a).subtract(b)}},{key:"multiplyVectors",value:function(a,b){return this.copy(a).multiply(b)}},{key:"addScaledVector",
value:function(a,b){return this.add((new this.constructor(a)).multiplyScalar(b))}},{key:"x",get:function(){return this[0]},set:function(value){this[0]=(0,_validators.checkNumber)(value)}},{key:"y",get:function(){return this[1]},set:function(value){this[1]=(0,_validators.checkNumber)(value)}}]);return Vector}(module["default"]);exports["default"]=require}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$core$dist$es5$classes$base$vector.js.map
