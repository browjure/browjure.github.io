shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute_manager=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_attribute=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute")),
_log=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$log")),_debug=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$debug$index")),_attributeTransitionManager=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute_transition_manager"));require=function(){function AttributeManager(gl){var _ref=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref$id=_ref.id;_ref$id=void 0===_ref$id?"attribute-manager":_ref$id;var stats=_ref.stats;
_ref=_ref.timeline;(0,_classCallCheck2["default"])(this,AttributeManager);this.id=_ref$id;this.gl=gl;this.attributes={};this.updateTriggers={};this.accessors={};this.needsRedraw=!0;this.userData={};this.stats=stats;this.attributeTransitionManager=new _attributeTransitionManager["default"](gl,{id:"".concat(_ref$id,"-transitions"),timeline:_ref});Object.seal(this)}(0,_createClass2["default"])(AttributeManager,[{key:"finalize",value:function(){for(var attributeName in this.attributes)this.attributes[attributeName]["delete"]();
this.attributeTransitionManager.finalize()}},{key:"getNeedsRedraw",value:function(){var opts=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{clearRedrawFlags:!1},redraw=this.needsRedraw;this.needsRedraw=this.needsRedraw&&!opts.clearRedrawFlags;return redraw&&this.id}},{key:"setNeedsRedraw",value:function(){this.needsRedraw=!0;return this}},{key:"add",value:function(attributes,updaters){this._add(attributes,updaters)}},{key:"addInstanced",value:function(attributes,updaters){this._add(attributes,
updaters,{instanced:1})}},{key:"remove",value:function(attributeNameArray){for(var i=0;i<attributeNameArray.length;i++){var name=attributeNameArray[i];void 0!==this.attributes[name]&&(this.attributes[name]["delete"](),delete this.attributes[name])}}},{key:"invalidate",value:function(triggerName,dataRange){dataRange=this._invalidateTrigger(triggerName,dataRange);(0,_debug["default"])("attributeManager.invalidate",this,triggerName,dataRange)}},{key:"invalidateAll",value:function(dataRange){for(var attributeName in this.attributes)this.attributes[attributeName].setNeedsUpdate(attributeName,
dataRange);(0,_debug["default"])("attributeManager.invalidate",this,"all")}},{key:"update",value:function(){var _ref2=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},data=_ref2.data,numInstances=_ref2.numInstances,_ref2$startIndices=_ref2.startIndices;_ref2$startIndices=void 0===_ref2$startIndices?null:_ref2$startIndices;var transitions=_ref2.transitions,_ref2$props=_ref2.props;_ref2$props=void 0===_ref2$props?{}:_ref2$props;var _ref2$buffers=_ref2.buffers;_ref2$buffers=void 0===_ref2$buffers?
{}:_ref2$buffers;_ref2=_ref2.context;_ref2=void 0===_ref2?{}:_ref2;var updated=!1;(0,_debug["default"])("attributeManager.updateStart",this);this.stats&&this.stats.get("Update Attributes").timeStart();for(var attributeName in this.attributes){var attribute=this.attributes[attributeName],accessorName=attribute.settings.accessor;attribute.startIndices=_ref2$startIndices;_ref2$props[attributeName]&&_log["default"].removed("props.".concat(attributeName),"data.attributes.".concat(attributeName))();attribute.setExternalBuffer(_ref2$buffers[attributeName])||
attribute.setBinaryValue(_ref2$buffers[accessorName],data.startIndices)||!_ref2$buffers[accessorName]&&attribute.setConstantValue(_ref2$props[accessorName])||!attribute.needsUpdate()||(updated=!0,this._updateAttribute({attribute,numInstances,data,props:_ref2$props,context:_ref2}));this.needsRedraw|=attribute.needsRedraw()}updated&&(0,_debug["default"])("attributeManager.updateEnd",this,numInstances);this.stats&&this.stats.get("Update Attributes").timeEnd();this.attributeTransitionManager.update({attributes:this.attributes,
numInstances,transitions})}},{key:"updateTransition",value:function(){var transitionUpdated=this.attributeTransitionManager.run();this.needsRedraw=this.needsRedraw||transitionUpdated;return transitionUpdated}},{key:"getAttributes",value:function(){return this.attributes}},{key:"getChangedAttributes",value:function(){var opts=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{clearChangedFlags:!1},attributes=this.attributes,attributeTransitionManager=this.attributeTransitionManager,changedAttributes=
Object.assign({},attributeTransitionManager.getAttributes()),attributeName;for(attributeName in attributes){var attribute=attributes[attributeName];attribute.needsRedraw(opts)&&!attributeTransitionManager.hasAttribute(attributeName)&&(changedAttributes[attributeName]=attribute)}return changedAttributes}},{key:"getShaderAttributes",value:function(attributes){var excludeAttributes=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};attributes||(attributes=this.getAttributes());var shaderAttributes=
{},attributeName;for(attributeName in attributes)excludeAttributes[attributeName]||Object.assign(shaderAttributes,attributes[attributeName].getShaderAttributes());return shaderAttributes}},{key:"getAccessors",value:function(){return this.updateTriggers}},{key:"_add",value:function(attributes,updaters){var extraProps=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};updaters&&_log["default"].warn("AttributeManager.add({updaters}) - updater map no longer supported")();var newAttributes={},attributeName;
for(attributeName in attributes){var newAttribute=this._createAttribute(attributeName,attributes[attributeName],extraProps);newAttributes[attributeName]=newAttribute}Object.assign(this.attributes,newAttributes);this._mapUpdateTriggersToAttributes()}},{key:"_createAttribute",value:function(name,attribute,extraProps){return new _attribute["default"](this.gl,Object.assign({},attribute,{id:name,constant:attribute.constant||!1,isIndexed:attribute.isIndexed||attribute.elements,size:attribute.elements&&
1||attribute.size,value:attribute.value||null,divisor:attribute.instanced||extraProps.instanced?1:attribute.divisor}))}},{key:"_mapUpdateTriggersToAttributes",value:function(){var _this=this,triggers={},_loop=function(attributeName){_this.attributes[attributeName].getUpdateTriggers().forEach(function(triggerName){triggers[triggerName]||(triggers[triggerName]=[]);triggers[triggerName].push(attributeName)})},attributeName$jscomp$0;for(attributeName$jscomp$0 in this.attributes)_loop(attributeName$jscomp$0);
this.updateTriggers=triggers}},{key:"_invalidateTrigger",value:function(triggerName,dataRange){var attributes=this.attributes;(triggerName=this.updateTriggers[triggerName])&&triggerName.forEach(function(name){(name=attributes[name])&&name.setNeedsUpdate(name.id,dataRange)});return triggerName}},{key:"_updateAttribute",value:function(opts){var attribute=opts.attribute,numInstances=opts.numInstances;(0,_debug["default"])("attribute.updateStart",attribute);attribute.allocate(numInstances)&&(0,_debug["default"])("attribute.allocate",
attribute,numInstances);attribute.updateBuffer(opts)&&(this.needsRedraw=!0,(0,_debug["default"])("attribute.updateEnd",attribute,numInstances))}}]);return AttributeManager}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$attribute_manager.js.map
