{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$core$dist$es5$utils$iterable_utils.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/core/dist/es5/utils/iterable-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$core$dist$es5$utils$iterable_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIterable = createIterable;\nexports.isAsyncIterable = isAsyncIterable;\nexports.getAccessorFromBuffer = getAccessorFromBuffer;\nvar EMPTY_ARRAY = [];\nvar placeholderArray = [];\n\nfunction createIterable(data) {\n  var startRow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var endRow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  var iterable = EMPTY_ARRAY;\n  var objectInfo = {\n    index: -1,\n    data: data,\n    target: []\n  };\n\n  if (!data) {\n    iterable = EMPTY_ARRAY;\n  } else if (typeof data[Symbol.iterator] === 'function') {\n    iterable = data;\n  } else if (data.length > 0) {\n    placeholderArray.length = data.length;\n    iterable = placeholderArray;\n  }\n\n  if (startRow > 0 || Number.isFinite(endRow)) {\n    iterable = (Array.isArray(iterable) ? iterable : Array.from(iterable)).slice(startRow, endRow);\n    objectInfo.index = startRow - 1;\n  }\n\n  return {\n    iterable: iterable,\n    objectInfo: objectInfo\n  };\n}\n\nfunction isAsyncIterable(data) {\n  return data && data[Symbol.asyncIterator];\n}\n\nfunction getAccessorFromBuffer(typedArray, _ref) {\n  var size = _ref.size,\n      stride = _ref.stride,\n      offset = _ref.offset,\n      startIndices = _ref.startIndices,\n      nested = _ref.nested;\n  var bytesPerElement = typedArray.BYTES_PER_ELEMENT;\n  var elementStride = stride ? stride / bytesPerElement : size;\n  var elementOffset = offset ? offset / bytesPerElement : 0;\n  var vertexCount = Math.floor((typedArray.length - elementOffset) / elementStride);\n  return function (_, _ref2) {\n    var index = _ref2.index,\n        target = _ref2.target;\n\n    if (!startIndices) {\n      var sourceIndex = index * elementStride + elementOffset;\n\n      for (var j = 0; j < size; j++) {\n        target[j] = typedArray[sourceIndex + j];\n      }\n\n      return target;\n    }\n\n    var startIndex = startIndices[index];\n    var endIndex = startIndices[index + 1] || vertexCount;\n    var result;\n\n    if (nested) {\n      result = new Array(endIndex - startIndex);\n\n      for (var i = startIndex; i < endIndex; i++) {\n        var _sourceIndex = i * elementStride + elementOffset;\n\n        target = new Array(size);\n\n        for (var _j = 0; _j < size; _j++) {\n          target[_j] = typedArray[_sourceIndex + _j];\n        }\n\n        result[i - startIndex] = target;\n      }\n    } else if (elementStride === size) {\n      result = typedArray.subarray(startIndex * size + elementOffset, endIndex * size + elementOffset);\n    } else {\n      result = new typedArray.constructor((endIndex - startIndex) * size);\n      var targetIndex = 0;\n\n      for (var _i = startIndex; _i < endIndex; _i++) {\n        var _sourceIndex2 = _i * elementStride + elementOffset;\n\n        for (var _j2 = 0; _j2 < size; _j2++) {\n          result[targetIndex++] = typedArray[_sourceIndex2 + _j2];\n        }\n      }\n    }\n\n    return result;\n  };\n}\n//# sourceMappingURL=iterable-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","createIterable","data","startRow","arguments","length","undefined","endRow","Infinity","iterable","EMPTY_ARRAY","objectInfo","index","target","Symbol","iterator","placeholderArray","Number","isFinite","Array","isArray","from","slice","isAsyncIterable","asyncIterator","getAccessorFromBuffer","typedArray","_ref","size","stride","offset","startIndices","nested","bytesPerElement","BYTES_PER_ELEMENT","elementStride","elementOffset","vertexCount","Math","floor","_","_ref2","sourceIndex","j","startIndex","endIndex","result","i","_sourceIndex","_j","subarray","targetIndex","constructor","_i","_sourceIndex2","_j2"]
}
