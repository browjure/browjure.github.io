{
"version":3,
"file":"module$node_modules$d3_array$dist$d3_array.js",
"lineCount":42,
"mappings":"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",
"sources":["node_modules/d3-array/dist/d3-array.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_array$dist$d3_array\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-array/ v2.12.0 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n\nconst ascendingBisect = bisector(ascending);\nconst bisectRight = ascendingBisect.right;\nconst bisectLeft = ascendingBisect.left;\nconst bisectCenter = bisector(number).center;\n\nfunction count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n\nfunction length$1(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nfunction cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length$1);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n\nfunction cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n\nfunction deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n\n// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nclass Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nfunction fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nfunction fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n\nclass InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nclass InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nfunction groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nfunction rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nfunction indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n\nfunction permute(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n\nfunction sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f = ascending] = F;\n  if (f.length === 1 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascending(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascending(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(f);\n}\n\nfunction groupSort(values, reduce, key) {\n  return (reduce.length === 1\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    step = -step;\n    start = Math.ceil(start * step);\n    stop = Math.floor(stop * step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n\nfunction bin() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain\u2019s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don\u2019t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n\nfunction min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nfunction quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n\nfunction quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n\nfunction maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n\nfunction mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n\nfunction median(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n\nfunction* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nfunction merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n\nfunction minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n\nfunction pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nfunction least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n\nfunction leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n\nfunction greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n\nfunction greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n\nfunction scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n\nvar shuffle = shuffler(Math.random);\n\nfunction shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n\nfunction sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nfunction every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n\nfunction map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n\nfunction reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n\nfunction reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n\nfunction difference(values, ...others) {\n  values = new Set(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n\nfunction disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new Set();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n\nfunction set(values) {\n  return values instanceof Set ? values : new Set(values);\n}\n\nfunction intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    if (set.has(o)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      set.add(value);\n      if (Object.is(o, value)) break;\n    }\n  }\n  return true;\n}\n\nfunction subset(values, other) {\n  return superset(other, values);\n}\n\nfunction union(...others) {\n  const set = new Set();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n\nexports.Adder = Adder;\nexports.InternMap = InternMap;\nexports.InternSet = InternSet;\nexports.ascending = ascending;\nexports.bin = bin;\nexports.bisect = bisectRight;\nexports.bisectCenter = bisectCenter;\nexports.bisectLeft = bisectLeft;\nexports.bisectRight = bisectRight;\nexports.bisector = bisector;\nexports.count = count;\nexports.cross = cross;\nexports.cumsum = cumsum;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.difference = difference;\nexports.disjoint = disjoint;\nexports.every = every;\nexports.extent = extent;\nexports.fcumsum = fcumsum;\nexports.filter = filter;\nexports.fsum = fsum;\nexports.greatest = greatest;\nexports.greatestIndex = greatestIndex;\nexports.group = group;\nexports.groupSort = groupSort;\nexports.groups = groups;\nexports.histogram = bin;\nexports.index = index;\nexports.indexes = indexes;\nexports.intersection = intersection;\nexports.least = least;\nexports.leastIndex = leastIndex;\nexports.map = map;\nexports.max = max;\nexports.maxIndex = maxIndex;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.minIndex = minIndex;\nexports.nice = nice;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.quantileSorted = quantileSorted;\nexports.quickselect = quickselect;\nexports.range = range;\nexports.reduce = reduce;\nexports.reverse = reverse;\nexports.rollup = rollup;\nexports.rollups = rollups;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.shuffler = shuffler;\nexports.some = some;\nexports.sort = sort;\nexports.subset = subset;\nexports.sum = sum;\nexports.superset = superset;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.ticks = ticks;\nexports.transpose = transpose;\nexports.union = union;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","globalThis","self","d3","ascending","a","b","NaN","bisector","f","left","x","lo","hi","length","mid","compare","delta","d","ascendingComparator","center","i","right","number","numbers","values","valueof","undefined","value","index","count","length$1","array","empty","arrayify","Array","from","reducer","reduce","variance","mean","sum","deviation","v","Math","sqrt","extent","min","max","intern_get","_intern","_key","key","has","get","intern_set","set","intern_delete","delete","keyof","valueOf","identity","group","keys","nest","rollup","unique","Error","map","regroup","groups","InternMap","push","permute","source","sort","F","Symbol","iterator","TypeError","Uint32Array","j","c","constant","ticks","start","stop","reverse","step","n","tickIncrement","isFinite","ceil","floor","power","log","LN10","error","pow","e10","e5","e2","nice","prestep","sturges","LN2","bin","histogram","data","isArray","xz","domain","x0","x1","tz","threshold","tn","pop","m","shift","bins","bisectRight","histogram.value","_","arguments","histogram.domain","thresholds","histogram.thresholds","slice","call","quickselect","k","z","s","exp","sd","newLeft","newRight","t","swap","quantile","p","Float64Array","i0","value0","subarray","value1","maxIndex","flatten","arrays","minIndex","pair","leastIndex","minValue","shuffler","random","shuffle","i1","transpose","matrix","row","Set","superset","other","o","done","next","add","Object","is","ascendingBisect","bisectLeft","bisectCenter","Adder","constructor","_partials","_n","y","abs","Map","entries","defineProperties","InternSet","prototype","bisect","cross","lengths","fill","product","some","cumsum","descending","difference","others","disjoint","every","test","fcumsum","adder","filter","fsum","greatest","defined","maxValue","element","greatestIndex","groupSort","ak","av","bk","bv","indexes","intersection","least","mapper","median","merge","pairs","pairof","previous","first","quantileSorted","range","rollups","scan","subset","thresholdFreedmanDiaconis","freedmanDiaconis","thresholdScott","scott","thresholdSturges","tickStep","step0","step1","union","zip","defineProperty"]
}
