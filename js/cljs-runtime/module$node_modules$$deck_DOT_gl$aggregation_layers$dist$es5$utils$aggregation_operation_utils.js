shadow$provide.module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$aggregation_operation_utils=function(global,require,module,exports){function sumReducer(accu,cur){return accu+cur}function maxReducer(accu,cur){return cur>accu?cur:accu}function minReducer(accu,cur){return cur<accu?cur:accu}function getMean(pts,accessor){if(Number.isFinite(accessor))return pts.length?accessor:null;pts=pts.map(accessor).filter(Number.isFinite);return pts.length?pts.reduce(sumReducer,0)/pts.length:null}
function getSum(pts,accessor){if(Number.isFinite(accessor))return pts.length?pts.length*accessor:null;pts=pts.map(accessor).filter(Number.isFinite);return pts.length?pts.reduce(sumReducer,0):null}function getMax(pts,accessor){if(Number.isFinite(accessor))return pts.length?accessor:null;pts=pts.map(accessor).filter(Number.isFinite);return pts.length?pts.reduce(maxReducer,-Infinity):null}function getMin(pts,accessor){if(Number.isFinite(accessor))return pts.length?accessor:null;pts=pts.map(accessor).filter(Number.isFinite);
return pts.length?pts.reduce(minReducer,Infinity):null}function wrapAccessor(accessor){var context=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return Number.isFinite(accessor)?accessor:function(pt){context.index=pt.index;return accessor(pt.source,context)}}Object.defineProperty(exports,"__esModule",{value:!0});exports.getMean=getMean;exports.getSum=getSum;exports.getMax=getMax;exports.getMin=getMin;exports.getValueFunc=function(aggregation,accessor,context){aggregation=AGGREGATION_OPERATION[aggregation]||
AGGREGATION_OPERATION.SUM;accessor=wrapAccessor(accessor,context);switch(aggregation){case AGGREGATION_OPERATION.MIN:return function(pts){return getMin(pts,accessor)};case AGGREGATION_OPERATION.SUM:return function(pts){return getSum(pts,accessor)};case AGGREGATION_OPERATION.MEAN:return function(pts){return getMean(pts,accessor)};case AGGREGATION_OPERATION.MAX:return function(pts){return getMax(pts,accessor)};default:return null}};exports.wrapGetValueFunc=function(getValue){var context=1<arguments.length&&
void 0!==arguments[1]?arguments[1]:{};return function(pts){context.indices=pts.map(function(pt){return pt.index});return getValue(pts.map(function(pt){return pt.source}),context)}};exports.AGGREGATION_OPERATION=void 0;var AGGREGATION_OPERATION={SUM:1,MEAN:2,MIN:3,MAX:4};exports.AGGREGATION_OPERATION=AGGREGATION_OPERATION}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$aggregation_operation_utils.js.map
