{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$normalize_3d_tile_positions.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qGAAf,CAA0H,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlKC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,gCAAR,CAMAA,QAAyC,CAACC,IAAD,CAAOC,SAAP,CAAkBC,OAAlB,CAA2B,CAClE,GAAI,CAACF,IAAD,CAAMG,WAAV,CACE,MAAOF,UAGT,IAAIC,OAAA,CAAQ,UAAR,CAAJ,EAA2BA,OAAA,CAAQ,UAAR,CAA3B,CAA+CE,wBAA/C,CAAyE,CACvEJ,IAAA,CAAKG,WAAL,CAAmB,CAAA,CAajBE,QAAAA,CAAkB,IAAIC,KAAJ,CAAUC,OAGhC,KAFA,IAAIC,aAAe,IAAIC,YAAJ,CAAmC,CAAnC,CAbeT,IAaf,CAAsBU,UAAtB,CAAnB,CAESC,EAAI,CAAb,CAAgBA,CAAhB;AAfkCX,IAelC,CAAyBU,UAAzB,CAAqCC,CAAA,EAArC,CACEN,OAAA,CAAgBO,GAAhB,CAhBsCX,SAgBlB,CAAc,CAAd,CAAUU,CAAV,CAApB,CAhBsCV,SAgBA,CAAc,CAAd,CAAUU,CAAV,CAAkB,CAAlB,CAAtC,CAhBsCV,SAgBsB,CAAc,CAAd,CAAUU,CAAV,CAAkB,CAAlB,CAA5D,CAAA,CAAkFE,KAAlF,CAAwF,CAAxF,CAhBgCb,IAgBhC,CAAiGc,cAAjG,CAAA,CAAiHC,QAAjH,CAhBgCf,IAgBhC,CAA+HgB,oBAA/H,CAAA,CAAqJC,GAArJ,CAhBgCjB,IAgBhC,CAA8JkB,qBAA9J,CAAA,CAAqLC,OAArL,CAA6LX,YAA7L,CAA+M,CAA/M,CAA2MG,CAA3M,CAhBA,OAmBKH,aArBkE,CAKzE,MAAO,CACLY,KAAMC,KAAND,CAAYE,EAAZF,CAAeG,cADV,CAELzB,MAAOG,SAFF,CAGLuB,KAAM,CAHD,CAILC,WAAY,CAAA,CAJP,CAV2D,CAJpE,KAAInB,MAAQb,OAAA,CAAQ,sDAAR,CAAZ,CAEI4B,MAAQ5B,OAAA,CAAQ,yDAAR,CAVsJ;",
"sources":["node_modules/@loaders_DOT_gl/3d-tiles/dist/es5/lib/parsers/helpers/normalize-3d-tile-positions.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$normalize_3d_tile_positions\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalize3DTilePositionAttribute = normalize3DTilePositionAttribute;\n\nvar _core = require(\"@math.gl/core\");\n\nvar _math = require(\"@loaders.gl/math\");\n\nfunction normalize3DTilePositionAttribute(tile, positions, options) {\n  if (!tile.isQuantized) {\n    return positions;\n  }\n\n  if (options['3d-tiles'] && options['3d-tiles'].decodeQuantizedPositions) {\n    tile.isQuantized = false;\n    return decodeQuantizedPositions(tile, positions);\n  }\n\n  return {\n    type: _math.GL.UNSIGNED_SHORT,\n    value: positions,\n    size: 3,\n    normalized: true\n  };\n}\n\nfunction decodeQuantizedPositions(tile, positions) {\n  var scratchPosition = new _core.Vector3();\n  var decodedArray = new Float32Array(tile.pointCount * 3);\n\n  for (var i = 0; i < tile.pointCount; i++) {\n    scratchPosition.set(positions[i * 3], positions[i * 3 + 1], positions[i * 3 + 2]).scale(1 / tile.quantizedRange).multiply(tile.quantizedVolumeScale).add(tile.quantizedVolumeOffset).toArray(decodedArray, i * 3);\n  }\n\n  return decodedArray;\n}\n//# sourceMappingURL=normalize-3d-tile-positions.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","normalize3DTilePositionAttribute","tile","positions","options","isQuantized","decodeQuantizedPositions","scratchPosition","_core","Vector3","decodedArray","Float32Array","pointCount","i","set","scale","quantizedRange","multiply","quantizedVolumeScale","add","quantizedVolumeOffset","toArray","type","_math","GL","UNSIGNED_SHORT","size","normalized"]
}
