{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$retry.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEvHC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,KAAR,CAAgB,IAAK,EACrB,KAAIC,OAASP,OAAA,CAAQ,sDAAR,CAAb,CACIQ,QAAUR,OAAA,CAAQ,6DAAR,CADd,CAEIS,qBAAuBT,OAAA,CAAQ,yEAAR,CAiD3BE,QAAA,CAAQI,KAAR,CAhDAA,QAAc,CAACI,aAAD,CAAgB,CACJ,IAAK,EAA3B,GAAIA,aAAJ;CAAgCA,aAAhC,CAAgDC,QAAhD,CAGIC,cAAA,CADAF,aAAJ,EAA8C,QAA9C,GAAqB,MAAOA,cAA5B,CACaA,aADb,CAIa,CACLG,MAAOH,aADF,CAPa,KAWtBG,MAAQD,aAARC,CAAeA,KAAOC,cAAAA,CAAKF,aAALE,CAAYC,cAAtC,KAAsDA,eAAwB,IAAK,EAAZ,GAAAD,aAAA,CAAgB,CAAA,CAAhB,CAAwBA,aAC/F,OAAgB,EAAT,EAAAD,KAAA,CACD,QAAS,EAAG,CAAE,MAAOL,QAAP,CAAeQ,KAAjB,CADX,CAEDT,MAAA,CAAOU,OAAP,CAAe,QAAS,CAACC,MAAD,CAASC,UAAT,CAAqB,CAC3C,IAAIC,MAAQ,CAAZ,CACIC,QADJ,CAEIC,kBAAoBA,QAAS,EAAG,CAChC,IAAIC,UAAY,CAAA,CAChBF,SAAA,CAAWH,MAAA,CAAOM,SAAP,CAAiB,IAAIf,oBAAJ,CAAyBgB,kBAAzB,CAA4CN,UAA5C,CAAwD,QAAS,CAACd,KAAD,CAAQ,CAC7FU,cAAJ;CACIK,KADJ,CACY,CADZ,CAGAD,WAAA,CAAWO,IAAX,CAAgBrB,KAAhB,CAJiG,CAAzE,CAKzB,QAAS,CAACsB,GAAD,CAAM,CACVP,KAAA,EAAJ,CAAcP,KAAd,CACQQ,QAAJ,EACIA,QAAA,CAASO,WAAT,EAEA,CADAP,QACA,CADW,IACX,CAAAC,iBAAA,EAHJ,EAMIC,SANJ,CAMgB,CAAA,CAPpB,CAWIJ,UAAA,CAAWU,KAAX,CAAiBF,GAAjB,CAZU,CALU,CAAjB,CAoBPJ,UAAJ,GACIF,QAAA,CAASO,WAAT,EAEA,CADAP,QACA,CADW,IACX,CAAAC,iBAAA,EAHJ,CAtBgC,CA4BpCA,kBAAA,EA/B2C,CAA7C,CAdoB,CAPyF;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/retry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$retry\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nvar lift_1 = require(\"../util/lift\");\nvar empty_1 = require(\"../observable/empty\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction retry(configOrCount) {\n    if (configOrCount === void 0) { configOrCount = Infinity; }\n    var config;\n    if (configOrCount && typeof configOrCount === 'object') {\n        config = configOrCount;\n    }\n    else {\n        config = {\n            count: configOrCount,\n        };\n    }\n    var count = config.count, _a = config.resetOnSuccess, resetOnSuccess = _a === void 0 ? false : _a;\n    return count <= 0\n        ? function () { return empty_1.EMPTY; }\n        : lift_1.operate(function (source, subscriber) {\n            var soFar = 0;\n            var innerSub;\n            var subscribeForRetry = function () {\n                var syncUnsub = false;\n                innerSub = source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n                    if (resetOnSuccess) {\n                        soFar = 0;\n                    }\n                    subscriber.next(value);\n                }, function (err) {\n                    if (soFar++ < count) {\n                        if (innerSub) {\n                            innerSub.unsubscribe();\n                            innerSub = null;\n                            subscribeForRetry();\n                        }\n                        else {\n                            syncUnsub = true;\n                        }\n                    }\n                    else {\n                        subscriber.error(err);\n                    }\n                }));\n                if (syncUnsub) {\n                    innerSub.unsubscribe();\n                    innerSub = null;\n                    subscribeForRetry();\n                }\n            };\n            subscribeForRetry();\n        });\n}\nexports.retry = retry;\n//# sourceMappingURL=retry.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","retry","lift_1","empty_1","OperatorSubscriber_1","configOrCount","Infinity","config","count","_a","resetOnSuccess","EMPTY","operate","source","subscriber","soFar","innerSub","subscribeForRetry","syncUnsub","subscribe","OperatorSubscriber","next","err","unsubscribe","error"]
}
