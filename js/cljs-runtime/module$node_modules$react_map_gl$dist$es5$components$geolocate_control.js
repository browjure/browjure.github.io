shadow$provide.module$node_modules$react_map_gl$dist$es5$components$geolocate_control=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function setupMapboxGeolocateControl(context,props,geolocateButton){var control=new _mapboxgl["default"].GeolocateControl(props);
control._container=_globals.document.createElement("div");control._map={on:function(){},_getUIString:function(){return""}};control._setupUI(!0);control._map=context.map;control._geolocateButton=geolocateButton;context=context.eventManager;if(control.options.trackUserLocation&&context)context.on("panstart",function(){"ACTIVE_LOCK"===control._watchState&&(control._watchState="BACKGROUND",geolocateButton.classList.add("mapboxgl-ctrl-geolocate-background"),geolocateButton.classList.remove("mapboxgl-ctrl-geolocate-active"))});
control.on("geolocate",props.onGeolocate);return control}function GeolocateControl(props$jscomp$0){var thisRef=(0,_useMapControl["default"])(props$jscomp$0),context$jscomp$0=thisRef.context,containerRef=thisRef.containerRef,geolocateButtonRef=(0,React.useRef)(null),_useState=(0,React.useState)(null);_useState=(0,_slicedToArray2["default"])(_useState,2);var mapboxGeolocateControl=_useState[0],createMapboxGeolocateControl=_useState[1];_useState=(0,React.useState)(!1);var _useState4=(0,_slicedToArray2["default"])(_useState,
2);_useState=_useState4[0];var setSupportsGeolocation=_useState4[1];(0,React.useEffect)(function(){var control;context$jscomp$0.map&&(0,_geolocateUtils.isGeolocationSupported)().then(function(result){setSupportsGeolocation(result);geolocateButtonRef.current&&(control=setupMapboxGeolocateControl(context$jscomp$0,props$jscomp$0,geolocateButtonRef.current),control._updateCamera=function(position){var context=thisRef.context,props=thisRef.props;position=(new _mapboxgl["default"].LngLat(position.coords.longitude,
position.coords.latitude)).toBounds(position.coords.accuracy);position=context.viewport.fitBounds([[position._ne.lng,position._ne.lat],[position._sw.lng,position._sw.lat]],props.fitBoundsOptions);position=Object.assign({},context.viewport,{longitude:position.longitude,latitude:position.latitude,zoom:position.zoom});position=new _mapState["default"](position);position=Object.assign({},position.getViewportProps(),LINEAR_TRANSITION_PROPS);var onViewportChange=props.onViewportChange||context.onViewportChange||
noop;(props.onViewStateChange||context.onViewStateChange||noop)({viewState:position});onViewportChange(position)},createMapboxGeolocateControl(control))});return function(){control&&control._clearWatch()}},[context$jscomp$0.map]);var triggerGeolocate=(0,React.useCallback)(function(){mapboxGeolocateControl&&(mapboxGeolocateControl.options=thisRef.props,mapboxGeolocateControl.trigger())},[mapboxGeolocateControl]);(0,React.useEffect)(function(){props$jscomp$0.auto&&triggerGeolocate()},[mapboxGeolocateControl,
props$jscomp$0.auto]);(0,React.useEffect)(function(){mapboxGeolocateControl&&mapboxGeolocateControl._onZoom()},[context$jscomp$0.viewport.zoom]);_useState4=props$jscomp$0.className;var label=props$jscomp$0.label,disabledLabel=props$jscomp$0.disabledLabel,trackUserLocation=props$jscomp$0.trackUserLocation,style=(0,React.useMemo)(function(){return _objectSpread({position:"absolute"},props$jscomp$0.style)},[props$jscomp$0.style]);return React.createElement("div",{style,className:_useState4},React.createElement("div",
{key:"geolocate-control",className:"mapboxgl-ctrl mapboxgl-ctrl-group",ref:containerRef},React.createElement("button",{key:"geolocate",className:"mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate",ref:geolocateButtonRef,disabled:!_useState,"aria-pressed":!trackUserLocation,type:"button",title:_useState?label:disabledLabel,"aria-label":_useState?label:disabledLabel,onClick:triggerGeolocate},React.createElement("span",{className:"mapboxgl-ctrl-icon","aria-hidden":"true"}))))}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");
var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_slicedToArray2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),React=global(require("module$node_modules$react$index"));module=global(require("module$node_modules$prop_types$index"));
var _globals=require("module$node_modules$react_map_gl$dist$es5$utils$globals"),_mapboxgl=_interopRequireDefault(require("module$node_modules$react_map_gl$dist$es5$utils$mapboxgl_browser")),_mapState=_interopRequireDefault(require("module$node_modules$react_map_gl$dist$es5$utils$map_state"));_interopRequireDefault=_interopRequireDefault(require("module$node_modules$react_map_gl$dist$es5$utils$transition_manager"));var _geolocateUtils=require("module$node_modules$react_map_gl$dist$es5$utils$geolocate_utils"),
_useMapControl=global(require("module$node_modules$react_map_gl$dist$es5$components$use_map_control")),LINEAR_TRANSITION_PROPS=Object.assign({},_interopRequireDefault["default"].defaultProps,{transitionDuration:500}),noop=function(){};require=Object.assign({},_useMapControl.mapControlPropTypes,{className:module.string,style:module.object,label:module.string,disabledLabel:module.string,auto:module.bool,positionOptions:module.object,fitBoundsOptions:module.object,trackUserLocation:module.bool,showUserLocation:module.bool,
showAccuracyCircle:module.bool,onViewStateChange:module.func,onViewportChange:module.func,onGeolocate:module.func});global=Object.assign({},_useMapControl.mapControlDefaultProps,{className:"",label:"Find My Location",disabledLabel:"Location Not Available",auto:!1,positionOptions:{enableHighAccuracy:!1,timeout:6E3},fitBoundsOptions:{maxZoom:15},trackUserLocation:!1,showUserLocation:!0,showAccuracyCircle:!0,onGeolocate:function(){}});GeolocateControl.propTypes=require;GeolocateControl.defaultProps=
global;require=React.memo(GeolocateControl);exports["default"]=require}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$components$geolocate_control.js.map
