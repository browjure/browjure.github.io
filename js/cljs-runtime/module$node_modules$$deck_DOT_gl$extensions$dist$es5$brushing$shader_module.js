shadow$provide.module$node_modules$$deck_DOT_gl$extensions$dist$es5$brushing$shader_module=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var TARGET={source:0,target:1,custom:2,source_target:3};global={name:"brushing",dependencies:[require("module$node_modules$$deck_DOT_gl$core$dist$es5$index").project],vs:"\n  uniform bool brushing_enabled;\n  uniform int brushing_target;\n  uniform vec2 brushing_mousePos;\n  uniform float brushing_radius;\n\n  #ifdef NON_INSTANCED_MODEL\n  attribute vec2 brushingTargets;\n  #else\n  attribute vec2 instanceBrushingTargets;\n  #endif\n\n  varying float brushing_isVisible;\n\n  bool brushing_isPointInRange(vec2 position) {\n    if (!brushing_enabled) {\n      return true;\n    }\n    vec2 source_commonspace \x3d project_position(position);\n    vec2 target_commonspace \x3d project_position(brushing_mousePos);\n    float distance \x3d length((target_commonspace - source_commonspace) / project_uCommonUnitsPerMeter.xy);\n\n    return distance \x3c\x3d brushing_radius;\n  }\n\n  bool brushing_arePointsInRange(vec2 sourcePos, vec2 targetPos) {\n    return brushing_isPointInRange(sourcePos) || brushing_isPointInRange(targetPos);\n  }\n\n  void brushing_setVisible(bool visible) {\n    brushing_isVisible \x3d float(visible);\n  }\n",
fs:"\n  uniform bool brushing_enabled;\n  varying float brushing_isVisible;\n",inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    vec2 brushingTarget;\n    vec2 brushingSource;\n    if (brushing_target \x3d\x3d 3) {\n      brushingTarget \x3d geometry.worldPositionAlt.xy;\n      brushingSource \x3d geometry.worldPosition.xy;\n    } else if (brushing_target \x3d\x3d 0) {\n      brushingTarget \x3d geometry.worldPosition.xy;\n    } else if (brushing_target \x3d\x3d 1) {\n      brushingTarget \x3d geometry.worldPositionAlt.xy;\n    } else {\n      #ifdef NON_INSTANCED_MODEL\n      brushingTarget \x3d brushingTargets;\n      #else\n      brushingTarget \x3d instanceBrushingTargets;\n      #endif\n    }\n    bool visible;\n    if (brushing_target \x3d\x3d 3) {\n      visible \x3d brushing_arePointsInRange(brushingSource, brushingTarget);\n    } else {\n      visible \x3d brushing_isPointInRange(brushingTarget);\n    }\n    brushing_setVisible(visible);\n  ",
"fs:DECKGL_FILTER_COLOR":"\n    if (brushing_enabled \x26\x26 brushing_isVisible \x3c 0.5) {\n      discard;\n    }\n  "},getUniforms:function(opts){if(!opts||!opts.viewport)return{};var _opts$brushingEnabled=opts.brushingEnabled,_opts$brushingRadius=opts.brushingRadius;_opts$brushingRadius=void 0===_opts$brushingRadius?1E4:_opts$brushingRadius;var _opts$brushingTarget=opts.brushingTarget;_opts$brushingTarget=void 0===_opts$brushingTarget?"source":_opts$brushingTarget;var mousePosition=opts.mousePosition;
opts=opts.viewport;return{brushing_enabled:!(void 0!==_opts$brushingEnabled&&!_opts$brushingEnabled||!mousePosition||!opts.containsPixel(mousePosition)),brushing_radius:_opts$brushingRadius,brushing_target:TARGET[_opts$brushingTarget]||0,brushing_mousePos:mousePosition?opts.unproject([mousePosition.x-opts.x,mousePosition.y-opts.y]):[0,0]}}};exports["default"]=global}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$extensions$dist$es5$brushing$shader_module.js.map
