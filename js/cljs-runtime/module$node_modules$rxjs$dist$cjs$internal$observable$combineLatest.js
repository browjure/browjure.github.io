shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$combineLatest=function(global,require,module,exports){function combineLatestInit(observables,scheduler,valueTransform){void 0===valueTransform&&(valueTransform=identity_1.identity);return function(subscriber){maybeSchedule(scheduler,function(){for(var length=observables.length,values=Array(length),active=length,remainingFirstValues=length,_loop_1=function(i){maybeSchedule(scheduler,function(){var hasFirstValue=!1;from_1.from(observables[i],
scheduler).subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber,function(value){values[i]=value;hasFirstValue||(hasFirstValue=!0,remainingFirstValues--);remainingFirstValues||subscriber.next(valueTransform(values.slice()))},void 0,function(){--active||subscriber.complete()}))},subscriber)},i$jscomp$0=0;i$jscomp$0<length;i$jscomp$0++)_loop_1(i$jscomp$0)},subscriber)}}function maybeSchedule(scheduler,execute,subscription){scheduler?subscription.add(scheduler.schedule(execute)):execute()}
Object.defineProperty(exports,"__esModule",{value:!0});exports.combineLatestInit=exports.combineLatest=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),argsArgArrayOrObject_1=require("module$node_modules$rxjs$dist$cjs$internal$util$argsArgArrayOrObject"),from_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$from"),identity_1=require("module$node_modules$rxjs$dist$cjs$internal$util$identity"),mapOneOrManyArgs_1=require("module$node_modules$rxjs$dist$cjs$internal$util$mapOneOrManyArgs"),
args_1=require("module$node_modules$rxjs$dist$cjs$internal$util$args"),createObject_1=require("module$node_modules$rxjs$dist$cjs$internal$util$createObject"),OperatorSubscriber_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$OperatorSubscriber");exports.combineLatest=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=args_1.popScheduler(args);_i=args_1.popResultSelector(args);args=argsArgArrayOrObject_1.argsArgArrayOrObject(args);var observables=
args.args,keys=args.keys;if(0===observables.length)return from_1.from([],scheduler);scheduler=new Observable_1.Observable(combineLatestInit(observables,scheduler,keys?function(values){return createObject_1.createObject(keys,values)}:identity_1.identity));return _i?scheduler.pipe(mapOneOrManyArgs_1.mapOneOrManyArgs(_i)):scheduler};exports.combineLatestInit=combineLatestInit}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$combineLatest.js.map
