shadow$provide.module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$mvt_layer$clip_extension=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),
_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),defaultProps={clipBounds:[0,0,1,1]},shaderModuleVs={name:"clip-vs",vs:"\nuniform vec4 clip_bounds;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x \x3e\x3d clip_bounds[0] \x26\x26 position.y \x3e\x3d clip_bounds[1] \x26\x26 position.x \x3c clip_bounds[2] \x26\x26 position.y \x3c clip_bounds[3];\n}\n"},
injectionVs={"vs:#decl":"\nvarying float clip_isVisible;\n","vs:DECKGL_FILTER_GL_POSITION":"\n  clip_isVisible \x3d float(clip_isInBounds(geometry.worldPosition.xy));\n","fs:#decl":"\nvarying float clip_isVisible;\n","fs:DECKGL_FILTER_COLOR":"\n  if (clip_isVisible \x3c 0.5) discard;\n"},shaderModuleFs={name:"clip-fs",fs:"\nuniform vec4 clip_bounds;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x \x3e\x3d clip_bounds[0] \x26\x26 position.y \x3e\x3d clip_bounds[1] \x26\x26 position.x \x3c clip_bounds[2] \x26\x26 position.y \x3c clip_bounds[3];\n}\n"},
injectionFs={"vs:#decl":"\nvarying vec2 clip_commonPosition;\n","vs:DECKGL_FILTER_GL_POSITION":"\n  clip_commonPosition \x3d geometry.position.xy;\n","fs:#decl":"\nvarying vec2 clip_commonPosition;\n","fs:DECKGL_FILTER_COLOR":"\n  if (!clip_isInBounds(clip_commonPosition)) discard;\n"};require=function(_LayerExtension){function ClipExtension(){(0,_classCallCheck2["default"])(this,ClipExtension);return _super.apply(this,arguments)}(0,_inherits2["default"])(ClipExtension,_LayerExtension);var _super=
_createSuper(ClipExtension);(0,_createClass2["default"])(ClipExtension,[{key:"getShaders",value:function(){var clipByInstance="instancePositions"in this.getAttributeManager().attributes;"clipByInstance"in this.props&&(clipByInstance=this.props.clipByInstance);return(this.state.clipByInstance=clipByInstance)?{modules:[shaderModuleVs],inject:injectionVs}:{modules:[shaderModuleFs],inject:injectionFs}}},{key:"draw",value:function(_ref){_ref=_ref.uniforms;var _this$props$clipBound=this.props.clipBounds,
clipBounds=void 0===_this$props$clipBound?defaultProps.clipBounds:_this$props$clipBound;this.state.clipByInstance?_ref.clip_bounds=clipBounds:(_this$props$clipBound=this.projectPosition([clipBounds[0],clipBounds[1],0]),clipBounds=this.projectPosition([clipBounds[2],clipBounds[3],0]),_ref.clip_bounds=[Math.min(_this$props$clipBound[0],clipBounds[0]),Math.min(_this$props$clipBound[1],clipBounds[1]),Math.max(_this$props$clipBound[0],clipBounds[0]),Math.max(_this$props$clipBound[1],clipBounds[1])])}}]);
return ClipExtension}(require("module$node_modules$$deck_DOT_gl$core$dist$es5$index").LayerExtension);exports["default"]=require;require.extensionName="ClipExtension";require.defaultProps=defaultProps}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$mvt_layer$clip_extension.js.map
