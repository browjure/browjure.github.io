shadow$provide.module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$simple_mesh_layer$simple_mesh_layer=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}function validateGeometryAttributes(attributes,useMeshColors){(attributes.COLOR_0||attributes.colors)&&useMeshColors||(attributes.colors={constant:!0,value:new Float32Array([1,1,1])});_core.log.assert(attributes.positions||attributes.POSITION,
'SimpleMeshLayer requires "postions" or "POSITION" attribute in mesh property.')}function getGeometry(data,useMeshColors){if(data.attributes)return validateGeometryAttributes(data.attributes,useMeshColors),data instanceof _core2.Geometry?data:new _core2.Geometry(data);if(data.positions||data.POSITION)return validateGeometryAttributes(data,useMeshColors),new _core2.Geometry({attributes:data});throw Error("Invalid mesh");}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_get2=global(require("module$node_modules$$babel$runtime$helpers$get")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),
_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),_core2=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_webgl=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$index"),_matrix=require("module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$utils$matrix"),_simpleMeshLayerVertex=global(require("module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$simple_mesh_layer$simple_mesh_layer_vertex_glsl")),
_simpleMeshLayerFragment=global(require("module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$simple_mesh_layer$simple_mesh_layer_fragment_glsl"));require=function(_Layer){function SimpleMeshLayer(){(0,_classCallCheck2["default"])(this,SimpleMeshLayer);return _super.apply(this,arguments)}(0,_inherits2["default"])(SimpleMeshLayer,_Layer);var _super=_createSuper(SimpleMeshLayer);(0,_createClass2["default"])(SimpleMeshLayer,[{key:"getShaders",value:function(){var transpileToGLSL100=!(0,_core2.isWebGL2)(this.context.gl),
defines={};(0,_webgl.hasFeature)(this.context.gl,_webgl.FEATURES.GLSL_DERIVATIVES)&&(defines.DERIVATIVES_AVAILABLE=1);return(0,_get2["default"])((0,_getPrototypeOf2["default"])(SimpleMeshLayer.prototype),"getShaders",this).call(this,{vs:_simpleMeshLayerVertex["default"],fs:_simpleMeshLayerFragment["default"],modules:[_core.project32,_core.phongLighting,_core.picking],transpileToGLSL100,defines})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{transition:!0,
type:5130,fp64:this.use64bitPositions(),size:3,accessor:"getPosition"},instanceColors:{type:5121,transition:!0,size:this.props.colorFormat.length,normalized:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceModelMatrix:_matrix.MATRIX_ATTRIBUTES});this.setState({emptyTexture:new _core2.Texture2D(this.context.gl,{data:new Uint8Array(4),width:1,height:1})})}},{key:"updateState",value:function(_ref){var props=_ref.props,oldProps=_ref.oldProps;_ref=_ref.changeFlags;(0,_get2["default"])((0,_getPrototypeOf2["default"])(SimpleMeshLayer.prototype),
"updateState",this).call(this,{props,oldProps,changeFlags:_ref});if(props.mesh!==oldProps.mesh||_ref.extensionsChanged){if(this.state.model)this.state.model["delete"]();props.mesh&&(this.setState({model:this.getModel(props.mesh)}),_ref=props.mesh.attributes||props.mesh,this.setState({hasNormals:!(!_ref.NORMAL&&!_ref.normals)}));this.getAttributeManager().invalidateAll()}props.texture!==oldProps.texture&&this.setTexture(props.texture);this.state.model&&this.state.model.setDrawMode(this.props.wireframe?
3:4)}},{key:"finalizeState",value:function(){(0,_get2["default"])((0,_getPrototypeOf2["default"])(SimpleMeshLayer.prototype),"finalizeState",this).call(this);this.state.emptyTexture["delete"]()}},{key:"draw",value:function(_ref2){if(this.state.model){var viewport=this.context.viewport,_this$props=this.props,coordinateSystem=_this$props.coordinateSystem;this.state.model.draw({uniforms:Object.assign({},_ref2.uniforms,{sizeScale:_this$props.sizeScale,composeModelMatrix:!_this$props._instanced||(0,_matrix.shouldComposeModelMatrix)(viewport,
coordinateSystem),flatShading:!this.state.hasNormals})})}}},{key:"getModel",value:function(mesh){mesh=new _core2.Model(this.context.gl,Object.assign({},this.getShaders(),{id:this.props.id,geometry:getGeometry(mesh,this.props._useMeshColors),isInstanced:!0}));var texture=this.props.texture,emptyTexture=this.state.emptyTexture;mesh.setUniforms({sampler:texture||emptyTexture,hasTexture:!!texture});return mesh}},{key:"setTexture",value:function(texture){var _this$state=this.state,emptyTexture=_this$state.emptyTexture;
(_this$state=_this$state.model)&&_this$state.setUniforms({sampler:texture||emptyTexture,hasTexture:!!texture})}}]);return SimpleMeshLayer}(_core.Layer);exports["default"]=require;require.layerName="SimpleMeshLayer";require.defaultProps={mesh:{value:null,type:"object",async:!0},texture:{type:"image",value:null,async:!0},sizeScale:{type:"number",value:1,min:0},_useMeshColors:{type:"boolean",value:!1},_instanced:!0,wireframe:!1,material:!0,getPosition:{type:"accessor",value:function(x){return x.position}},
getColor:{type:"accessor",value:[0,0,0,255]},getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]}}}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$simple_mesh_layer$simple_mesh_layer.js.map
