{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$terrain$dist$es5$lib$parse_terrain.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/terrain/dist/es5/lib/parse-terrain.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$terrain$dist$es5$lib$parse_terrain\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = loadTerrain;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _martini = _interopRequireDefault(require(\"@mapbox/martini\"));\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nfunction getTerrain(imageData, tileSize, elevationDecoder) {\n  var rScaler = elevationDecoder.rScaler,\n      bScaler = elevationDecoder.bScaler,\n      gScaler = elevationDecoder.gScaler,\n      offset = elevationDecoder.offset;\n  var gridSize = tileSize + 1;\n  var terrain = new Float32Array(gridSize * gridSize);\n\n  for (var i = 0, y = 0; y < tileSize; y++) {\n    for (var x = 0; x < tileSize; x++, i++) {\n      var k = i * 4;\n      var r = imageData[k + 0];\n      var g = imageData[k + 1];\n      var b = imageData[k + 2];\n      terrain[i + y] = r * rScaler + g * gScaler + b * bScaler + offset;\n    }\n  }\n\n  for (var _i = gridSize * (gridSize - 1), _x = 0; _x < gridSize - 1; _x++, _i++) {\n    terrain[_i] = terrain[_i - gridSize];\n  }\n\n  for (var _i2 = gridSize - 1, _y = 0; _y < gridSize; _y++, _i2 += gridSize) {\n    terrain[_i2] = terrain[_i2 - 1];\n  }\n\n  return terrain;\n}\n\nfunction getMeshAttributes(vertices, terrain, tileSize, bounds) {\n  var gridSize = tileSize + 1;\n  var numOfVerticies = vertices.length / 2;\n  var positions = new Float32Array(numOfVerticies * 3);\n  var texCoords = new Float32Array(numOfVerticies * 2);\n\n  var _ref = bounds || [0, 0, tileSize, tileSize],\n      _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 4),\n      minX = _ref2[0],\n      minY = _ref2[1],\n      maxX = _ref2[2],\n      maxY = _ref2[3];\n\n  var xScale = (maxX - minX) / tileSize;\n  var yScale = (maxY - minY) / tileSize;\n\n  for (var i = 0; i < numOfVerticies; i++) {\n    var x = vertices[i * 2];\n    var y = vertices[i * 2 + 1];\n    var pixelIdx = y * gridSize + x;\n    positions[3 * i + 0] = x * xScale + minX;\n    positions[3 * i + 1] = -y * yScale + maxY;\n    positions[3 * i + 2] = terrain[pixelIdx];\n    texCoords[2 * i + 0] = x / tileSize;\n    texCoords[2 * i + 1] = y / tileSize;\n  }\n\n  return {\n    POSITION: {\n      value: positions,\n      size: 3\n    },\n    TEXCOORD_0: {\n      value: texCoords,\n      size: 2\n    }\n  };\n}\n\nfunction getMartiniTileMesh(terrainImage, terrainOptions) {\n  if (terrainImage === null) {\n    return null;\n  }\n\n  var meshMaxError = terrainOptions.meshMaxError,\n      bounds = terrainOptions.bounds,\n      elevationDecoder = terrainOptions.elevationDecoder;\n  var data = terrainImage.data;\n  var tileSize = terrainImage.width;\n  var gridSize = tileSize + 1;\n  var terrain = getTerrain(data, tileSize, elevationDecoder);\n  var martini = new _martini[\"default\"](gridSize);\n  var tile = martini.createTile(terrain);\n\n  var _tile$getMesh = tile.getMesh(meshMaxError),\n      vertices = _tile$getMesh.vertices,\n      triangles = _tile$getMesh.triangles;\n\n  var attributes = getMeshAttributes(vertices, terrain, tileSize, bounds);\n  return {\n    loaderData: {\n      header: {}\n    },\n    header: {\n      vertexCount: triangles.length,\n      boundingBox: (0, _loaderUtils.getMeshBoundingBox)(attributes)\n    },\n    mode: 4,\n    indices: {\n      value: triangles,\n      size: 1\n    },\n    attributes: attributes\n  };\n}\n\nfunction loadTerrain(_x2, _x3, _x4) {\n  return _loadTerrain.apply(this, arguments);\n}\n\nfunction _loadTerrain() {\n  _loadTerrain = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(arrayBuffer, options, context) {\n    var image;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options.image = options.image || {};\n            options.image.type = 'data';\n            _context.next = 4;\n            return context.parse(arrayBuffer, options, options.baseUri);\n\n          case 4:\n            image = _context.sent;\n            return _context.abrupt(\"return\", getMartiniTileMesh(image, options.terrain));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadTerrain.apply(this, arguments);\n}\n//# sourceMappingURL=parse-terrain.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getMartiniTileMesh","terrainImage","terrainOptions","meshMaxError","bounds","elevationDecoder","tileSize","width","gridSize","data","rScaler","bScaler","gScaler","offset","terrain","Float32Array","i","y","x","k","imageData","r","g","b","_i","_x","_i2","_y","_tile$getMesh","tile","martini","_martini","createTile","getMesh","triangles","vertices","numOfVerticies","length","positions","texCoords","_ref","_ref2","_slicedToArray2","minX","maxY","xScale","maxX","yScale","minY","pixelIdx","POSITION","value","size","TEXCOORD_0","loaderData","header","vertexCount","boundingBox","_loaderUtils","getMeshBoundingBox","attributes","mode","indices","_loadTerrain","_asyncToGenerator2","_regenerator","mark","_callee","arrayBuffer","options","context","image","wrap","_callee$","_context","prev","next","type","parse","baseUri","sent","abrupt","stop","apply","arguments","_interopRequireDefault","Object","defineProperty","loadTerrain","_x2","_x3","_x4"]
}
