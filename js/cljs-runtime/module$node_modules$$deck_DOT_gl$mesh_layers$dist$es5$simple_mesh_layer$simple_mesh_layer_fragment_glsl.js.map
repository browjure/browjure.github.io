{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$simple_mesh_layer$simple_mesh_layer_fragment_glsl.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,uGAAf,CAA4H,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpKC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1BA,QAAA,CAAQ,SAAR,CAAA,CADeI,67BAPqJ;",
"sources":["node_modules/@deck_DOT_gl/mesh-layers/dist/es5/simple-mesh-layer/simple-mesh-layer-fragment.glsl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$mesh_layers$dist$es5$simple_mesh_layer$simple_mesh_layer_fragment_glsl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = \"#version 300 es\\n#define SHADER_NAME simple-mesh-layer-fs\\n\\nprecision highp float;\\n\\nuniform bool hasTexture;\\nuniform sampler2D sampler;\\nuniform bool flatShading;\\nuniform float opacity;\\n\\nin vec2 vTexCoord;\\nin vec3 cameraPosition;\\nin vec3 normals_commonspace;\\nin vec4 position_commonspace;\\nin vec4 vColor;\\n\\nout vec4 fragColor;\\n\\nvoid main(void) {\\n  geometry.uv = vTexCoord;\\n\\n  vec3 normal;\\n  if (flatShading) {\\n#ifdef DERIVATIVES_AVAILABLE\\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\\n#else\\n    normal = vec3(0.0, 0.0, 1.0);\\n#endif\\n  } else {\\n    normal = normals_commonspace;\\n  }\\n\\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\\n  fragColor = vec4(lightColor, color.a * opacity);\\n\\n  DECKGL_FILTER_COLOR(fragColor, geometry);\\n}\\n\";\nexports[\"default\"] = _default;\n//# sourceMappingURL=simple-mesh-layer-fragment.glsl.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_default"]
}
