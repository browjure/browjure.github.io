shadow$provide.module$node_modules$$math_DOT_gl$core$dist$es5$classes$base$math_array=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),
_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf"));module=global(require("module$node_modules$$babel$runtime$helpers$wrapNativeSuper"));var _common=require("module$node_modules$$math_DOT_gl$core$dist$es5$lib$common"),
_assert=global(require("module$node_modules$$math_DOT_gl$core$dist$es5$lib$assert"));require=function(_Array){function MathArray(){(0,_classCallCheck2["default"])(this,MathArray);return _super.apply(this,arguments)}(0,_inherits2["default"])(MathArray,_Array);var _super=_createSuper(MathArray);(0,_createClass2["default"])(MathArray,[{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"from",value:function(arrayOrObject){return Array.isArray(arrayOrObject)?this.copy(arrayOrObject):
this.fromObject(arrayOrObject)}},{key:"fromArray",value:function(array){for(var offset=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,i=0;i<this.ELEMENTS;++i)this[i]=array[i+offset];return this.check()}},{key:"to",value:function(arrayOrObject){return arrayOrObject===this?this:(0,_common.isArray)(arrayOrObject)?this.toArray(arrayOrObject):this.toObject(arrayOrObject)}},{key:"toTarget",value:function(target){return target?this.to(target):this}},{key:"toArray",value:function(){for(var array=
0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],offset=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,i=0;i<this.ELEMENTS;++i)array[offset+i]=this[i];return array}},{key:"toFloat32Array",value:function(){return new Float32Array(this)}},{key:"toString",value:function(){return this.formatString(_common.config)}},{key:"formatString",value:function(opts){for(var string="",i=0;i<this.ELEMENTS;++i)string+=(0<i?", ":"")+(0,_common.formatValue)(this[i],opts);return"".concat(opts.printTypes?
this.constructor.name:"","[").concat(string,"]")}},{key:"equals",value:function(array){if(!array||this.length!==array.length)return!1;for(var i=0;i<this.ELEMENTS;++i)if(!(0,_common.equals)(this[i],array[i]))return!1;return!0}},{key:"exactEquals",value:function(array){if(!array||this.length!==array.length)return!1;for(var i=0;i<this.ELEMENTS;++i)if(this[i]!==array[i])return!1;return!0}},{key:"negate",value:function(){for(var i=0;i<this.ELEMENTS;++i)this[i]=-this[i];return this.check()}},{key:"lerp",
value:function(a,b,t){void 0===t&&(t=b,b=a,a=this);for(var i=0;i<this.ELEMENTS;++i){var ai=a[i];this[i]=ai+t*(b[i]-ai)}return this.check()}},{key:"min",value:function(vector){for(var i=0;i<this.ELEMENTS;++i)this[i]=Math.min(vector[i],this[i]);return this.check()}},{key:"max",value:function(vector){for(var i=0;i<this.ELEMENTS;++i)this[i]=Math.max(vector[i],this[i]);return this.check()}},{key:"clamp",value:function(minVector,maxVector){for(var i=0;i<this.ELEMENTS;++i)this[i]=Math.min(Math.max(this[i],
minVector[i]),maxVector[i]);return this.check()}},{key:"add",value:function(){for(var _len=arguments.length,vectors=Array(_len),_key=0;_key<_len;_key++)vectors[_key]=arguments[_key];for(_len=0;_len<vectors.length;_len++){_key=vectors[_len];for(var i=0;i<this.ELEMENTS;++i)this[i]+=_key[i]}return this.check()}},{key:"subtract",value:function(){for(var _len2=arguments.length,vectors=Array(_len2),_key2=0;_key2<_len2;_key2++)vectors[_key2]=arguments[_key2];for(_len2=0;_len2<vectors.length;_len2++){_key2=
vectors[_len2];for(var i=0;i<this.ELEMENTS;++i)this[i]-=_key2[i]}return this.check()}},{key:"scale",value:function(_scale){if(Array.isArray(_scale))return this.multiply(_scale);for(var i=0;i<this.ELEMENTS;++i)this[i]*=_scale;return this.check()}},{key:"sub",value:function(a){return this.subtract(a)}},{key:"setScalar",value:function(a){for(var i=0;i<this.ELEMENTS;++i)this[i]=a;return this.check()}},{key:"addScalar",value:function(a){for(var i=0;i<this.ELEMENTS;++i)this[i]+=a;return this.check()}},
{key:"subScalar",value:function(a){return this.addScalar(-a)}},{key:"multiplyScalar",value:function(scalar){for(var i=0;i<this.ELEMENTS;++i)this[i]*=scalar;return this.check()}},{key:"divideScalar",value:function(a){return this.scale(1/a)}},{key:"clampScalar",value:function(min,max){for(var i=0;i<this.ELEMENTS;++i)this[i]=Math.min(Math.max(this[i],min),max);return this.check()}},{key:"multiplyByScalar",value:function(scalar){return this.scale(scalar)}},{key:"check",value:function(){if(_common.config.debug&&
!this.validate())throw Error("math.gl: ".concat(this.constructor.name," some fields set to invalid numbers'"));return this}},{key:"validate",value:function(){for(var valid=this.length===this.ELEMENTS,i=0;i<this.ELEMENTS;++i)valid=valid&&Number.isFinite(this[i]);return valid}},{key:"ELEMENTS",get:function(){(0,_assert["default"])(!1);return 0}},{key:"RANK",get:function(){(0,_assert["default"])(!1);return 0}},{key:"elements",get:function(){return this}}]);return MathArray}((0,module["default"])(Array));
exports["default"]=require}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$core$dist$es5$classes$base$math_array.js.map
