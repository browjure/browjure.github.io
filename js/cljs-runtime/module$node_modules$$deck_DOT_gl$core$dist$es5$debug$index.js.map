{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$core$dist$es5$debug$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnHC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BI,OAAA,CAAOC,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAA,CAAQK,QAAR,CAaAA,QAAiB,CAACC,QAAD,CAAW,CAC1BC,OAAA,CAAUD,QADgB,CAZ5BN,QAAA,CAAQ,SAAR,CAAA,CAgBAQ,QAAc,CAACC,SAAD,CAAY,CACxB,GAA4B,CAA5B,CAAIC,IAAA,CAAK,SAAL,CAAJ,CAAoBC,KAApB,EAAiCJ,OAAA,CAAQE,SAAR,CAAjC,CAAqD,CACnD,IAAIG,kBAEJ,EAACA,kBAAD,CAAsBL,OAAA,CAAQE,SAAR,CAAtB,EAA0CI,IAA1C,CAA+CC,KAA/C,CAAqDF,kBAArD,CAAyEG,SAAzE,CAHmD,CAD7B,CAd1B,KAAIL;AAAOT,MAAA,CAAuBH,OAAA,CAAQ,0DAAR,CAAvB,CAEPkB,QAAAA,CAAWlB,OAAA,CAAQ,8DAAR,CAEf,KAAIS,QAAU,EAGZA,QAAA,CAAU,CAAC,CAAA,CAAGS,OAAH,CAAYC,UAAb,EAAyBP,IAAA,CAAK,SAAL,CAAzB,CAlB2G;",
"sources":["node_modules/@deck_DOT_gl/core/dist/es5/debug/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$core$dist$es5$debug$index\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.register = register;\nexports[\"default\"] = debug;\n\nvar _log = _interopRequireDefault(require(\"../utils/log\"));\n\nvar _loggers = require(\"./loggers\");\n\nvar loggers = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  loggers = (0, _loggers.getLoggers)(_log[\"default\"]);\n}\n\nfunction register(handlers) {\n  loggers = handlers;\n}\n\nfunction debug(eventType) {\n  if (_log[\"default\"].level > 0 && loggers[eventType]) {\n    var _loggers$eventType;\n\n    (_loggers$eventType = loggers[eventType]).call.apply(_loggers$eventType, arguments);\n  }\n}\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","register","handlers","loggers","debug","eventType","_log","level","_loggers$eventType","call","apply","arguments","_loggers","getLoggers"]
}
