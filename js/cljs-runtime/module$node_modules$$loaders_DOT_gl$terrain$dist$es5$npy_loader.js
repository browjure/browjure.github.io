shadow$provide.module$node_modules$$loaders_DOT_gl$terrain$dist$es5$npy_loader=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.NPYLoader=exports.NPYWorkerLoader=void 0;var _regenerator=global(require("module$node_modules$$babel$runtime$regenerator$index")),_asyncToGenerator2=global(require("module$node_modules$$babel$runtime$helpers$asyncToGenerator")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_parseNpy=require("module$node_modules$$loaders_DOT_gl$terrain$dist$es5$lib$parse_npy");require={id:"npy",name:"NPY",version:"2.3.13",extensions:["npy"],
mimeTypes:[],tests:[(new Uint8Array([147,78,85,77,80,89])).buffer],options:{npy:{workerUrl:"https://unpkg.com/@loaders.gl/terrain@".concat("2.3.13","/dist/npy-loader.worker.js")}}};exports.NPYWorkerLoader=require;require=_objectSpread(_objectSpread({},require),{},{parseSync:_parseNpy.parseNPY,parse:function(){var _parse=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(arrayBuffer,options){return _regenerator["default"].wrap(function(_context){for(;;)switch(_context.prev=
_context.next){case 0:return _context.abrupt("return",(0,_parseNpy.parseNPY)(arrayBuffer,options));case 1:case "end":return _context.stop()}},_callee)}));return function(_x,_x2){return _parse.apply(this,arguments)}}()});exports.NPYLoader=require}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$terrain$dist$es5$npy_loader.js.map
