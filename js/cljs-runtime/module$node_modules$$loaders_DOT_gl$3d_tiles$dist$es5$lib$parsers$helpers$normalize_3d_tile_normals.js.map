{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$normalize_3d_tile_normals.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,mGAAf,CAAwH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhKC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,8BAAR,CAQAA,QAAuC,CAACC,IAAD,CAAOC,OAAP,CAAgB,CACrD,GAAI,CAACA,OAAL,CACE,MAAO,KAGT,IAAID,IAAJ,CAASE,eAAT,CAA0B,CAGxB,IAFA,IAAIC,aAAe,IAAIC,YAAJ,CAAqC,CAArC,CAAiBJ,IAAjB,CAAsBK,YAAtB,CAAnB,CAESC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBN,IAApB,CAAyBK,YAAzB,CAAuCC,CAAA,EAAvC,CACE,CAAC,CAAA,CAAGC,KAAH,CAASC,SAAV,EAAqBP,OAAA,CAAY,CAAZ,CAAQK,CAAR,CAArB,CAAqCL,OAAA,CAAY,CAAZ,CAAQK,CAAR,CAAgB,CAAhB,CAArC,CAAyDG,aAAzD,CACA,CAAAA,aAAA,CAAcC,OAAd,CAAsBP,YAAtB;AAAwC,CAAxC,CAAoCG,CAApC,CAGF,OAAO,CACLK,KAAMJ,KAANI,CAAYC,EAAZD,CAAeE,KADV,CAELC,KAAM,CAFD,CAGLhB,MAAOK,YAHF,CARiB,CAe1B,MAAO,CACLQ,KAAMJ,KAANI,CAAYC,EAAZD,CAAeE,KADV,CAELC,KAAM,CAFD,CAGLhB,MAAOG,OAHF,CApB8C,CANnDc,OAAAA,CAAQtB,OAAA,CAAQ,sDAAR,CAEZ,KAAIc,MAAQd,OAAA,CAAQ,yDAAR,CAAZ,CAEIgB,cAAgB,IAAIM,MAAJ,CAAUC,OAZkI;",
"sources":["node_modules/@loaders_DOT_gl/3d-tiles/dist/es5/lib/parsers/helpers/normalize-3d-tile-normals.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$normalize_3d_tile_normals\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalize3DTileNormalAttribute = normalize3DTileNormalAttribute;\n\nvar _core = require(\"@math.gl/core\");\n\nvar _math = require(\"@loaders.gl/math\");\n\nvar scratchNormal = new _core.Vector3();\n\nfunction normalize3DTileNormalAttribute(tile, normals) {\n  if (!normals) {\n    return null;\n  }\n\n  if (tile.isOctEncoded16P) {\n    var decodedArray = new Float32Array(tile.pointsLength * 3);\n\n    for (var i = 0; i < tile.pointsLength; i++) {\n      (0, _math.octDecode)(normals[i * 2], normals[i * 2 + 1], scratchNormal);\n      scratchNormal.toArray(decodedArray, i * 3);\n    }\n\n    return {\n      type: _math.GL.FLOAT,\n      size: 2,\n      value: decodedArray\n    };\n  }\n\n  return {\n    type: _math.GL.FLOAT,\n    size: 2,\n    value: normals\n  };\n}\n//# sourceMappingURL=normalize-3d-tile-normals.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","normalize3DTileNormalAttribute","tile","normals","isOctEncoded16P","decodedArray","Float32Array","pointsLength","i","_math","octDecode","scratchNormal","toArray","type","GL","FLOAT","size","_core","Vector3"]
}
