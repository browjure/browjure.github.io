{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_tables.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,8FAAf,CAAmH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3JC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,2BAAR,CAOAA,QAAoC,CAACC,IAAD,CAAOC,WAAP,CAAoBC,UAApB,CAAgC,CAC9DC,WAAAA,CAAO,IAAIC,QAAJ,CAAaH,WAAb,CACXD,KAAA,CAAKK,MAAL,CAAcL,IAAd,CAAmBK,MAAnB,EAA6B,EAC7BL,KAAA,CAAKK,MAAL,CAAYC,0BAAZ,CAAyCH,WAAA,CAAKI,SAAL,CAAeL,UAAf,CAA2B,CAAA,CAA3B,CACzCA,WAAA,EAAcM,aACdR,KAAA,CAAKK,MAAL,CAAYI,4BAAZ,CAA2CN,WAAA,CAAKI,SAAL,CAAeL,UAAf;AAA2B,CAAA,CAA3B,CAC3CA,WAAA,EAAcM,aACdR,KAAA,CAAKK,MAAL,CAAYK,wBAAZ,CAAuCP,WAAA,CAAKI,SAAL,CAAeL,UAAf,CAA2B,CAAA,CAA3B,CACvCA,WAAA,EAAcM,aACdR,KAAA,CAAKK,MAAL,CAAYM,0BAAZ,CAAyCR,WAAA,CAAKI,SAAL,CAAeL,UAAf,CAA2B,CAAA,CAA3B,CAEzC,OADAA,WACA,EADcM,aAVoD,CANpEb,QAAA,CAAQiB,qBAAR,CAoBAA,QAA8B,CAACZ,IAAD,CAAOC,WAAP,CAAoBC,UAApB,CAAgCW,OAAhC,CAAyC,CAME,IACnEC,aANiCd,IAMjCc,CAAoBT,MACpBC,QAAAA,CAA6BQ,YAA7BR,CAA0CA,0BAC1CG,aAAAA,CAA+BK,YAA/BL,CAA4CA,4BARXT,KASrC,CAAKe,gBAAL,CAAwB,CACtBC,aAAc,CADQ,CAIxB,IAAiC,CAAjC,CAAIV,OAAJ,CAAoC,CAClC,IAAIW;AAAqB,CAAC,CAAA,CAAGC,WAAH,CAAeC,wBAAhB,EAdgBlB,WAchB,CAAuDC,UAAvD,CAAmEI,OAAnE,CAdUN,KAenC,CAAKe,gBAAL,CAAwBK,IAAA,CAAKC,KAAL,CAAWJ,kBAAX,CAFU,CAKpCf,UAAA,EAAcI,OAlBuBN,KAmBrC,CAAKsB,kBAAL,CAA0B,IAAIC,UAAJ,CAnBiBtB,WAmBjB,CAA4BC,UAA5B,CAAwCO,YAAxC,CAC1BP,WAnBsDA,EAmBxCO,YAKVe,aAAAA,CAxB+BxB,IAwB/BwB,CAAqBnB,MACrBK,QAAAA,CAA2Bc,YAA3Bd,CAAyCA,wBACzCC,aAAAA,CAA6Ba,YAA7Bb,CAA2CA,0BAEhB,EAA/B,CAAID,OAAJ,GACMe,kBAIJ,CAJuB,CAAC,CAAA,CAAGP,WAAH,CAAeC,wBAAhB,EA7BgBlB,WA6BhB,CAAuDC,UAAvD,CAAmEQ,OAAnE,CAIvB,CAjCiCV,IAiCjC,CAHK0B,cAGL,CAHsBN,IAAA,CAAKC,KAAL,CAAWI,kBAAX,CAGtB;AAFAvB,UAEA,EAFcQ,OAEd,CAAiC,CAAjC,CAAIC,YAAJ,GAjCiCX,IAoC/B,CAFK2B,gBAEL,CAFwB,IAAIJ,UAAJ,CAlCatB,WAkCb,CAA4BC,UAA5B,CAAwCS,YAAxC,CAExB,CApC+BX,IAoC/B,CADK2B,gBACL,CADwB,IAAIJ,UAAJ,CAnCOvB,IAmCP,CAAoB2B,gBAApB,CACxB,CAAAzB,UAAA,EAAcS,YAHhB,CALF,CA3BA,OAuCOT,WA1C8D,CAlBvE,KAAIgB,YAAczB,OAAA,CAAQ,uFAAR,CAAlB,CAEIe,cAAgB,CAXuI;",
"sources":["node_modules/@loaders_DOT_gl/3d-tiles/dist/es5/lib/parsers/helpers/parse-3d-tile-tables.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_tables\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse3DTileTablesHeaderSync = parse3DTileTablesHeaderSync;\nexports.parse3DTileTablesSync = parse3DTileTablesSync;\n\nvar _parseUtils = require(\"./parse-utils\");\n\nvar SIZEOF_UINT32 = 4;\n\nfunction parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset) {\n  var view = new DataView(arrayBuffer);\n  tile.header = tile.header || {};\n  tile.header.featureTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.header.featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.header.batchTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.header.batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  return byteOffset;\n}\n\nfunction parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options) {\n  byteOffset = parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options);\n  byteOffset = parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options);\n  return byteOffset;\n}\n\nfunction parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options) {\n  var _tile$header = tile.header,\n      featureTableJsonByteLength = _tile$header.featureTableJsonByteLength,\n      featureTableBinaryByteLength = _tile$header.featureTableBinaryByteLength;\n  tile.featureTableJson = {\n    BATCH_LENGTH: 0\n  };\n\n  if (featureTableJsonByteLength > 0) {\n    var featureTableString = (0, _parseUtils.getStringFromArrayBuffer)(arrayBuffer, byteOffset, featureTableJsonByteLength);\n    tile.featureTableJson = JSON.parse(featureTableString);\n  }\n\n  byteOffset += featureTableJsonByteLength;\n  tile.featureTableBinary = new Uint8Array(arrayBuffer, byteOffset, featureTableBinaryByteLength);\n  byteOffset += featureTableBinaryByteLength;\n  return byteOffset;\n}\n\nfunction parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options) {\n  var _tile$header2 = tile.header,\n      batchTableJsonByteLength = _tile$header2.batchTableJsonByteLength,\n      batchTableBinaryByteLength = _tile$header2.batchTableBinaryByteLength;\n\n  if (batchTableJsonByteLength > 0) {\n    var batchTableString = (0, _parseUtils.getStringFromArrayBuffer)(arrayBuffer, byteOffset, batchTableJsonByteLength);\n    tile.batchTableJson = JSON.parse(batchTableString);\n    byteOffset += batchTableJsonByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      tile.batchTableBinary = new Uint8Array(arrayBuffer, byteOffset, batchTableBinaryByteLength);\n      tile.batchTableBinary = new Uint8Array(tile.batchTableBinary);\n      byteOffset += batchTableBinaryByteLength;\n    }\n  }\n\n  return byteOffset;\n}\n//# sourceMappingURL=parse-3d-tile-tables.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","parse3DTileTablesHeaderSync","tile","arrayBuffer","byteOffset","view","DataView","header","featureTableJsonByteLength","getUint32","SIZEOF_UINT32","featureTableBinaryByteLength","batchTableJsonByteLength","batchTableBinaryByteLength","parse3DTileTablesSync","options","_tile$header","featureTableJson","BATCH_LENGTH","featureTableString","_parseUtils","getStringFromArrayBuffer","JSON","parse","featureTableBinary","Uint8Array","_tile$header2","batchTableString","batchTableJson","batchTableBinary"]
}
