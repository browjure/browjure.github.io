shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project$project_functions=function(global,require,module,exports){function lngLatZToWorldPosition(lngLatZ,viewport){var offsetMode=2<arguments.length&&void 0!==arguments[2]?arguments[2]:!1,p=viewport.projectPosition(lngLatZ);if(offsetMode&&viewport instanceof _webMercatorViewport["default"]){offsetMode=(0,_slicedToArray2["default"])(lngLatZ,3);var _lngLatZ$=offsetMode[2];_lngLatZ$=void 0===_lngLatZ$?0:_lngLatZ$;offsetMode=viewport.getDistanceScales([offsetMode[0],
offsetMode[1]]);p[2]=_lngLatZ$*offsetMode.unitsPerMeter[2]}return p}function getWorldPosition(position,_ref){var viewport=_ref.viewport,modelMatrix=_ref.modelMatrix,coordinateSystem=_ref.coordinateSystem,coordinateOrigin=_ref.coordinateOrigin;_ref=_ref.offsetMode;var _position=(0,_slicedToArray2["default"])(position,3);position=_position[0];var y=_position[1];_position=_position[2];_position=void 0===_position?0:_position;modelMatrix&&(modelMatrix=vec4.transformMat4([],[position,y,_position,1],modelMatrix),
modelMatrix=(0,_slicedToArray2["default"])(modelMatrix,3),position=modelMatrix[0],y=modelMatrix[1],_position=modelMatrix[2]);switch(coordinateSystem){case _constants.COORDINATE_SYSTEM.LNGLAT:return lngLatZToWorldPosition([position,y,_position],viewport,_ref);case _constants.COORDINATE_SYSTEM.LNGLAT_OFFSETS:return lngLatZToWorldPosition([position+coordinateOrigin[0],y+coordinateOrigin[1],_position+(coordinateOrigin[2]||0)],viewport,_ref);case _constants.COORDINATE_SYSTEM.METER_OFFSETS:return lngLatZToWorldPosition((0,
_webMercator.addMetersToLngLat)(coordinateOrigin,[position,y,_position]),viewport,_ref);default:return viewport.isGeospatial?[position+coordinateOrigin[0],y+coordinateOrigin[1],_position+coordinateOrigin[2]]:viewport.projectPosition([position,y,_position])}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.getWorldPosition=
getWorldPosition;exports.projectPosition=function(position,params){var normalizedParams=Object.assign({},params),coordinateSystem=params.coordinateSystem,viewport=params.viewport,coordinateOrigin=params.coordinateOrigin,fromCoordinateSystem=params.fromCoordinateSystem;params=params.fromCoordinateOrigin;coordinateSystem===_constants.COORDINATE_SYSTEM.DEFAULT&&(coordinateSystem=viewport.isGeospatial?_constants.COORDINATE_SYSTEM.LNGLAT:_constants.COORDINATE_SYSTEM.CARTESIAN);void 0===fromCoordinateSystem&&
(normalizedParams.fromCoordinateSystem=coordinateSystem);void 0===params&&(normalizedParams.fromCoordinateOrigin=coordinateOrigin);normalizedParams.coordinateSystem=coordinateSystem;coordinateSystem=normalizedParams.viewport;fromCoordinateSystem=normalizedParams.coordinateSystem;params=normalizedParams.coordinateOrigin;viewport=normalizedParams.modelMatrix;coordinateOrigin=normalizedParams.fromCoordinateSystem;normalizedParams=normalizedParams.fromCoordinateOrigin;var _getOffsetOrigin=(0,_viewportUniforms.getOffsetOrigin)(coordinateSystem,
fromCoordinateSystem,params);fromCoordinateSystem=_getOffsetOrigin.geospatialOrigin;params=_getOffsetOrigin.shaderCoordinateOrigin;_getOffsetOrigin=_getOffsetOrigin.offsetMode;position=getWorldPosition(position,{viewport:coordinateSystem,modelMatrix:viewport,coordinateSystem:coordinateOrigin,coordinateOrigin:normalizedParams,offsetMode:_getOffsetOrigin});_getOffsetOrigin&&(normalizedParams=coordinateSystem.projectPosition(fromCoordinateSystem||params),vec3.sub(position,position,normalizedParams));
return position};var _slicedToArray2=module(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_constants=require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$constants"),_viewportUniforms=require("module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project$viewport_uniforms"),_webMercatorViewport=module(require("module$node_modules$$deck_DOT_gl$core$dist$es5$viewports$web_mercator_viewport")),vec4=global(require("module$node_modules$gl_matrix$cjs$vec4")),vec3=global(require("module$node_modules$gl_matrix$cjs$vec3")),
_webMercator=require("module$node_modules$$math_DOT_gl$web_mercator$dist$es5$index")}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project$project_functions.js.map
