shadow$provide.module$node_modules$react_map_gl$dist$es5$components$navigation_control=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function updateViewport(context,props,opts){opts=new _mapState["default"](Object.assign({},context.viewport,opts));
opts=Object.assign({},opts.getViewportProps(),_mapController.LINEAR_TRANSITION_PROPS);var onViewportChange=props.onViewportChange||context.onViewportChange||noop;(props.onViewStateChange||context.onViewStateChange||noop)({viewState:opts});onViewportChange(opts)}function renderButton(type,label,callback,children){return React.createElement("button",{key:type,className:"mapboxgl-ctrl-icon mapboxgl-ctrl-".concat(type),type:"button",title:label,onClick:callback},children||React.createElement("span",{className:"mapboxgl-ctrl-icon",
"aria-hidden":"true"}))}function renderCompass(context){var uiVersion=(0,React.useMemo)(function(){if(context.map){var JSCompiler_temp=context.map.version;JSCompiler_temp=0<=(0,_version.compareVersions)(JSCompiler_temp,"1.6.0")?2:1}else JSCompiler_temp=2;return JSCompiler_temp},[context.map]),style={transform:"rotate(".concat(-context.viewport.bearing,"deg)")};return 2===uiVersion?React.createElement("span",{className:"mapboxgl-ctrl-icon","aria-hidden":"true",style}):React.createElement("span",{className:"mapboxgl-ctrl-compass-arrow",
style})}function NavigationControl(props){var _useMapControl=(0,_useMapControl2["default"])(props),context=_useMapControl.context;_useMapControl=_useMapControl.containerRef;var onZoomIn=function(){updateViewport(context,props,{zoom:context.viewport.zoom+1})},onZoomOut=function(){updateViewport(context,props,{zoom:context.viewport.zoom-1})},onResetNorth=function(){updateViewport(context,props,{bearing:0,pitch:0})},className=props.className,showCompass=props.showCompass,showZoom=props.showZoom,zoomInLabel=
props.zoomInLabel,zoomOutLabel=props.zoomOutLabel,compassLabel=props.compassLabel,style=(0,React.useMemo)(function(){return _objectSpread({position:"absolute"},props.style)},[props.style]);return React.createElement("div",{style,className},React.createElement("div",{className:"mapboxgl-ctrl mapboxgl-ctrl-group",ref:_useMapControl},showZoom&&renderButton("zoom-in",zoomInLabel,onZoomIn),showZoom&&renderButton("zoom-out",zoomOutLabel,onZoomOut),showCompass&&renderButton("compass",compassLabel,onResetNorth,
renderCompass(context))))}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=module(require("module$node_modules$$babel$runtime$helpers$defineProperty")),React=global(require("module$node_modules$react$index")),PropTypes=global(require("module$node_modules$prop_types$index")),_mapState=
module(require("module$node_modules$react_map_gl$dist$es5$utils$map_state")),_mapController=require("module$node_modules$react_map_gl$dist$es5$utils$map_controller"),_version=require("module$node_modules$react_map_gl$dist$es5$utils$version"),_useMapControl2=global(require("module$node_modules$react_map_gl$dist$es5$components$use_map_control")),noop=function(){};require=Object.assign({},_useMapControl2.mapControlPropTypes,{className:PropTypes.string,style:PropTypes.object,onViewStateChange:PropTypes.func,
onViewportChange:PropTypes.func,showCompass:PropTypes.bool,showZoom:PropTypes.bool,zoomInLabel:PropTypes.string,zoomOutLabel:PropTypes.string,compassLabel:PropTypes.string});global=Object.assign({},_useMapControl2.mapControlDefaultProps,{className:"",showCompass:!0,showZoom:!0,zoomInLabel:"Zoom In",zoomOutLabel:"Zoom Out",compassLabel:"Reset North"});NavigationControl.propTypes=require;NavigationControl.defaultProps=global;require=React.memo(NavigationControl);exports["default"]=require}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$components$navigation_control.js.map
