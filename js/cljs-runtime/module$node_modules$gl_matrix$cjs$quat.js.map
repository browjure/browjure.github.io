{
"version":3,
"file":"module$node_modules$gl_matrix$cjs$quat.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/gl-matrix/cjs/quat.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$gl_matrix$cjs$quat\"] = function(global,require,module,exports) {\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.getAngle = getAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.exp = exp;\nexports.ln = ln;\nexports.pow = pow;\nexports.slerp = slerp;\nexports.random = random;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nvar mat3 = _interopRequireWildcard(require(\"./mat3.js\"));\n\nvar vec3 = _interopRequireWildcard(require(\"./vec3.js\"));\n\nvar vec4 = _interopRequireWildcard(require(\"./vec4.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\n\nvar clone = vec4.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nexports.clone = clone;\nvar fromValues = vec4.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.fromValues = fromValues;\nvar copy = vec4.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.copy = copy;\nvar set = vec4.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.set = set;\nvar add = vec4.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nexports.add = add;\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.mul = mul;\nvar scale = vec4.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nexports.scale = scale;\nvar dot = vec4.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.dot = dot;\nvar lerp = vec4.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexports.lerp = lerp;\nvar length = vec4.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nexports.length = length;\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nexports.len = len;\nvar squaredLength = vec4.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nexports.squaredLength = squaredLength;\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\nvar normalize = vec4.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.normalize = normalize;\nvar exactEquals = vec4.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexports.exactEquals = exactEquals;\nvar equals = vec4.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nexports.equals = equals;\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\n\nexports.rotationTo = rotationTo;\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\n\nexports.sqlerp = sqlerp;\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\nexports.setAxes = setAxes;\n};"],
"names":["shadow$provide","global","require","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","_interopRequireWildcard","__esModule","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","create","out","glMatrix","ARRAY_TYPE","Float32Array","setAxisAngle","axis","rad","s","Math","sin","cos","multiply","a","b","ax","ay","az","aw","bx","by","bz","bw","exp","x","y","z","r","sqrt","et","w","ln","t","atan2","log","slerp","cosom","EPSILON","omega","acos","sinom","scale0","scale1","fromMat3","m","fTrace","fRoot","i","j","k","value","identity","getAxisAngle","out_axis","q","getAngle","dotproduct","dot","rotateX","rotateY","rotateZ","calculateW","abs","pow","scale","random","u1","RANDOM","u2","u3","sqrt1MinusU1","sqrtU1","PI","invert","a0","a1","a2","a3","invDot","conjugate","fromEuler","halfToRad","sx","cx","sy","cy","sz","cz","str","setAxes","sqlerp","rotationTo","equals","exactEquals","normalize","sqrLen","squaredLength","len","length","lerp","mul","add","copy","fromValues","clone","mat3","vec3","vec4","tmpvec3","xUnitVec3","yUnitVec3","cross","temp1","temp2","c","d","matr","view","right","up"]
}
