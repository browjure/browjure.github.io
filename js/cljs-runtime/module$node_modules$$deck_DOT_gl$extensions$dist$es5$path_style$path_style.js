shadow$provide.module$node_modules$$deck_DOT_gl$extensions$dist$es5$path_style$path_style=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),
_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),_shaders=require("module$node_modules$$deck_DOT_gl$extensions$dist$es5$path_style$shaders_glsl"),
_vec=require("module$node_modules$gl_matrix$cjs$vec3");require=function(_LayerExtension){function PathStyleExtension(){var _ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_ref$dash=_ref.dash;_ref$dash=void 0===_ref$dash?!1:_ref$dash;var _ref$offset=_ref.offset;_ref$offset=void 0===_ref$offset?!1:_ref$offset;_ref=_ref.highPrecisionDash;_ref=void 0===_ref?!1:_ref;(0,_classCallCheck2["default"])(this,PathStyleExtension);return _super.call(this,{dash:_ref$dash||_ref,offset:_ref$offset,
highPrecisionDash:_ref})}(0,_inherits2["default"])(PathStyleExtension,_LayerExtension);var _super=_createSuper(PathStyleExtension);(0,_createClass2["default"])(PathStyleExtension,[{key:"isEnabled",value:function(layer){return layer.state.pathTesselator}},{key:"getShaders",value:function(extension){if(!extension.isEnabled(this))return null;var result={};extension.opts.dash&&(result=(0,_core._mergeShaders)(result,_shaders.dashShaders));extension.opts.offset&&(result=(0,_core._mergeShaders)(result,_shaders.offsetShaders));
return result}},{key:"initializeState",value:function(context,extension){(context=this.getAttributeManager())&&extension.isEnabled(this)&&(extension.enabled=!0,extension.opts.dash&&context.addInstanced({instanceDashArrays:{size:2,accessor:"getDashArray"}}),extension.opts.highPrecisionDash&&context.addInstanced({instanceDashOffsets:{size:1,accessor:"getPath",transform:extension.getDashOffsets.bind(this)}}),extension.opts.offset&&context.addInstanced({instanceOffsets:{size:1,accessor:"getOffset"}}))}},
{key:"updateState",value:function(params,extension){extension.isEnabled(this)&&(params={},extension.opts.dash&&(params.dashAlignMode=this.props.dashJustified?1:0),this.state.model.setUniforms(params))}},{key:"getDashOffsets",value:function(path){for(var result=[0],positionSize="XY"===this.props.positionFormat?2:3,isNested=Array.isArray(path[0]),geometrySize=isNested?path.length:path.length/positionSize,p,prevP,i=0;i<geometrySize-1;i++)p=isNested?path[i]:path.slice(i*positionSize,i*positionSize+positionSize),
p=this.projectPosition(p),0<i&&(result[i]=result[i-1]+(0,_vec.dist)(prevP,p)),prevP=p;return result}}]);return PathStyleExtension}(_core.LayerExtension);exports["default"]=require;require.extensionName="PathStyleExtension";require.defaultProps={getDashArray:{type:"accessor",value:[0,0]},getOffset:{type:"accessor",value:0},dashJustified:!1}}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$extensions$dist$es5$path_style$path_style.js.map
