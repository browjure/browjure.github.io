shadow$provide.module$node_modules$$mapbox$point_geometry$index=function(global,require,module,exports){function Point(x,y){this.x=x;this.y=y}module.exports=Point;Point.prototype={clone:function(){return new Point(this.x,this.y)},add:function(p){return this.clone()._add(p)},sub:function(p){return this.clone()._sub(p)},multByPoint:function(p){return this.clone()._multByPoint(p)},divByPoint:function(p){return this.clone()._divByPoint(p)},mult:function(k){return this.clone()._mult(k)},div:function(k){return this.clone()._div(k)},
rotate:function(a){return this.clone()._rotate(a)},rotateAround:function(a,p){return this.clone()._rotateAround(a,p)},matMult:function(m){return this.clone()._matMult(m)},unit:function(){return this.clone()._unit()},perp:function(){return this.clone()._perp()},round:function(){return this.clone()._round()},mag:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},equals:function(other){return this.x===other.x&&this.y===other.y},dist:function(p){return Math.sqrt(this.distSqr(p))},distSqr:function(p){var dx=
p.x-this.x;p=p.y-this.y;return dx*dx+p*p},angle:function(){return Math.atan2(this.y,this.x)},angleTo:function(b){return Math.atan2(this.y-b.y,this.x-b.x)},angleWith:function(b){return this.angleWithSep(b.x,b.y)},angleWithSep:function(x,y){return Math.atan2(this.x*y-this.y*x,this.x*x+this.y*y)},_matMult:function(m){var y=m[2]*this.x+m[3]*this.y;this.x=m[0]*this.x+m[1]*this.y;this.y=y;return this},_add:function(p){this.x+=p.x;this.y+=p.y;return this},_sub:function(p){this.x-=p.x;this.y-=p.y;return this},
_mult:function(k){this.x*=k;this.y*=k;return this},_div:function(k){this.x/=k;this.y/=k;return this},_multByPoint:function(p){this.x*=p.x;this.y*=p.y;return this},_divByPoint:function(p){this.x/=p.x;this.y/=p.y;return this},_unit:function(){this._div(this.mag());return this},_perp:function(){var y=this.y;this.y=this.x;this.x=-y;return this},_rotate:function(angle){var cos=Math.cos(angle);angle=Math.sin(angle);var y=angle*this.x+cos*this.y;this.x=cos*this.x-angle*this.y;this.y=y;return this},_rotateAround:function(angle,
p){var cos=Math.cos(angle);angle=Math.sin(angle);var y=p.y+angle*(this.x-p.x)+cos*(this.y-p.y);this.x=p.x+cos*(this.x-p.x)-angle*(this.y-p.y);this.y=y;return this},_round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this}};Point.convert=function(a){return a instanceof Point?a:Array.isArray(a)?new Point(a[0],a[1]):a}}
//# sourceMappingURL=module$node_modules$$mapbox$point_geometry$index.js.map
