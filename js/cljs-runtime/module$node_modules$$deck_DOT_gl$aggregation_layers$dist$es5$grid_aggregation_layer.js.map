{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$grid_aggregation_layer.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/grid-aggregation-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$grid_aggregation_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _aggregationLayer = _interopRequireDefault(require(\"./aggregation-layer\"));\n\nvar _gpuGridAggregator = _interopRequireDefault(require(\"./utils/gpu-grid-aggregation/gpu-grid-aggregator\"));\n\nvar _core = require(\"@luma.gl/core\");\n\nvar _core2 = require(\"@deck.gl/core\");\n\nvar _binSorter = _interopRequireDefault(require(\"./utils/bin-sorter\"));\n\nvar _gridAggregator = require(\"./cpu-grid-layer/grid-aggregator\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar GridAggregationLayer = function (_AggregationLayer) {\n  (0, _inherits2[\"default\"])(GridAggregationLayer, _AggregationLayer);\n\n  var _super = _createSuper(GridAggregationLayer);\n\n  function GridAggregationLayer() {\n    (0, _classCallCheck2[\"default\"])(this, GridAggregationLayer);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(GridAggregationLayer, [{\n    key: \"initializeState\",\n    value: function initializeState(_ref) {\n      var dimensions = _ref.dimensions;\n      var gl = this.context.gl;\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(GridAggregationLayer.prototype), \"initializeState\", this).call(this, dimensions);\n      this.setState({\n        layerData: {},\n        gpuGridAggregator: new _gpuGridAggregator[\"default\"](gl, {\n          id: \"\".concat(this.id, \"-gpu-aggregator\")\n        }),\n        cpuGridAggregator: _gridAggregator.pointToDensityGridDataCPU\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(GridAggregationLayer.prototype), \"updateState\", this).call(this, opts);\n      this.updateAggregationState(opts);\n      var _this$state = this.state,\n          aggregationDataDirty = _this$state.aggregationDataDirty,\n          aggregationWeightsDirty = _this$state.aggregationWeightsDirty,\n          gpuAggregation = _this$state.gpuAggregation;\n\n      if (this.getNumInstances() <= 0) {\n        return;\n      }\n\n      var aggregationDirty = false;\n\n      if (aggregationDataDirty || gpuAggregation && aggregationWeightsDirty) {\n        this._updateAggregation(opts);\n\n        aggregationDirty = true;\n      }\n\n      if (!gpuAggregation && (aggregationDataDirty || aggregationWeightsDirty)) {\n        this._updateWeightBins();\n\n        this._uploadAggregationResults();\n\n        aggregationDirty = true;\n      }\n\n      this.setState({\n        aggregationDirty: aggregationDirty\n      });\n    }\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState() {\n      var count = this.state.weights.count;\n\n      if (count && count.aggregationBuffer) {\n        count.aggregationBuffer[\"delete\"]();\n      }\n\n      var gpuGridAggregator = this.state.gpuGridAggregator;\n\n      if (gpuGridAggregator) {\n        gpuGridAggregator[\"delete\"]();\n      }\n\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(GridAggregationLayer.prototype), \"finalizeState\", this).call(this);\n    }\n  }, {\n    key: \"updateShaders\",\n    value: function updateShaders(shaders) {\n      if (this.state.gpuAggregation) {\n        this.state.gpuGridAggregator.updateShaders(shaders);\n      }\n    }\n  }, {\n    key: \"updateAggregationState\",\n    value: function updateAggregationState(opts) {\n      _core2.log.assert(false);\n    }\n  }, {\n    key: \"allocateResources\",\n    value: function allocateResources(numRow, numCol) {\n      if (this.state.numRow !== numRow || this.state.numCol !== numCol) {\n        var dataBytes = numCol * numRow * 4 * 4;\n        var gl = this.context.gl;\n        var weights = this.state.weights;\n\n        for (var name in weights) {\n          var weight = weights[name];\n\n          if (weight.aggregationBuffer) {\n            weight.aggregationBuffer[\"delete\"]();\n          }\n\n          weight.aggregationBuffer = new _core.Buffer(gl, {\n            byteLength: dataBytes,\n            accessor: {\n              size: 4,\n              type: 5126,\n              divisor: 1\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"updateResults\",\n    value: function updateResults(_ref2) {\n      var aggregationData = _ref2.aggregationData,\n          maxMinData = _ref2.maxMinData,\n          maxData = _ref2.maxData,\n          minData = _ref2.minData;\n      var count = this.state.weights.count;\n\n      if (count) {\n        count.aggregationData = aggregationData;\n        count.maxMinData = maxMinData;\n        count.maxData = maxData;\n        count.minData = minData;\n      }\n    }\n  }, {\n    key: \"_updateAggregation\",\n    value: function _updateAggregation(opts) {\n      var _this$state2 = this.state,\n          cpuGridAggregator = _this$state2.cpuGridAggregator,\n          gpuGridAggregator = _this$state2.gpuGridAggregator,\n          gridOffset = _this$state2.gridOffset,\n          posOffset = _this$state2.posOffset,\n          _this$state2$translat = _this$state2.translation,\n          translation = _this$state2$translat === void 0 ? [0, 0] : _this$state2$translat,\n          _this$state2$scaling = _this$state2.scaling,\n          scaling = _this$state2$scaling === void 0 ? [0, 0, 0] : _this$state2$scaling,\n          boundingBox = _this$state2.boundingBox,\n          projectPoints = _this$state2.projectPoints,\n          gpuAggregation = _this$state2.gpuAggregation,\n          numCol = _this$state2.numCol,\n          numRow = _this$state2.numRow;\n      var props = opts.props;\n      var viewport = this.context.viewport;\n      var attributes = this.getAttributes();\n      var vertexCount = this.getNumInstances();\n\n      if (!gpuAggregation) {\n        var result = cpuGridAggregator(props, {\n          gridOffset: gridOffset,\n          projectPoints: projectPoints,\n          attributes: attributes,\n          viewport: viewport,\n          posOffset: posOffset,\n          boundingBox: boundingBox\n        });\n        this.setState({\n          layerData: result\n        });\n      } else {\n        var weights = this.state.weights;\n        gpuGridAggregator.run({\n          weights: weights,\n          cellSize: [gridOffset.xOffset, gridOffset.yOffset],\n          numCol: numCol,\n          numRow: numRow,\n          translation: translation,\n          scaling: scaling,\n          vertexCount: vertexCount,\n          projectPoints: projectPoints,\n          attributes: attributes,\n          moduleSettings: this.getModuleSettings()\n        });\n      }\n    }\n  }, {\n    key: \"_updateWeightBins\",\n    value: function _updateWeightBins() {\n      var getValue = this.state.getValue;\n      var sortedBins = new _binSorter[\"default\"](this.state.layerData.data || [], {\n        getValue: getValue\n      });\n      this.setState({\n        sortedBins: sortedBins\n      });\n    }\n  }, {\n    key: \"_uploadAggregationResults\",\n    value: function _uploadAggregationResults() {\n      var _this$state3 = this.state,\n          numCol = _this$state3.numCol,\n          numRow = _this$state3.numRow;\n      var data = this.state.layerData.data;\n      var _this$state$sortedBin = this.state.sortedBins,\n          aggregatedBins = _this$state$sortedBin.aggregatedBins,\n          minValue = _this$state$sortedBin.minValue,\n          maxValue = _this$state$sortedBin.maxValue,\n          totalCount = _this$state$sortedBin.totalCount;\n      var ELEMENTCOUNT = 4;\n      var aggregationSize = numCol * numRow * ELEMENTCOUNT;\n      var aggregationData = new Float32Array(aggregationSize).fill(0);\n\n      var _iterator = _createForOfIteratorHelper(aggregatedBins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var bin = _step.value;\n          var _data$bin$i = data[bin.i],\n              lonIdx = _data$bin$i.lonIdx,\n              latIdx = _data$bin$i.latIdx;\n          var value = bin.value,\n              counts = bin.counts;\n          var cellIndex = (lonIdx + latIdx * numCol) * ELEMENTCOUNT;\n          aggregationData[cellIndex] = value;\n          aggregationData[cellIndex + ELEMENTCOUNT - 1] = counts;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var maxMinData = new Float32Array([maxValue, 0, 0, minValue]);\n      var maxData = new Float32Array([maxValue, 0, 0, totalCount]);\n      var minData = new Float32Array([minValue, 0, 0, totalCount]);\n      this.updateResults({\n        aggregationData: aggregationData,\n        maxMinData: maxMinData,\n        maxData: maxData,\n        minData: minData\n      });\n    }\n  }]);\n  return GridAggregationLayer;\n}(_aggregationLayer[\"default\"]);\n\nexports[\"default\"] = GridAggregationLayer;\nGridAggregationLayer.layerName = 'GridAggregationLayer';\n//# sourceMappingURL=grid-aggregation-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","NewTarget","result","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Date","_interopRequireDefault","defineProperty","_classCallCheck2","_createClass2","_get2","_inherits2","_aggregationLayer","_gpuGridAggregator","_core","_core2","_binSorter","_gridAggregator","GridAggregationLayer","_AggregationLayer","_super","key","initializeState","_ref","dimensions","gl","context","setState","layerData","gpuGridAggregator","id","concat","cpuGridAggregator","pointToDensityGridDataCPU","updateState","opts","updateAggregationState","_this$state","state","aggregationDataDirty","aggregationWeightsDirty","gpuAggregation","getNumInstances","aggregationDirty","_updateAggregation","_updateWeightBins","_uploadAggregationResults","finalizeState","count","weights","aggregationBuffer","updateShaders","shaders","log","assert","allocateResources","numRow","numCol","dataBytes","weight","Buffer","byteLength","accessor","size","type","divisor","updateResults","_ref2","aggregationData","maxMinData","maxData","minData","_this$state2","gridOffset","posOffset","_this$state2$translat","translation","_this$state2$scaling","scaling","boundingBox","projectPoints","props","viewport","attributes","getAttributes","vertexCount","run","cellSize","xOffset","yOffset","moduleSettings","getModuleSettings","sortedBins","data","getValue","_this$state3","_this$state$sortedBin","aggregatedBins","minValue","maxValue","totalCount","Float32Array","ELEMENTCOUNT","fill","_iterator","_step","bin","_data$bin$i","counts","cellIndex","lonIdx","latIdx","layerName"]
}
