{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$core$dist$es5$utils$typed_array_manager.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/core/dist/es5/utils/typed-array-manager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$core$dist$es5$utils$typed_array_manager\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.TypedArrayManager = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar TypedArrayManager = function () {\n  function TypedArrayManager(props) {\n    (0, _classCallCheck2[\"default\"])(this, TypedArrayManager);\n    this._pool = [];\n    this.props = {\n      overAlloc: 2,\n      poolSize: 100\n    };\n    this.setProps(props);\n  }\n\n  (0, _createClass2[\"default\"])(TypedArrayManager, [{\n    key: \"setProps\",\n    value: function setProps(props) {\n      Object.assign(this.props, props);\n    }\n  }, {\n    key: \"allocate\",\n    value: function allocate(typedArray, count, _ref) {\n      var _ref$size = _ref.size,\n          size = _ref$size === void 0 ? 1 : _ref$size,\n          type = _ref.type,\n          _ref$padding = _ref.padding,\n          padding = _ref$padding === void 0 ? 0 : _ref$padding,\n          _ref$copy = _ref.copy,\n          copy = _ref$copy === void 0 ? false : _ref$copy,\n          _ref$initialize = _ref.initialize,\n          initialize = _ref$initialize === void 0 ? false : _ref$initialize,\n          maxCount = _ref.maxCount;\n      var Type = type || typedArray && typedArray.constructor || Float32Array;\n      var newSize = count * size + padding;\n\n      if (ArrayBuffer.isView(typedArray)) {\n        if (newSize <= typedArray.length) {\n          return typedArray;\n        }\n\n        if (newSize * typedArray.BYTES_PER_ELEMENT <= typedArray.buffer.byteLength) {\n          return new Type(typedArray.buffer, 0, newSize);\n        }\n      }\n\n      var maxSize;\n\n      if (maxCount) {\n        maxSize = maxCount * size + padding;\n      }\n\n      var newArray = this._allocate(Type, newSize, initialize, maxSize);\n\n      if (typedArray && copy) {\n        newArray.set(typedArray);\n      } else if (!initialize) {\n        newArray.fill(0, 0, 4);\n      }\n\n      this._release(typedArray);\n\n      return newArray;\n    }\n  }, {\n    key: \"release\",\n    value: function release(typedArray) {\n      this._release(typedArray);\n    }\n  }, {\n    key: \"_allocate\",\n    value: function _allocate(Type, size, initialize, maxSize) {\n      var sizeToAllocate = Math.max(Math.ceil(size * this.props.overAlloc), 1);\n\n      if (sizeToAllocate > maxSize) {\n        sizeToAllocate = maxSize;\n      }\n\n      var pool = this._pool;\n      var byteLength = Type.BYTES_PER_ELEMENT * sizeToAllocate;\n      var i = pool.findIndex(function (b) {\n        return b.byteLength >= byteLength;\n      });\n\n      if (i >= 0) {\n        var array = new Type(pool.splice(i, 1)[0], 0, sizeToAllocate);\n\n        if (initialize) {\n          array.fill(0);\n        }\n\n        return array;\n      }\n\n      return new Type(sizeToAllocate);\n    }\n  }, {\n    key: \"_release\",\n    value: function _release(typedArray) {\n      if (!ArrayBuffer.isView(typedArray)) {\n        return;\n      }\n\n      var pool = this._pool;\n      var buffer = typedArray.buffer;\n      var byteLength = buffer.byteLength;\n      var i = pool.findIndex(function (b) {\n        return b.byteLength >= byteLength;\n      });\n\n      if (i < 0) {\n        pool.push(buffer);\n      } else if (i > 0 || pool.length < this.props.poolSize) {\n        pool.splice(i, 0, buffer);\n      }\n\n      if (pool.length > this.props.poolSize) {\n        pool.shift();\n      }\n    }\n  }]);\n  return TypedArrayManager;\n}();\n\nexports.TypedArrayManager = TypedArrayManager;\n\nvar _default = new TypedArrayManager();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=typed-array-manager.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","TypedArrayManager","_classCallCheck2","_createClass2","props","_pool","overAlloc","poolSize","setProps","key","assign","allocate","typedArray","count","_ref","_ref$size","size","_ref$padding","padding","_ref$copy","copy","_ref$initialize","initialize","maxCount","Type","type","constructor","Float32Array","newSize","ArrayBuffer","isView","length","BYTES_PER_ELEMENT","buffer","byteLength","maxSize","newArray","_allocate","set","fill","_release","release","sizeToAllocate","Math","max","ceil","pool","i","findIndex","b","array","splice","push","shift","_default"]
}
