shadow$provide.module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$s2_layer$s2_geometry=function(global,require,module,exports){function singleSTtoUV(st){return.5<=st?1/3*(4*st*st-1):1/3*(1-4*(1-st)*(1-st))}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.IJToST=function(ij,order,offsets){order=1<<order;return[(ij[0]+offsets[0])/order,(ij[1]+offsets[1])/order]};exports.STToUV=function(st){return[singleSTtoUV(st[0]),
singleSTtoUV(st[1])]};exports.FaceUVToXYZ=function(face,_ref){var _ref2=(0,_slicedToArray2["default"])(_ref,2);_ref=_ref2[0];_ref2=_ref2[1];switch(face){case 0:return[1,_ref,_ref2];case 1:return[-_ref,1,_ref2];case 2:return[-_ref,-_ref2,1];case 3:return[-1,-_ref2,-_ref];case 4:return[_ref2,-1,-_ref];case 5:return[_ref2,_ref,-1];default:throw Error("Invalid face");}};exports.XYZToLngLat=function(_ref3){_ref3=(0,_slicedToArray2["default"])(_ref3,3);var x=_ref3[0],y=_ref3[1];return[Math.atan2(y,x)*RADIAN_TO_DEGREE,
Math.atan2(_ref3[2],Math.sqrt(x*x+y*y))*RADIAN_TO_DEGREE]};exports.toHilbertQuadkey=function(idS){for(var bin=_long["default"].fromString(idS,!0,10).toString(2);bin.length<FACE_BITS+POS_BITS;)bin="0"+bin;var lsbIndex=bin.lastIndexOf("1");idS=bin.substring(0,3);lsbIndex=bin.substring(3,lsbIndex);bin=lsbIndex.length/2;idS=_long["default"].fromString(idS,!0,2).toString(10);for(lsbIndex=_long["default"].fromString(lsbIndex,!0,2).toString(4);lsbIndex.length<bin;)lsbIndex="0"+lsbIndex;return"".concat(idS,
"/").concat(lsbIndex)};exports.FromHilbertQuadKey=function(hilbertQuadkey){var parts=hilbertQuadkey.split("/");hilbertQuadkey=parseInt(parts[0],10);var position=parts[1],maxLevel=position.length;parts=[0,0];for(var level,i=maxLevel-1;0<=i;i--){level=maxLevel-i;var bit=position[i],rx=0,ry=0;"1"===bit?ry=1:"2"===bit?ry=rx=1:"3"===bit&&(rx=1);var n=bit=Math.pow(2,level-1),point=parts;0===ry&&(1===rx&&(point[0]=n-1-point[0],point[1]=n-1-point[1]),n=point[0],point[0]=point[1],point[1]=n);parts[0]+=bit*
rx;parts[1]+=bit*ry}1===hilbertQuadkey%2&&(position=parts[0],parts[0]=parts[1],parts[1]=position);return{face:hilbertQuadkey,ij:parts,level}};var _slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_long=global(require("module$node_modules$long$dist$long")),FACE_BITS=3,POS_BITS=61,RADIAN_TO_DEGREE=180/Math.PI}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$geo_layers$dist$es5$s2_layer$s2_geometry.js.map
