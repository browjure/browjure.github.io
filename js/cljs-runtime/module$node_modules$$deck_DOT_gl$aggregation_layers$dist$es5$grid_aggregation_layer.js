shadow$provide.module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$grid_aggregation_layer=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e;
},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=o[Symbol.iterator]()},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,
minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _createSuper(Derived){var hasNativeReflectConstruct=
_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;
try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_get2=global(require("module$node_modules$$babel$runtime$helpers$get")),
_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf"));module=global(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$aggregation_layer"));var _gpuGridAggregator=global(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$gpu_grid_aggregation$gpu_grid_aggregator")),
_core=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_core2=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),_binSorter=global(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$bin_sorter")),_gridAggregator=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$cpu_grid_layer$grid_aggregator");require=function(_AggregationLayer){function GridAggregationLayer(){(0,_classCallCheck2["default"])(this,GridAggregationLayer);return _super.apply(this,
arguments)}(0,_inherits2["default"])(GridAggregationLayer,_AggregationLayer);var _super=_createSuper(GridAggregationLayer);(0,_createClass2["default"])(GridAggregationLayer,[{key:"initializeState",value:function(_ref){_ref=_ref.dimensions;var gl=this.context.gl;(0,_get2["default"])((0,_getPrototypeOf2["default"])(GridAggregationLayer.prototype),"initializeState",this).call(this,_ref);this.setState({layerData:{},gpuGridAggregator:new _gpuGridAggregator["default"](gl,{id:"".concat(this.id,"-gpu-aggregator")}),
cpuGridAggregator:_gridAggregator.pointToDensityGridDataCPU})}},{key:"updateState",value:function(opts){(0,_get2["default"])((0,_getPrototypeOf2["default"])(GridAggregationLayer.prototype),"updateState",this).call(this,opts);this.updateAggregationState(opts);var _this$state=this.state,aggregationDataDirty=_this$state.aggregationDataDirty,aggregationWeightsDirty=_this$state.aggregationWeightsDirty;_this$state=_this$state.gpuAggregation;if(!(0>=this.getNumInstances())){var aggregationDirty=!1;if(aggregationDataDirty||
_this$state&&aggregationWeightsDirty)this._updateAggregation(opts),aggregationDirty=!0;_this$state||!aggregationDataDirty&&!aggregationWeightsDirty||(this._updateWeightBins(),this._uploadAggregationResults(),aggregationDirty=!0);this.setState({aggregationDirty})}}},{key:"finalizeState",value:function(){var count=this.state.weights.count;if(count&&count.aggregationBuffer)count.aggregationBuffer["delete"]();if(count=this.state.gpuGridAggregator)count["delete"]();(0,_get2["default"])((0,_getPrototypeOf2["default"])(GridAggregationLayer.prototype),
"finalizeState",this).call(this)}},{key:"updateShaders",value:function(shaders){this.state.gpuAggregation&&this.state.gpuGridAggregator.updateShaders(shaders)}},{key:"updateAggregationState",value:function(opts){_core2.log.assert(!1)}},{key:"allocateResources",value:function(numRow,numCol){if(this.state.numRow!==numRow||this.state.numCol!==numCol){numRow=numCol*numRow*16;numCol=this.context.gl;var weights=this.state.weights,name;for(name in weights){var weight=weights[name];if(weight.aggregationBuffer)weight.aggregationBuffer["delete"]();
weight.aggregationBuffer=new _core.Buffer(numCol,{byteLength:numRow,accessor:{size:4,type:5126,divisor:1}})}}}},{key:"updateResults",value:function(_ref2){var aggregationData=_ref2.aggregationData,maxMinData=_ref2.maxMinData,maxData=_ref2.maxData;_ref2=_ref2.minData;var count=this.state.weights.count;count&&(count.aggregationData=aggregationData,count.maxMinData=maxMinData,count.maxData=maxData,count.minData=_ref2)}},{key:"_updateAggregation",value:function(opts){var _this$state2=this.state,cpuGridAggregator=
_this$state2.cpuGridAggregator,gpuGridAggregator=_this$state2.gpuGridAggregator,gridOffset=_this$state2.gridOffset,posOffset=_this$state2.posOffset,_this$state2$translat=_this$state2.translation;_this$state2$translat=void 0===_this$state2$translat?[0,0]:_this$state2$translat;var _this$state2$scaling=_this$state2.scaling;_this$state2$scaling=void 0===_this$state2$scaling?[0,0,0]:_this$state2$scaling;var boundingBox=_this$state2.boundingBox,projectPoints=_this$state2.projectPoints,gpuAggregation=_this$state2.gpuAggregation,
numCol=_this$state2.numCol;_this$state2=_this$state2.numRow;opts=opts.props;var viewport=this.context.viewport,attributes=this.getAttributes(),vertexCount=this.getNumInstances();gpuAggregation?gpuGridAggregator.run({weights:this.state.weights,cellSize:[gridOffset.xOffset,gridOffset.yOffset],numCol,numRow:_this$state2,translation:_this$state2$translat,scaling:_this$state2$scaling,vertexCount,projectPoints,attributes,moduleSettings:this.getModuleSettings()}):(cpuGridAggregator=cpuGridAggregator(opts,
{gridOffset,projectPoints,attributes,viewport,posOffset,boundingBox}),this.setState({layerData:cpuGridAggregator}))}},{key:"_updateWeightBins",value:function(){var sortedBins=new _binSorter["default"](this.state.layerData.data||[],{getValue:this.state.getValue});this.setState({sortedBins})}},{key:"_uploadAggregationResults",value:function(){var _this$state3=this.state,numCol=_this$state3.numCol,data=this.state.layerData.data,_this$state$sortedBin=this.state.sortedBins,aggregatedBins=_this$state$sortedBin.aggregatedBins,
minValue=_this$state$sortedBin.minValue,maxValue=_this$state$sortedBin.maxValue;_this$state$sortedBin=_this$state$sortedBin.totalCount;_this$state3=(new Float32Array(numCol*_this$state3.numRow*4)).fill(0);aggregatedBins=_createForOfIteratorHelper(aggregatedBins);var _step;try{for(aggregatedBins.s();!(_step=aggregatedBins.n()).done;){var bin=_step.value,_data$bin$i=data[bin.i],counts=bin.counts,cellIndex=4*(_data$bin$i.lonIdx+_data$bin$i.latIdx*numCol);_this$state3[cellIndex]=bin.value;_this$state3[cellIndex+
4-1]=counts}}catch(err){aggregatedBins.e(err)}finally{aggregatedBins.f()}numCol=new Float32Array([maxValue,0,0,minValue]);maxValue=new Float32Array([maxValue,0,0,_this$state$sortedBin]);minValue=new Float32Array([minValue,0,0,_this$state$sortedBin]);this.updateResults({aggregationData:_this$state3,maxMinData:numCol,maxData:maxValue,minData:minValue})}}]);return GridAggregationLayer}(module["default"]);exports["default"]=require;require.layerName="GridAggregationLayer"}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$grid_aggregation_layer.js.map
