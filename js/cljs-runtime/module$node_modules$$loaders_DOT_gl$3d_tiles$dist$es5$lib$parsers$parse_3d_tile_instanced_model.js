shadow$provide.module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$parse_3d_tile_instanced_model=function(global,require,module,exports){function _parseInstancedModel3DTile(){_parseInstancedModel3DTile=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(tile$jscomp$0,arrayBuffer$jscomp$0,byteOffset$jscomp$0,options$jscomp$0,context){return _regenerator["default"].wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:var tile=tile$jscomp$0,
arrayBuffer=arrayBuffer$jscomp$0,byteOffset=byteOffset$jscomp$0,options=options$jscomp$0;byteOffset=(0,_parse3dTileHeader.parse3DTileHeaderSync)(tile,arrayBuffer,byteOffset);if(1!==tile.version)throw Error("Instanced 3D Model version ".concat(tile.version," is not supported"));byteOffset=(0,_parse3dTileTables.parse3DTileTablesHeaderSync)(tile,arrayBuffer,byteOffset);var view=new DataView(arrayBuffer);tile.gltfFormat=view.getUint32(byteOffset,!0);byteOffset+=4;byteOffset=(0,_parse3dTileTables.parse3DTileTablesSync)(tile,
arrayBuffer,byteOffset,options);byteOffset=(0,_parse3dTileGltfView.parse3DTileGLTFViewSync)(tile,arrayBuffer,byteOffset,options);if(0===tile.featureTableJsonByteLength)throw Error("i3dm parser: featureTableJsonByteLength is zero.");arrayBuffer=new _tile3dFeatureTable["default"](tile.featureTableJson,tile.featureTableBinary);options=arrayBuffer.getGlobalProperty("INSTANCES_LENGTH");arrayBuffer.featuresLength=options;if(!Number.isFinite(options))throw Error("i3dm parser: INSTANCES_LENGTH must be defined");
tile.eastNorthUp=arrayBuffer.getGlobalProperty("EAST_NORTH_UP");tile.rtcCenter=arrayBuffer.getGlobalProperty("RTC_CENTER",_math.GL.FLOAT,3);new _tile3dBatchTable["default"](tile.batchTableJson,tile.batchTableBinary,options);var JSCompiler_object_inline_scale_4440;view=Array(options);var instancePosition=new _core.Vector3;new _core.Vector3;new _core.Vector3;new _core.Vector3;for(var instanceRotation=new _core.Matrix3,instanceQuaternion=new _core.Quaternion,instanceScale=new _core.Vector3,instanceTransform=
new _core.Matrix4,scratch1=[],scratch2=[],scratchVector1=new _core.Vector3,scratchVector2=new _core.Vector3,i=0;i<options;i++){var JSCompiler_object_inline_translation_4438=void 0;if(arrayBuffer.hasProperty("POSITION"))JSCompiler_object_inline_translation_4438=arrayBuffer.getProperty("POSITION",_math.GL.FLOAT,3,i,instancePosition);else if(arrayBuffer.hasProperty("POSITION_QUANTIZED")){JSCompiler_object_inline_translation_4438=arrayBuffer.getProperty("POSITION_QUANTIZED",_math.GL.UNSIGNED_SHORT,3,
i,instancePosition);var JSCompiler_object_inline_rotation_4439=arrayBuffer.getGlobalProperty("QUANTIZED_VOLUME_OFFSET",_math.GL.FLOAT,3,scratchVector1);if(!JSCompiler_object_inline_rotation_4439)throw Error("i3dm parser: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.");var quantizedVolumeScale=arrayBuffer.getGlobalProperty("QUANTIZED_VOLUME_SCALE",_math.GL.FLOAT,3,scratchVector2);if(!quantizedVolumeScale)throw Error("i3dm parser: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.");
for(JSCompiler_object_inline_scale_4440=0;3>JSCompiler_object_inline_scale_4440;JSCompiler_object_inline_scale_4440++)JSCompiler_object_inline_translation_4438[JSCompiler_object_inline_scale_4440]=JSCompiler_object_inline_translation_4438[JSCompiler_object_inline_scale_4440]/65535*quantizedVolumeScale[JSCompiler_object_inline_scale_4440]+JSCompiler_object_inline_rotation_4439[JSCompiler_object_inline_scale_4440]}if(!JSCompiler_object_inline_translation_4438)throw Error("i3dm: POSITION or POSITION_QUANTIZED must be defined for each instance.");
instancePosition.copy(JSCompiler_object_inline_translation_4438);JSCompiler_object_inline_translation_4438=instancePosition;tile.normalUp=arrayBuffer.getProperty("NORMAL_UP",_math.GL.FLOAT,3,i,scratch1);tile.normalRight=arrayBuffer.getProperty("NORMAL_RIGHT",_math.GL.FLOAT,3,i,scratch2);if(tile.normalUp){if(!tile.normalRight)throw Error("i3dm: Custom orientation requires both NORMAL_UP and NORMAL_RIGHT.");tile.hasCustomOrientation=!0}else{tile.octNormalUp=arrayBuffer.getProperty("NORMAL_UP_OCT32P",
_math.GL.UNSIGNED_SHORT,2,scratch1);tile.octNormalRight=arrayBuffer.getProperty("NORMAL_RIGHT_OCT32P",_math.GL.UNSIGNED_SHORT,2,scratch2);if(tile.octNormalUp){if(!tile.octNormalRight)throw Error("i3dm: oct-encoded orientation requires NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P");throw Error("i3dm: oct-encoded orientation not implemented");}tile.eastNorthUp?(_geospatial.Ellipsoid.WGS84.eastNorthUpToFixedFrame(instancePosition,instanceTransform),instanceTransform.getRotationMatrix3(instanceRotation)):
instanceRotation.identity()}instanceQuaternion.fromMatrix3(instanceRotation);JSCompiler_object_inline_rotation_4439=instanceQuaternion;instanceScale.set(1,1,1);quantizedVolumeScale=arrayBuffer.getProperty("SCALE",_math.GL.FLOAT,1,i);Number.isFinite(quantizedVolumeScale)&&instanceScale.multiplyByScalar(quantizedVolumeScale);(quantizedVolumeScale=arrayBuffer.getProperty("SCALE_NON_UNIFORM",_math.GL.FLOAT,3,i,scratch1))&&instanceScale.scale(quantizedVolumeScale);JSCompiler_object_inline_scale_4440=instanceScale;
quantizedVolumeScale=arrayBuffer.getProperty("BATCH_ID",_math.GL.UNSIGNED_SHORT,1,i);void 0===quantizedVolumeScale&&(quantizedVolumeScale=i);JSCompiler_object_inline_rotation_4439=(new _core.Matrix4).fromQuaternion(JSCompiler_object_inline_rotation_4439);instanceTransform.identity();instanceTransform.translate(JSCompiler_object_inline_translation_4438);instanceTransform.multiplyRight(JSCompiler_object_inline_rotation_4439);instanceTransform.scale(JSCompiler_object_inline_scale_4440);JSCompiler_object_inline_translation_4438=
instanceTransform.clone();view[i]={modelMatrix:JSCompiler_object_inline_translation_4438,batchId:quantizedVolumeScale}}tile.instances=view;byteOffset$jscomp$0=byteOffset;_context.next=3;return(0,_parse3dTileGltfView.extractGLTF)(tile$jscomp$0,tile$jscomp$0.gltfFormat,options$jscomp$0,context);case 3:return _context.abrupt("return",byteOffset$jscomp$0);case 4:case "end":return _context.stop()}},_callee)}));return _parseInstancedModel3DTile.apply(this,arguments)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.parseInstancedModel3DTile=function(_x,_x2,_x3,_x4,_x5){return _parseInstancedModel3DTile.apply(this,arguments)};var _regenerator=global(require("module$node_modules$$babel$runtime$regenerator$index")),_asyncToGenerator2=global(require("module$node_modules$$babel$runtime$helpers$asyncToGenerator")),_core=require("module$node_modules$$math_DOT_gl$core$dist$es5$index"),_geospatial=require("module$node_modules$$math_DOT_gl$geospatial$dist$es5$index"),
_math=require("module$node_modules$$loaders_DOT_gl$math$dist$es5$index"),_tile3dFeatureTable=global(require("module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$classes$tile_3d_feature_table")),_tile3dBatchTable=global(require("module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$classes$tile_3d_batch_table")),_parse3dTileHeader=require("module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_header"),_parse3dTileTables=require("module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_tables"),
_parse3dTileGltfView=require("module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_gltf_view")}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$parse_3d_tile_instanced_model.js.map
