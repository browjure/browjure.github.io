{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$tiles_3d_lod.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/tiles/dist/es5/tileset/helpers/tiles-3d-lod.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$tiles_3d_lod\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateDynamicScreenSpaceError = calculateDynamicScreenSpaceError;\nexports.fog = fog;\nexports.getDynamicScreenSpaceError = getDynamicScreenSpaceError;\nexports.getTiles3DScreenSpaceError = getTiles3DScreenSpaceError;\n\nvar _core = require(\"@math.gl/core\");\n\nvar scratchPositionNormal = new _core.Vector3();\nvar scratchCartographic = new _core.Vector3();\nvar scratchMatrix = new _core.Matrix4();\nvar scratchCenter = new _core.Vector3();\nvar scratchPosition = new _core.Vector3();\nvar scratchDirection = new _core.Vector3();\n\nfunction calculateDynamicScreenSpaceError(root, _ref) {\n  var camera = _ref.camera,\n      mapProjection = _ref.mapProjection;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$dynamicScree = options.dynamicScreenSpaceErrorHeightFalloff,\n      dynamicScreenSpaceErrorHeightFalloff = _options$dynamicScree === void 0 ? 0.25 : _options$dynamicScree,\n      _options$dynamicScree2 = options.dynamicScreenSpaceErrorDensity,\n      dynamicScreenSpaceErrorDensity = _options$dynamicScree2 === void 0 ? 0.00278 : _options$dynamicScree2;\n  var up;\n  var direction;\n  var height;\n  var minimumHeight;\n  var maximumHeight;\n  var tileBoundingVolume = root.contentBoundingVolume;\n\n  if (tileBoundingVolume instanceof TileBoundingRegion) {\n    up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n    direction = camera.directionWC;\n    height = camera.positionCartographic.height;\n    minimumHeight = tileBoundingVolume.minimumHeight;\n    maximumHeight = tileBoundingVolume.maximumHeight;\n  } else {\n    var transformLocal = _core.Matrix4.inverseTransformation(root.computedTransform, scratchMatrix);\n\n    var ellipsoid = mapProjection.ellipsoid;\n    var boundingVolume = tileBoundingVolume.boundingVolume;\n\n    var centerLocal = _core.Matrix4.multiplyByPoint(transformLocal, boundingVolume.center, scratchCenter);\n\n    if (Cartesian3.magnitude(centerLocal) > ellipsoid.minimumRadius) {\n      var centerCartographic = Cartographic.fromCartesian(centerLocal, ellipsoid, scratchCartographic);\n      up = Cartesian3.normalize(camera.positionWC, scratchPositionNormal);\n      direction = camera.directionWC;\n      height = camera.positionCartographic.height;\n      minimumHeight = 0.0;\n      maximumHeight = centerCartographic.height * 2.0;\n    } else {\n      var positionLocal = _core.Matrix4.multiplyByPoint(transformLocal, camera.positionWC, scratchPosition);\n\n      up = Cartesian3.UNIT_Z;\n      direction = _core.Matrix4.multiplyByPointAsVector(transformLocal, camera.directionWC, scratchDirection);\n      direction = Cartesian3.normalize(direction, direction);\n      height = positionLocal.z;\n\n      if (tileBoundingVolume instanceof TileOrientedBoundingBox) {\n        var boxHeight = root._header.boundingVolume.box[11];\n        minimumHeight = centerLocal.z - boxHeight;\n        maximumHeight = centerLocal.z + boxHeight;\n      } else if (tileBoundingVolume instanceof TileBoundingSphere) {\n        var radius = boundingVolume.radius;\n        minimumHeight = centerLocal.z - radius;\n        maximumHeight = centerLocal.z + radius;\n      }\n    }\n  }\n\n  var heightFalloff = dynamicScreenSpaceErrorHeightFalloff;\n  var heightClose = minimumHeight + (maximumHeight - minimumHeight) * heightFalloff;\n  var heightFar = maximumHeight;\n  var t = (0, _core.clamp)((height - heightClose) / (heightFar - heightClose), 0.0, 1.0);\n  var dot = Math.abs(Cartesian3.dot(direction, up));\n  var horizonFactor = 1.0 - dot;\n  horizonFactor = horizonFactor * (1.0 - t);\n  return dynamicScreenSpaceErrorDensity * horizonFactor;\n}\n\nfunction fog(distanceToCamera, density) {\n  var scalar = distanceToCamera * density;\n  return 1.0 - Math.exp(-(scalar * scalar));\n}\n\nfunction getDynamicScreenSpaceError(tileset, distanceToCamera) {\n  if (tileset.dynamicScreenSpaceError && tileset._dynamicScreenSpaceErrorComputedDensity) {\n    var density = tileset._dynamicScreenSpaceErrorComputedDensity;\n    var factor = tileset.dynamicScreenSpaceErrorFactor;\n    var dynamicError = fog(distanceToCamera, density) * factor;\n    return dynamicError;\n  }\n\n  return 0;\n}\n\nfunction getTiles3DScreenSpaceError(tile, frameState, useParentLodMetric) {\n  var tileset = tile.tileset;\n  var parentLodMetricValue = tile.parent && tile.parent.lodMetricValue || tile.lodMetricValue;\n  var lodMetricValue = useParentLodMetric ? parentLodMetricValue : tile.lodMetricValue;\n\n  if (lodMetricValue === 0.0) {\n    return 0.0;\n  }\n\n  var distance = Math.max(tile._distanceToCamera, 1e-7);\n  var height = frameState.height,\n      sseDenominator = frameState.sseDenominator;\n  var error = lodMetricValue * height / (distance * sseDenominator);\n  error -= getDynamicScreenSpaceError(tileset, distance);\n  return error;\n}\n//# sourceMappingURL=tiles-3d-lod.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","fog","distanceToCamera","density","scalar","Math","exp","getDynamicScreenSpaceError","tileset","dynamicScreenSpaceError","_dynamicScreenSpaceErrorComputedDensity","factor","dynamicScreenSpaceErrorFactor","Object","defineProperty","value","calculateDynamicScreenSpaceError","root","_ref","camera","mapProjection","options","arguments","length","undefined","_options$dynamicScree","dynamicScreenSpaceErrorHeightFalloff","_options$dynamicScree2","dynamicScreenSpaceErrorDensity","tileBoundingVolume","contentBoundingVolume","TileBoundingRegion","up","Cartesian3","normalize","positionWC","scratchPositionNormal","direction","directionWC","height","positionCartographic","minimumHeight","maximumHeight","transformLocal","_core","Matrix4","inverseTransformation","computedTransform","scratchMatrix","ellipsoid","boundingVolume","centerLocal","multiplyByPoint","center","scratchCenter","magnitude","minimumRadius","centerCartographic","Cartographic","fromCartesian","scratchCartographic","positionLocal","scratchPosition","UNIT_Z","multiplyByPointAsVector","scratchDirection","z","TileOrientedBoundingBox","boxHeight","_header","box","TileBoundingSphere","radius","heightClose","heightFar","t","clamp","horizonFactor","dot","abs","getTiles3DScreenSpaceError","tile","frameState","useParentLodMetric","parentLodMetricValue","parent","lodMetricValue","distance","max","_distanceToCamera","sseDenominator","Vector3"]
}
