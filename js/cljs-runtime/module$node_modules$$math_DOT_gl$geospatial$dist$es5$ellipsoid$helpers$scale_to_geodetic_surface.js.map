{
"version":3,
"file":"module$node_modules$$math_DOT_gl$geospatial$dist$es5$ellipsoid$helpers$scale_to_geodetic_surface.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@math_DOT_gl/geospatial/dist/es5/ellipsoid/helpers/scale-to-geodetic-surface.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$math_DOT_gl$geospatial$dist$es5$ellipsoid$helpers$scale_to_geodetic_surface\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = scaleToGeodeticSurface;\n\nvar _core = require(\"@math.gl/core\");\n\nvar vec3 = _interopRequireWildcard(require(\"gl-matrix/vec3\"));\n\nvar scratchVector = new _core.Vector3();\nvar scaleToGeodeticSurfaceIntersection = new _core.Vector3();\nvar scaleToGeodeticSurfaceGradient = new _core.Vector3();\n\nfunction scaleToGeodeticSurface(cartesian, ellipsoid) {\n  var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _core.Vector3();\n  var oneOverRadii = ellipsoid.oneOverRadii,\n      oneOverRadiiSquared = ellipsoid.oneOverRadiiSquared,\n      centerToleranceSquared = ellipsoid.centerToleranceSquared;\n  scratchVector.from(cartesian);\n  var positionX = cartesian.x;\n  var positionY = cartesian.y;\n  var positionZ = cartesian.z;\n  var oneOverRadiiX = oneOverRadii.x;\n  var oneOverRadiiY = oneOverRadii.y;\n  var oneOverRadiiZ = oneOverRadii.z;\n  var x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\n  var y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\n  var z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\n  var squaredNorm = x2 + y2 + z2;\n  var ratio = Math.sqrt(1.0 / squaredNorm);\n\n  if (!Number.isFinite(ratio)) {\n    return undefined;\n  }\n\n  var intersection = scaleToGeodeticSurfaceIntersection;\n  intersection.copy(cartesian).scale(ratio);\n\n  if (squaredNorm < centerToleranceSquared) {\n    return intersection.to(result);\n  }\n\n  var oneOverRadiiSquaredX = oneOverRadiiSquared.x;\n  var oneOverRadiiSquaredY = oneOverRadiiSquared.y;\n  var oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\n  var gradient = scaleToGeodeticSurfaceGradient;\n  gradient.set(intersection.x * oneOverRadiiSquaredX * 2.0, intersection.y * oneOverRadiiSquaredY * 2.0, intersection.z * oneOverRadiiSquaredZ * 2.0);\n  var lambda = (1.0 - ratio) * cartesian.len() / (0.5 * gradient.len());\n  var correction = 0.0;\n  var xMultiplier;\n  var yMultiplier;\n  var zMultiplier;\n  var func;\n\n  do {\n    lambda -= correction;\n    xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\n    yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\n    zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\n    var xMultiplier2 = xMultiplier * xMultiplier;\n    var yMultiplier2 = yMultiplier * yMultiplier;\n    var zMultiplier2 = zMultiplier * zMultiplier;\n    var xMultiplier3 = xMultiplier2 * xMultiplier;\n    var yMultiplier3 = yMultiplier2 * yMultiplier;\n    var zMultiplier3 = zMultiplier2 * zMultiplier;\n    func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\n    var denominator = x2 * xMultiplier3 * oneOverRadiiSquaredX + y2 * yMultiplier3 * oneOverRadiiSquaredY + z2 * zMultiplier3 * oneOverRadiiSquaredZ;\n    var derivative = -2.0 * denominator;\n    correction = func / derivative;\n  } while (Math.abs(func) > _core._MathUtils.EPSILON12);\n\n  return scratchVector.scale([xMultiplier, yMultiplier, zMultiplier]).to(result);\n}\n//# sourceMappingURL=scale-to-geodetic-surface.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireWildcard","Object","defineProperty","value","scaleToGeodeticSurface","cartesian","ellipsoid","result","arguments","length","undefined","_core","Vector3","oneOverRadii","oneOverRadiiSquared","centerToleranceSquared","scratchVector","from","positionX","x","positionY","y","positionZ","z","oneOverRadiiX","oneOverRadiiY","oneOverRadiiZ","x2","y2","z2","squaredNorm","ratio","Math","sqrt","Number","isFinite","intersection","scaleToGeodeticSurfaceIntersection","copy","scale","to","oneOverRadiiSquaredX","oneOverRadiiSquaredY","oneOverRadiiSquaredZ","gradient","scaleToGeodeticSurfaceGradient","set","lambda","len","correction","xMultiplier","yMultiplier","zMultiplier","xMultiplier2","yMultiplier2","zMultiplier2","xMultiplier3","yMultiplier3","zMultiplier3","func","abs","_MathUtils","EPSILON12"]
}
