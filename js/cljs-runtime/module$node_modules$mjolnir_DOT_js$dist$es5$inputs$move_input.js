shadow$provide.module$node_modules$mjolnir_DOT_js$dist$es5$inputs$move_input=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),MOUSE_EVENTS=require("module$node_modules$mjolnir_DOT_js$dist$es5$constants").INPUT_EVENT_TYPES.MOUSE_EVENTS;
require=function(){function MoveInput(element,callback){var _this=this,options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};(0,_classCallCheck2["default"])(this,MoveInput);this.element=element;this.callback=callback;this.pressed=!1;this.options=Object.assign({enable:!0},options);this.enableOverEvent=this.enableOutEvent=this.enableLeaveEvent=this.enableMoveEvent=this.options.enable;this.events=MOUSE_EVENTS.concat(options.events||[]);this.handleEvent=this.handleEvent.bind(this);this.events.forEach(function(event){return element.addEventListener(event,
_this.handleEvent)})}(0,_createClass2["default"])(MoveInput,[{key:"destroy",value:function(){var _this2=this;this.events.forEach(function(event){return _this2.element.removeEventListener(event,_this2.handleEvent)})}},{key:"enableEventType",value:function(eventType,enabled){"pointermove"===eventType&&(this.enableMoveEvent=enabled);"pointerover"===eventType&&(this.enableOverEvent=enabled);"pointerout"===eventType&&(this.enableOutEvent=enabled);"pointerleave"===eventType&&(this.enableLeaveEvent=enabled)}},
{key:"handleEvent",value:function(event){this.handleOverEvent(event);this.handleOutEvent(event);this.handleLeaveEvent(event);this.handleMoveEvent(event)}},{key:"handleOverEvent",value:function(event){this.enableOverEvent&&"mouseover"===event.type&&this.callback({type:"pointerover",srcEvent:event,pointerType:"mouse",target:event.target})}},{key:"handleOutEvent",value:function(event){this.enableOutEvent&&"mouseout"===event.type&&this.callback({type:"pointerout",srcEvent:event,pointerType:"mouse",target:event.target})}},
{key:"handleLeaveEvent",value:function(event){this.enableLeaveEvent&&"mouseleave"===event.type&&this.callback({type:"pointerleave",srcEvent:event,pointerType:"mouse",target:event.target})}},{key:"handleMoveEvent",value:function(event){if(this.enableMoveEvent)switch(event.type){case "mousedown":0<=event.button&&(this.pressed=!0);break;case "mousemove":0===event.which&&(this.pressed=!1);this.pressed||this.callback({type:"pointermove",srcEvent:event,pointerType:"mouse",target:event.target});break;case "mouseup":this.pressed=
!1}}}]);return MoveInput}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$mjolnir_DOT_js$dist$es5$inputs$move_input.js.map
