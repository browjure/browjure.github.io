{
"version":3,
"file":"module$node_modules$$math_DOT_gl$polygon$dist$es5$lineclip.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@math_DOT_gl/polygon/dist/es5/lineclip.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$math_DOT_gl$polygon$dist$es5$lineclip\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clipPolyline = clipPolyline;\nexports.clipPolygon = clipPolygon;\nexports.intersect = intersect;\nexports.bitCode = bitCode;\n\nvar _utils = require(\"./utils\");\n\nfunction clipPolyline(positions, bbox) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$size = options.size,\n      size = _options$size === void 0 ? 2 : _options$size,\n      _options$startIndex = options.startIndex,\n      startIndex = _options$startIndex === void 0 ? 0 : _options$startIndex,\n      _options$endIndex = options.endIndex,\n      endIndex = _options$endIndex === void 0 ? positions.length : _options$endIndex;\n  var numPoints = (endIndex - startIndex) / size;\n  var result = [];\n  var part = [];\n  var a;\n  var b;\n  var codeA = -1;\n  var codeB;\n  var lastCode;\n\n  for (var i = 1; i < numPoints; i++) {\n    a = (0, _utils.getPointAtIndex)(positions, i - 1, size, startIndex, a);\n    b = (0, _utils.getPointAtIndex)(positions, i, size, startIndex, b);\n\n    if (codeA < 0) {\n      codeA = bitCode(a, bbox);\n    }\n\n    codeB = lastCode = bitCode(b, bbox);\n\n    while (true) {\n      if (!(codeA | codeB)) {\n        (0, _utils.push)(part, a);\n\n        if (codeB !== lastCode) {\n          (0, _utils.push)(part, b);\n\n          if (i < numPoints - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === numPoints - 1) {\n          (0, _utils.push)(part, b);\n        }\n\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        intersect(a, b, codeA, bbox, a);\n        codeA = bitCode(a, bbox);\n      } else {\n        intersect(a, b, codeB, bbox, b);\n        codeB = bitCode(b, bbox);\n      }\n    }\n\n    codeA = lastCode;\n  }\n\n  if (part.length) result.push(part);\n  return result;\n}\n\nfunction clipPolygon(positions, bbox) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$size2 = options.size,\n      size = _options$size2 === void 0 ? 2 : _options$size2,\n      _options$endIndex2 = options.endIndex,\n      endIndex = _options$endIndex2 === void 0 ? positions.length : _options$endIndex2;\n  var _options$startIndex2 = options.startIndex,\n      startIndex = _options$startIndex2 === void 0 ? 0 : _options$startIndex2;\n  var numPoints = (endIndex - startIndex) / size;\n  var result;\n  var p;\n  var prev;\n  var inside;\n  var prevInside;\n\n  for (var edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = (0, _utils.getPointAtIndex)(positions, numPoints - 1, size, startIndex, prev);\n    prevInside = !(bitCode(prev, bbox) & edge);\n\n    for (var i = 0; i < numPoints; i++) {\n      p = (0, _utils.getPointAtIndex)(positions, i, size, startIndex, p);\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) (0, _utils.push)(result, intersect(prev, p, edge, bbox));\n      if (inside) (0, _utils.push)(result, p);\n      (0, _utils.copy)(prev, p);\n      prevInside = inside;\n    }\n\n    positions = result;\n    startIndex = 0;\n    numPoints = result.length / size;\n    if (!numPoints) break;\n  }\n\n  return result;\n}\n\nfunction intersect(a, b, edge, bbox) {\n  var out = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var t;\n  var snap;\n\n  if (edge & 8) {\n    t = (bbox[3] - a[1]) / (b[1] - a[1]);\n    snap = 3;\n  } else if (edge & 4) {\n    t = (bbox[1] - a[1]) / (b[1] - a[1]);\n    snap = 1;\n  } else if (edge & 2) {\n    t = (bbox[2] - a[0]) / (b[0] - a[0]);\n    snap = 2;\n  } else if (edge & 1) {\n    t = (bbox[0] - a[0]) / (b[0] - a[0]);\n    snap = 0;\n  } else {\n    return null;\n  }\n\n  for (var i = 0; i < a.length; i++) {\n    out[i] = (snap & 1) === i ? bbox[snap] : t * (b[i] - a[i]) + a[i];\n  }\n\n  return out;\n}\n\nfunction bitCode(p, bbox) {\n  var code = 0;\n  if (p[0] < bbox[0]) code |= 1;else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n//# sourceMappingURL=lineclip.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","intersect","a","b","edge","bbox","out","arguments","length","undefined","t","snap","i","bitCode","p","code","Object","defineProperty","value","clipPolyline","positions","options","_options$size","size","_options$startIndex","startIndex","_options$endIndex","endIndex","numPoints","result","part","codeA","codeB","lastCode","_utils","getPointAtIndex","push","clipPolygon","_options$size2","_options$endIndex2","_options$startIndex2","prev","inside","prevInside","copy"]
}
