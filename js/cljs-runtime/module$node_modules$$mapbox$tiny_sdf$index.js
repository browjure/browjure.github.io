shadow$provide.module$node_modules$$mapbox$tiny_sdf$index=function(global,require,module,exports){function TinySDF(fontSize,buffer,radius,cutoff,fontFamily,fontWeight){this.fontSize=fontSize||24;this.buffer=void 0===buffer?3:buffer;this.cutoff=cutoff||.25;this.fontFamily=fontFamily||"sans-serif";this.fontWeight=fontWeight||"normal";this.radius=radius||8;fontSize=this.size=this.fontSize+2*this.buffer;buffer=fontSize+2*this.buffer;this.canvas=document.createElement("canvas");this.canvas.width=this.canvas.height=
fontSize;this.ctx=this.canvas.getContext("2d");this.ctx.font=this.fontWeight+" "+this.fontSize+"px "+this.fontFamily;this.ctx.textAlign="left";this.ctx.fillStyle="black";this.gridOuter=new Float64Array(buffer*buffer);this.gridInner=new Float64Array(buffer*buffer);this.f=new Float64Array(buffer);this.z=new Float64Array(buffer+1);this.v=new Uint16Array(buffer);this.useMetrics=void 0!==this.ctx.measureText("A").actualBoundingBoxLeft;this.middle=Math.round(fontSize/2*(0<=navigator.userAgent.indexOf("Gecko/")?
1.2:1))}function edt(data,width,height,f,v,z){for(var x=0;x<width;x++)edt1d(data,x,width,height,f,v,z);for(x=0;x<height;x++)edt1d(data,x*width,1,width,f,v,z)}function edt1d(grid,offset,stride,length,f,v,z){var q,k;v[0]=0;z[0]=-1E20;z[1]=1E20;for(q=0;q<length;q++)f[q]=grid[offset+q*stride];q=1;for(k=0;q<length;q++){do{var s=v[k];s=(f[q]-f[s]+q*q-s*s)/(q-s)/2}while(s<=z[k]&&-1<--k);k++;v[k]=q;z[k]=s;z[k+1]=1E20}for(k=q=0;q<length;q++){for(;z[k+1]<q;)k++;s=v[k];grid[offset+q*stride]=f[s]+(q-s)*(q-s)}}
module.exports=TinySDF;module.exports.default=TinySDF;TinySDF.prototype._draw=function(char,getMetrics){var textMetrics=this.ctx.measureText(char),advance=textMetrics.width,doubleBuffer=2*this.buffer,imgTop;if(getMetrics&&this.useMetrics){var top=Math.floor(textMetrics.actualBoundingBoxAscent);var baselinePosition=this.buffer+Math.ceil(textMetrics.actualBoundingBoxAscent);var imgLeft=imgTop=this.buffer;getMetrics=Math.min(this.size,Math.ceil(textMetrics.actualBoundingBoxRight-textMetrics.actualBoundingBoxLeft));
var glyphHeight=Math.min(this.size-imgTop,Math.ceil(textMetrics.actualBoundingBoxAscent+textMetrics.actualBoundingBoxDescent));textMetrics=getMetrics+doubleBuffer;doubleBuffer=glyphHeight+doubleBuffer;this.ctx.textBaseline="alphabetic"}else doubleBuffer=glyphHeight=textMetrics=getMetrics=this.size,top=19*this.fontSize/24,imgTop=imgLeft=0,baselinePosition=this.middle,this.ctx.textBaseline="middle";if(getMetrics&&glyphHeight){this.ctx.clearRect(imgLeft,imgTop,getMetrics,glyphHeight);this.ctx.fillText(char,
this.buffer,baselinePosition);var imgData=this.ctx.getImageData(imgLeft,imgTop,getMetrics,glyphHeight)}char=new Uint8ClampedArray(textMetrics*doubleBuffer);imgTop=textMetrics;var height=doubleBuffer;imgLeft=getMetrics;baselinePosition=glyphHeight;var gridOuter=this.gridOuter,gridInner=this.gridInner;gridOuter.fill(1E20,0,imgTop*height);gridInner.fill(0,0,imgTop*height);height=(imgTop-imgLeft)/2;for(var y=0;y<baselinePosition;y++)for(var x=0;x<imgLeft;x++){var j=(y+height)*imgTop+x+height,a=imgData.data[4*
(y*imgLeft+x)+3]/255;if(1===a)gridOuter[j]=0,gridInner[j]=1E20;else if(0===a)gridOuter[j]=1E20,gridInner[j]=0;else{var b=Math.max(0,.5-a);a=Math.max(0,a-.5);gridOuter[j]=b*b;gridInner[j]=a*a}}edt(this.gridOuter,textMetrics,doubleBuffer,this.f,this.v,this.z);edt(this.gridInner,textMetrics,doubleBuffer,this.f,this.v,this.z);imgData=textMetrics;imgTop=doubleBuffer;imgLeft=this.gridOuter;baselinePosition=this.gridInner;gridOuter=this.radius;gridInner=this.cutoff;for(height=0;height<imgData*imgTop;height++)char[height]=
Math.round(255-255*((Math.sqrt(imgLeft[height])-Math.sqrt(baselinePosition[height]))/gridOuter+gridInner));return{data:char,metrics:{width:getMetrics,height:glyphHeight,sdfWidth:textMetrics,sdfHeight:doubleBuffer,top,left:0,advance}}};TinySDF.prototype.draw=function(char){return this._draw(char,!1).data};TinySDF.prototype.drawWithMetrics=function(char){return this._draw(char,!0)}}
//# sourceMappingURL=module$node_modules$$mapbox$tiny_sdf$index.js.map
