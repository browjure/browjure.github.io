{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_fun_filters$hexagonalpixelate.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,iGAAf,CAAsH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9JC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,iBAAR,CAA4B,IAAK,EAsBjCJ,QAAA,CAAQI,iBAAR,CARwBA,CACtBC,KAAM,mBADgBD,CAEtBE,SAdaA,CACbC,OAAQ,CACNJ,MAAO,CAAC,EAAD,CAAM,EAAN,CADD,CAENK,KAAM,aAFA,CADKF,CAKbG,MAAO,CACLN,MAAO,EADF,CAELO,IAAK,CAFA,CAGLC,QAAS,CAHJ,CAILC,QAAS,EAJJ,CALMN,CAYSF,CAGtBS,GAhBOA,8pCAaeT;AAItBU,OAAQ,CAAC,CACPC,QAAS,CAAA,CADF,CAAD,CAJcX,CApBsI;",
"sources":["node_modules/@luma_DOT_gl/shadertools/dist/es5/modules/image-fun-filters/hexagonalpixelate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_fun_filters$hexagonalpixelate\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexagonalPixelate = void 0;\nvar fs = \"uniform vec2 center;\\nuniform float scale;\\n\\nvec4 hexagonalPixelate_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\\n  vec2 tex = (texCoord * texSize - center * texSize) / scale;\\n  tex.y /= 0.866025404;\\n  tex.x -= tex.y * 0.5;\\n\\n  vec2 a;\\n  if (tex.x + tex.y - floor(tex.x) - floor(tex.y) < 1.0) {\\n    a = vec2(floor(tex.x), floor(tex.y));\\n  }\\n  else a = vec2(ceil(tex.x), ceil(tex.y));\\n  vec2 b = vec2(ceil(tex.x), floor(tex.y));\\n  vec2 c = vec2(floor(tex.x), ceil(tex.y));\\n\\n  vec3 TEX = vec3(tex.x, tex.y, 1.0 - tex.x - tex.y);\\n  vec3 A = vec3(a.x, a.y, 1.0 - a.x - a.y);\\n  vec3 B = vec3(b.x, b.y, 1.0 - b.x - b.y);\\n  vec3 C = vec3(c.x, c.y, 1.0 - c.x - c.y);\\n\\n  float alen = length(TEX - A);\\n  float blen = length(TEX - B);\\n  float clen = length(TEX - C);\\n\\n  vec2 choice;\\n  if (alen < blen) {\\n    if (alen < clen) choice = a;\\n    else choice = c;\\n  } else {\\n    if (blen < clen) choice = b;\\n    else choice = c;\\n  }\\n\\n  choice.x += choice.y * 0.5;\\n  choice.y *= 0.866025404;\\n  choice *= scale / texSize;\\n\\n  return texture2D(texture, choice + center);\\n}\\n\";\nvar uniforms = {\n  center: {\n    value: [0.5, 0.5],\n    hint: 'screenspace'\n  },\n  scale: {\n    value: 10,\n    min: 1,\n    softMin: 5,\n    softMax: 50\n  }\n};\nvar hexagonalPixelate = {\n  name: 'hexagonalPixelate',\n  uniforms: uniforms,\n  fs: fs,\n  passes: [{\n    sampler: true\n  }]\n};\nexports.hexagonalPixelate = hexagonalPixelate;\n//# sourceMappingURL=hexagonalpixelate.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","hexagonalPixelate","name","uniforms","center","hint","scale","min","softMin","softMax","fs","passes","sampler"]
}
