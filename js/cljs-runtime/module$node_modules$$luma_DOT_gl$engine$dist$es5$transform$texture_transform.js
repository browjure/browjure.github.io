shadow$provide.module$node_modules$$luma_DOT_gl$engine$dist$es5$transform$texture_transform=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_webgl=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$index"),_shadertools=require("module$node_modules$$luma_DOT_gl$shadertools$dist$es5$index"),_transformShaderUtils=require("module$node_modules$$luma_DOT_gl$engine$dist$es5$transform$transform_shader_utils"),_SRC_TEX_PARAMETER_OV,SRC_TEX_PARAMETER_OVERRIDES=(_SRC_TEX_PARAMETER_OV={},(0,_defineProperty2["default"])(_SRC_TEX_PARAMETER_OV,10241,9728),(0,_defineProperty2["default"])(_SRC_TEX_PARAMETER_OV,10240,9728),(0,_defineProperty2["default"])(_SRC_TEX_PARAMETER_OV,
10242,33071),(0,_defineProperty2["default"])(_SRC_TEX_PARAMETER_OV,10243,33071),_SRC_TEX_PARAMETER_OV);require=function(){function TextureTransform(gl){var props=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};(0,_classCallCheck2["default"])(this,TextureTransform);this.gl=gl;this.id=this.currentIndex=0;this.samplerTextureMap=this.targetTextureType=this.targetTextureVarying=this._swapTexture=null;this.bindings=[];this.resources={};this._initialize(props);Object.seal(this)}(0,_createClass2["default"])(TextureTransform,
[{key:"updateModelProps",value:function(){var props=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},updatedModelProps=this._processVertexShader(props);return Object.assign({},props,updatedModelProps)}},{key:"getDrawOptions",value:function(){var opts=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_this$bindings$this$c=this.bindings[this.currentIndex],sourceTextures=_this$bindings$this$c.sourceTextures,framebuffer=_this$bindings$this$c.framebuffer,targetTexture=_this$bindings$this$c.targetTexture;
_this$bindings$this$c=Object.assign({},_this$bindings$this$c.sourceBuffers,opts.attributes);var uniforms=Object.assign({},opts.uniforms),parameters=Object.assign({},opts.parameters);opts=opts.discard;if(this.hasSourceTextures||this.hasTargetTexture){_this$bindings$this$c.transform_elementID=this.elementIDBuffer;for(var sampler in this.samplerTextureMap)uniforms[sampler]=sourceTextures[this.samplerTextureMap[sampler]];this._setSourceTextureParameters();sourceTextures=(0,_transformShaderUtils.getSizeUniforms)({sourceTextureMap:sourceTextures,
targetTextureVarying:this.targetTextureVarying,targetTexture});Object.assign(uniforms,sourceTextures)}this.hasTargetTexture&&(opts=!1,parameters.viewport=[0,0,framebuffer.width,framebuffer.height]);return{attributes:_this$bindings$this$c,framebuffer,uniforms,discard:opts,parameters}}},{key:"swap",value:function(){return this._swapTexture?(this.currentIndex=this._getNextIndex(),!0):!1}},{key:"update",value:function(){this._setupTextures(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{})}},
{key:"getTargetTexture",value:function(){return this.bindings[this.currentIndex].targetTexture}},{key:"getData",value:function(){var _ref$packed=(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{}).packed,packed=void 0===_ref$packed?!1:_ref$packed;_ref$packed=this.bindings[this.currentIndex].framebuffer;_ref$packed=(0,_webgl.readPixelsToArray)(_ref$packed);if(!packed)return _ref$packed;var ArrayType=_ref$packed.constructor;packed=(0,_shadertools.typeToChannelCount)(this.targetTextureType);
ArrayType=new ArrayType(_ref$packed.length*packed/4);for(var packCount=0,i=0;i<_ref$packed.length;i+=4)for(var j=0;j<packed;j++)ArrayType[packCount++]=_ref$packed[i+j];return ArrayType}},{key:"getFramebuffer",value:function(){return this.bindings[this.currentIndex].framebuffer}},{key:"delete",value:function(){if(this.ownTexture)this.ownTexture["delete"]();if(this.elementIDBuffer)this.elementIDBuffer["delete"]()}},{key:"_initialize",value:function(){var props=0<arguments.length&&void 0!==arguments[0]?
arguments[0]:{},_targetTextureVarying=props._targetTextureVarying;this._swapTexture=props._swapTexture;this.hasTargetTexture=this.targetTextureVarying=_targetTextureVarying;this._setupTextures(props)}},{key:"_createTargetTexture",value:function(props){var textureOrReference=props.textureOrReference;if(textureOrReference instanceof _webgl.Texture2D)return textureOrReference;props=props.sourceTextures[textureOrReference];if(!props)return null;this._targetRefTexName=textureOrReference;return this._createNewTexture(props)}},
{key:"_setupTextures",value:function(){var props=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},sourceBuffers=props.sourceBuffers,_props$_sourceTexture=props._sourceTextures;_props$_sourceTexture=void 0===_props$_sourceTexture?{}:_props$_sourceTexture;var targetTexture=this._createTargetTexture({sourceTextures:_props$_sourceTexture,textureOrReference:props._targetTexture});this.hasSourceTextures=this.hasSourceTextures||_props$_sourceTexture&&0<Object.keys(_props$_sourceTexture).length;
this._updateBindings({sourceBuffers,sourceTextures:_props$_sourceTexture,targetTexture});"elementCount"in props&&this._updateElementIDBuffer(props.elementCount)}},{key:"_updateElementIDBuffer",value:function(elementCount){if(!("number"!==typeof elementCount||this.elementCount>=elementCount)){var elementIds=new Float32Array(elementCount);elementIds.forEach(function(_,index,array){array[index]=index});this.elementIDBuffer?this.elementIDBuffer.setData({data:elementIds}):this.elementIDBuffer=new _webgl.Buffer(this.gl,
{data:elementIds,accessor:{size:1}});this.elementCount=elementCount}}},{key:"_updateBindings",value:function(opts){this.bindings[this.currentIndex]=this._updateBinding(this.bindings[this.currentIndex],opts);if(this._swapTexture){var _this$_swapTextures=this._swapTextures(this.bindings[this.currentIndex]);opts=_this$_swapTextures.sourceTextures;_this$_swapTextures=_this$_swapTextures.targetTexture;var nextIndex=this._getNextIndex();this.bindings[nextIndex]=this._updateBinding(this.bindings[nextIndex],
{sourceTextures:opts,targetTexture:_this$_swapTextures})}}},{key:"_updateBinding",value:function(binding,opts){var sourceBuffers=opts.sourceBuffers,sourceTextures=opts.sourceTextures;opts=opts.targetTexture;binding||(binding={sourceBuffers:{},sourceTextures:{},targetTexture:null});Object.assign(binding.sourceTextures,sourceTextures);Object.assign(binding.sourceBuffers,sourceBuffers);if(opts){binding.targetTexture=opts;sourceBuffers=opts.width;sourceTextures=opts.height;var framebuffer=binding.framebuffer;
framebuffer?(framebuffer.update({attachments:(0,_defineProperty2["default"])({},36064,opts),resizeAttachments:!1}),framebuffer.resize({width:sourceBuffers,height:sourceTextures})):binding.framebuffer=new _webgl.Framebuffer(this.gl,{id:"transform-framebuffer",width:sourceBuffers,height:sourceTextures,attachments:(0,_defineProperty2["default"])({},36064,opts)})}return binding}},{key:"_setSourceTextureParameters",value:function(){var sourceTextures=this.bindings[this.currentIndex].sourceTextures,name;
for(name in sourceTextures)sourceTextures[name].setParameters(SRC_TEX_PARAMETER_OVERRIDES)}},{key:"_swapTextures",value:function(opts){if(!this._swapTexture)return null;var sourceTextures=Object.assign({},opts.sourceTextures);sourceTextures[this._swapTexture]=opts.targetTexture;return{sourceTextures,targetTexture:opts.sourceTextures[this._swapTexture]}}},{key:"_createNewTexture",value:function(refTexture){var _parameters;refTexture=(0,_webgl.cloneTextureFrom)(refTexture,{parameters:(_parameters={},
(0,_defineProperty2["default"])(_parameters,10241,9728),(0,_defineProperty2["default"])(_parameters,10240,9728),(0,_defineProperty2["default"])(_parameters,10242,33071),(0,_defineProperty2["default"])(_parameters,10243,33071),_parameters),pixelStore:(0,_defineProperty2["default"])({},37440,!1)});if(this.ownTexture)this.ownTexture["delete"]();return this.ownTexture=refTexture}},{key:"_getNextIndex",value:function(){return(this.currentIndex+1)%2}},{key:"_processVertexShader",value:function(){var props=
0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_this$bindings$this$c2=this.bindings[this.currentIndex],sourceTextures=_this$bindings$this$c2.sourceTextures;_this$bindings$this$c2=_this$bindings$this$c2.targetTexture;var _updateForTextures=(0,_transformShaderUtils.updateForTextures)({vs:props.vs,sourceTextureMap:sourceTextures,targetTextureVarying:this.targetTextureVarying,targetTexture:_this$bindings$this$c2});sourceTextures=_updateForTextures.vs;_this$bindings$this$c2=_updateForTextures.uniforms;
var targetTextureType=_updateForTextures.targetTextureType,inject=_updateForTextures.inject;_updateForTextures=_updateForTextures.samplerTextureMap;inject=(0,_shadertools.combineInjects)([props.inject||{},inject]);this.targetTextureType=targetTextureType;this.samplerTextureMap=_updateForTextures;targetTextureType=props._fs||(0,_shadertools.getPassthroughFS)({version:(0,_webgl.getShaderVersion)(sourceTextures),input:this.targetTextureVarying,inputType:targetTextureType,output:"transform_output"});
props=this.hasSourceTextures||this.targetTextureVarying?[_shadertools._transform].concat(props.modules||[]):props.modules;return{vs:sourceTextures,fs:targetTextureType,modules:props,uniforms:_this$bindings$this$c2,inject}}}]);return TextureTransform}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$engine$dist$es5$transform$texture_transform.js.map
