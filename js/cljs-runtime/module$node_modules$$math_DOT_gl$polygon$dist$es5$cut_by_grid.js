shadow$provide.module$node_modules$$math_DOT_gl$polygon$dist$es5$cut_by_grid=function(global,require,module,exports){function concatInPlace(arr1,arr2){for(var i=0;i<arr2.length;i++)arr1.push(arr2[i]);return arr1}function bisectPolygon(positions,edgeTypes,size,startIndex,endIndex,bbox,edge){endIndex=(endIndex-startIndex)/size;for(var resultLow=[],resultHigh=[],typesLow=[],typesHigh=[],scratchPoint=[],p,side,type,prev=(0,_utils.getPointAtIndex)(positions,endIndex-1,size,startIndex),prevSide=Math.sign(edge&
8?prev[1]-bbox[3]:prev[0]-bbox[2]),prevType=edgeTypes&&edgeTypes[endIndex-1],lowPointCount=0,highPointCount=0,i=0;i<endIndex;i++)p=(0,_utils.getPointAtIndex)(positions,i,size,startIndex,p),side=Math.sign(edge&8?p[1]-bbox[3]:p[0]-bbox[2]),type=edgeTypes&&edgeTypes[startIndex/size+i],side&&prevSide&&prevSide!==side&&((0,_lineclip.intersect)(prev,p,edge,bbox,scratchPoint),(0,_utils.push)(resultLow,scratchPoint)&&typesLow.push(prevType),(0,_utils.push)(resultHigh,scratchPoint)&&typesHigh.push(prevType)),
0>=side?((0,_utils.push)(resultLow,p)&&typesLow.push(type),lowPointCount-=side):typesLow.length&&(typesLow[typesLow.length-1]=TYPE_INSIDE),0<=side?((0,_utils.push)(resultHigh,p)&&typesHigh.push(type),highPointCount+=side):typesHigh.length&&(typesHigh[typesHigh.length-1]=TYPE_INSIDE),(0,_utils.copy)(prev,p),prevSide=side,prevType=type;return[lowPointCount?{pos:resultLow,types:edgeTypes&&typesLow}:null,highPointCount?{pos:resultHigh,types:edgeTypes&&typesHigh}:null]}function getGridCell(p,gridResolution,
gridOffset,out){var left=Math.floor((p[0]-gridOffset[0])/gridResolution)*gridResolution+gridOffset[0];p=Math.floor((p[1]-gridOffset[1])/gridResolution)*gridResolution+gridOffset[1];out[0]=left;out[1]=p;out[2]=left+gridResolution;out[3]=p+gridResolution;return out}Object.defineProperty(exports,"__esModule",{value:!0});exports.cutPolylineByGrid=function(positions){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_options$size=options.size;_options$size=void 0===_options$size?2:
_options$size;var _options$broken=options.broken;_options$broken=void 0===_options$broken?!1:_options$broken;var _options$gridResoluti=options.gridResolution;_options$gridResoluti=void 0===_options$gridResoluti?10:_options$gridResoluti;var _options$gridOffset=options.gridOffset,gridOffset=void 0===_options$gridOffset?[0,0]:_options$gridOffset;_options$gridOffset=options.startIndex;_options$gridOffset=void 0===_options$gridOffset?0:_options$gridOffset;options=options.endIndex;options=((void 0===options?
positions.length:options)-_options$gridOffset)/_options$size;var part=[],result=[part],a=(0,_utils.getPointAtIndex)(positions,0,_options$size,_options$gridOffset),codeB;gridOffset=getGridCell(a,_options$gridResoluti,gridOffset,[]);var scratchPoint=[];(0,_utils.push)(part,a);for(var i=1;i<options;i++){var b=(0,_utils.getPointAtIndex)(positions,i,_options$size,_options$gridOffset,b);for(codeB=(0,_lineclip.bitCode)(b,gridOffset);codeB;){(0,_lineclip.intersect)(a,b,codeB,gridOffset,scratchPoint);var codeAlt=
(0,_lineclip.bitCode)(scratchPoint,gridOffset);codeAlt&&((0,_lineclip.intersect)(a,scratchPoint,codeAlt,gridOffset,scratchPoint),codeB=codeAlt);(0,_utils.push)(part,scratchPoint);(0,_utils.copy)(a,scratchPoint);codeAlt=gridOffset;var gridResolution=_options$gridResoluti;codeB&8?(codeAlt[1]+=gridResolution,codeAlt[3]+=gridResolution):codeB&4?(codeAlt[1]-=gridResolution,codeAlt[3]-=gridResolution):codeB&2?(codeAlt[0]+=gridResolution,codeAlt[2]+=gridResolution):codeB&1&&(codeAlt[0]-=gridResolution,codeAlt[2]-=
gridResolution);_options$broken&&part.length>_options$size&&(part=[],result.push(part),(0,_utils.push)(part,a));codeB=(0,_lineclip.bitCode)(b,gridOffset)}(0,_utils.push)(part,b);(0,_utils.copy)(a,b)}return _options$broken?result:result[0]};exports.cutPolygonByGrid=function(positions,holeIndices){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};if(!positions.length)return[];var _options$size2=options.size;_options$size2=void 0===_options$size2?2:_options$size2;var _options$gridResoluti2=
options.gridResolution;_options$gridResoluti2=void 0===_options$gridResoluti2?10:_options$gridResoluti2;var _options$gridOffset2=options.gridOffset;_options$gridOffset2=void 0===_options$gridOffset2?[0,0]:_options$gridOffset2;options=options.edgeTypes;options=void 0===options?!1:options;for(var result=[],queue=[{pos:positions,types:options&&Array(positions.length/_options$size2).fill(TYPE_BORDER),holes:holeIndices||[]}],bbox=[[],[]],cell=[];queue.length;){var _queue$shift=queue.shift(),pos=_queue$shift.pos,
types=_queue$shift.types;_queue$shift=_queue$shift.holes;for(var out=bbox,minX=Infinity,maxX=-Infinity,minY=Infinity,maxY=-Infinity,i=0;i<(_queue$shift[0]||pos.length);i+=_options$size2){var x=pos[i],y=pos[i+1];minX=x<minX?x:minX;maxX=x>maxX?x:maxX;minY=y<minY?y:minY;maxY=y>maxY?y:maxY}out[0][0]=minX;out[0][1]=minY;out[1][0]=maxX;out[1][1]=maxY;cell=getGridCell(bbox[0],_options$gridResoluti2,_options$gridOffset2,cell);if(out=(0,_lineclip.bitCode)(bbox[1],cell))for(minX=bisectPolygon(pos,types,_options$size2,
0,_queue$shift[0]||pos.length,cell,out),maxX={pos:minX[0].pos,types:minX[0].types,holes:[]},minY={pos:minX[1].pos,types:minX[1].types,holes:[]},queue.push(maxX,minY),maxY=0;maxY<_queue$shift.length;maxY++)minX=bisectPolygon(pos,types,_options$size2,_queue$shift[maxY],_queue$shift[maxY+1]||pos.length,cell,out),minX[0]&&(maxX.holes.push(maxX.pos.length),maxX.pos=concatInPlace(maxX.pos,minX[0].pos),options&&(maxX.types=concatInPlace(maxX.types,minX[0].types))),minX[1]&&(minY.holes.push(minY.pos.length),
minY.pos=concatInPlace(minY.pos,minX[1].pos),options&&(minY.types=concatInPlace(minY.types,minX[1].types)));else pos={positions:pos},options&&(pos.edgeTypes=types),_queue$shift.length&&(pos.holeIndices=_queue$shift),result.push(pos)}return result};var _lineclip=require("module$node_modules$$math_DOT_gl$polygon$dist$es5$lineclip"),_utils=require("module$node_modules$$math_DOT_gl$polygon$dist$es5$utils"),TYPE_INSIDE=0,TYPE_BORDER=1}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$polygon$dist$es5$cut_by_grid.js.map
