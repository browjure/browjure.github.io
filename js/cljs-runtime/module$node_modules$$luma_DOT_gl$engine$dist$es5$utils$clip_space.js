shadow$provide.module$node_modules$$luma_DOT_gl$engine$dist$es5$utils$clip_space=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),
_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf"));module=global(require("module$node_modules$$luma_DOT_gl$engine$dist$es5$lib$model"));var _geometry=global(require("module$node_modules$$luma_DOT_gl$engine$dist$es5$geometry$geometry")),POSITIONS=[-1,-1,1,-1,-1,
1,1,1];require=function(_Model){function ClipSpace(gl,opts){(0,_classCallCheck2["default"])(this,ClipSpace);var TEX_COORDS=POSITIONS.map(function(coord){return-1===coord?0:coord});gl=_super.call(this,gl,Object.assign({},opts,{vs:"attribute vec2 aClipSpacePosition;\nattribute vec2 aTexCoord;\nattribute vec2 aCoordinate;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main(void) {\n  gl_Position \x3d vec4(aClipSpacePosition, 0., 1.);\n  position \x3d aClipSpacePosition;\n  coordinate \x3d aCoordinate;\n  uv \x3d aTexCoord;\n}\n",
geometry:new _geometry["default"]({drawMode:5,vertexCount:4,attributes:{aClipSpacePosition:{size:2,value:new Float32Array(POSITIONS)},aTexCoord:{size:2,value:new Float32Array(TEX_COORDS)},aCoordinate:{size:2,value:new Float32Array(TEX_COORDS)}}})}));gl.setVertexCount(4);return gl}(0,_inherits2["default"])(ClipSpace,_Model);var _super=_createSuper(ClipSpace);return ClipSpace}(module["default"]);exports["default"]=require}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$engine$dist$es5$utils$clip_space.js.map
