{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_gltf_view.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/3d-tiles/dist/es5/lib/parsers/helpers/parse-3d-tile-gltf-view.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$parsers$helpers$parse_3d_tile_gltf_view\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse3DTileGLTFViewSync = parse3DTileGLTFViewSync;\nexports.extractGLTF = extractGLTF;\nexports.GLTF_FORMAT = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _gltf = require(\"@loaders.gl/gltf\");\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nvar GLTF_FORMAT = {\n  URI: 0,\n  EMBEDDED: 1\n};\nexports.GLTF_FORMAT = GLTF_FORMAT;\n\nfunction parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options) {\n  tile.rotateYtoZ = true;\n  var gltfByteLength = tile.byteOffset + tile.byteLength - byteOffset;\n\n  if (gltfByteLength === 0) {\n    throw new Error('glTF byte length must be greater than 0.');\n  }\n\n  tile.gltfUpAxis = options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis ? options['3d-tiles'].assetGltfUpAxis : 'Y';\n  tile.gltfArrayBuffer = (0, _loaderUtils.getZeroOffsetArrayBuffer)(arrayBuffer, byteOffset, gltfByteLength);\n  tile.gltfByteOffset = 0;\n  tile.gltfByteLength = gltfByteLength;\n\n  if (byteOffset % 4 === 0) {} else {\n    console.warn(\"\".concat(tile.type, \": embedded glb is not aligned to a 4-byte boundary.\"));\n  }\n\n  return tile.byteOffset + tile.byteLength;\n}\n\nfunction extractGLTF(_x, _x2, _x3, _x4) {\n  return _extractGLTF.apply(this, arguments);\n}\n\nfunction _extractGLTF() {\n  _extractGLTF = (0, _asyncToGenerator2[\"default\"])(_regenerator[\"default\"].mark(function _callee(tile, gltfFormat, options, context) {\n    var tile3DOptions, parse, fetch;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tile3DOptions = options['3d-tiles'] || {};\n            extractGLTFBufferOrURL(tile, gltfFormat, options);\n\n            if (!tile3DOptions.loadGLTF) {\n              _context.next = 16;\n              break;\n            }\n\n            parse = context.parse, fetch = context.fetch;\n\n            if (!tile.gltfUrl) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return fetch(tile.gltfUrl, options);\n\n          case 7:\n            tile.gltfArrayBuffer = _context.sent;\n            tile.gltfByteOffset = 0;\n\n          case 9:\n            if (!tile.gltfArrayBuffer) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 12;\n            return parse(tile.gltfArrayBuffer, _gltf.GLTFLoader, options, context);\n\n          case 12:\n            tile.gltf = _context.sent;\n            delete tile.gltfArrayBuffer;\n            delete tile.gltfByteOffset;\n            delete tile.gltfByteLength;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _extractGLTF.apply(this, arguments);\n}\n\nfunction extractGLTFBufferOrURL(tile, gltfFormat, options) {\n  switch (gltfFormat) {\n    case GLTF_FORMAT.URI:\n      var gltfUrlBytes = new Uint8Array(tile.gltfArrayBuffer, tile.gltfByteOffset);\n      var textDecoder = new TextDecoder();\n      var gltfUrl = textDecoder.decode(gltfUrlBytes);\n      tile.gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, '');\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n      break;\n\n    case GLTF_FORMAT.EMBEDDED:\n      break;\n\n    default:\n      throw new Error(\"b3dm: Illegal glTF format field\");\n  }\n}\n//# sourceMappingURL=parse-3d-tile-gltf-view.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_extractGLTF","_asyncToGenerator2","_regenerator","mark","_callee","tile","gltfFormat","options","context","tile3DOptions","parse","fetch","wrap","_callee$","_context","prev","next","GLTF_FORMAT","URI","gltfUrlBytes","Uint8Array","gltfArrayBuffer","gltfByteOffset","gltfUrl","textDecoder","TextDecoder","decode","replace","gltfByteLength","EMBEDDED","Error","loadGLTF","sent","_gltf","GLTFLoader","gltf","stop","apply","arguments","_interopRequireDefault","Object","defineProperty","value","parse3DTileGLTFViewSync","arrayBuffer","byteOffset","rotateYtoZ","byteLength","gltfUpAxis","assetGltfUpAxis","_loaderUtils","getZeroOffsetArrayBuffer","console","warn","concat","type","extractGLTF","_x","_x2","_x3","_x4"]
}
