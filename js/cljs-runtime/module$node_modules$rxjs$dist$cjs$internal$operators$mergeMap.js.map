{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$mergeMap.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,6DAAf,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAS1HC,QAASA,SAAQ,CAACC,OAAD,CAAUC,cAAV,CAA0BC,UAA1B,CAAsC,CAChC,IAAK,EAAxB,GAAIA,UAAJ,GAA6BA,UAA7B,CAA0CC,QAA1C,CACA,IAAIC,YAAA,CAAaC,UAAb,CAAwBJ,cAAxB,CAAJ,CACI,MAAOF,SAAA,CAAS,QAAS,CAACO,CAAD,CAAIC,CAAJ,CAAO,CAAE,MAAOC,MAAA,CAAMC,GAAN,CAAU,QAAS,CAACC,CAAD,CAAIC,EAAJ,CAAQ,CAAE,MAAOV,eAAA,CAAeK,CAAf,CAAkBI,CAAlB,CAAqBH,CAArB,CAAwBI,EAAxB,CAAT,CAA3B,CAAA,CAAoEC,MAAA,CAAOC,SAAP,CAAiBb,OAAA,CAAQM,CAAR,CAAWC,CAAX,CAAjB,CAApE,CAAT,CAAzB,CAA2IL,UAA3I,CAEwB,SAA9B,GAAI,MAAOD,eAAX,GACDC,UADC,CACYD,cADZ,CAGL,OAAOa,OAAA,CAAOC,OAAP,CAAe,QAAS,CAACC,MAAD,CAASC,UAAT,CAAqB,CAAE,MAAOC,iBAAA,CAAiBC,cAAjB,CAAgCH,MAAhC;AAAwCC,UAAxC,CAAoDjB,OAApD,CAA6DE,UAA7D,CAAT,CAA7C,CAR4C,CAPvDkB,MAAA,CAAOC,cAAP,CAAsBvB,OAAtB,CAA+B,YAA/B,CAA6C,CAAEwB,MAAO,CAAA,CAAT,CAA7C,CACAxB,QAAA,CAAQyB,OAAR,CAAkBzB,OAAlB,CAA0BC,QAA1B,CAAqC,IAAK,EAC1C,KAAIS,MAAQZ,OAAA,CAAQ,0DAAR,CAAZ,CACIgB,OAAShB,OAAA,CAAQ,4DAAR,CADb,CAEIkB,OAASlB,OAAA,CAAQ,sDAAR,CAFb,CAGIsB,iBAAmBtB,OAAA,CAAQ,qEAAR,CAHvB,CAIIQ,aAAeR,OAAA,CAAQ,4DAAR,CAWnBE;OAAA,CAAQC,QAAR,CAAmBA,QACnBD,QAAA,CAAQyB,OAAR,CAAkBxB,QApBwG;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/mergeMap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$mergeMap\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flatMap = exports.mergeMap = void 0;\nvar map_1 = require(\"./map\");\nvar from_1 = require(\"../observable/from\");\nvar lift_1 = require(\"../util/lift\");\nvar mergeInternals_1 = require(\"./mergeInternals\");\nvar isFunction_1 = require(\"../util/isFunction\");\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction_1.isFunction(resultSelector)) {\n        return mergeMap(function (a, i) { return map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })(from_1.innerFrom(project(a, i))); }, concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return lift_1.operate(function (source, subscriber) { return mergeInternals_1.mergeInternals(source, subscriber, project, concurrent); });\n}\nexports.mergeMap = mergeMap;\nexports.flatMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","mergeMap","project","resultSelector","concurrent","Infinity","isFunction_1","isFunction","a","i","map_1","map","b","ii","from_1","innerFrom","lift_1","operate","source","subscriber","mergeInternals_1","mergeInternals","Object","defineProperty","value","flatMap"]
}
