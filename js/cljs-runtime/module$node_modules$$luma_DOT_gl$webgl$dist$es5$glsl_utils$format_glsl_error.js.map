{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$webgl$dist$es5$glsl_utils$format_glsl_error.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/webgl/dist/es5/glsl-utils/format-glsl-error.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$webgl$dist$es5$glsl_utils$format_glsl_error\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = formatGLSLCompilerError;\nexports.parseGLSLCompilerError = parseGLSLCompilerError;\n\nvar _getShaderName = _interopRequireDefault(require(\"./get-shader-name\"));\n\nvar _getShaderTypeName = _interopRequireDefault(require(\"./get-shader-type-name\"));\n\nfunction formatGLSLCompilerError(errLog, src, shaderType) {\n  var _parseGLSLCompilerErr = parseGLSLCompilerError(errLog, src, shaderType),\n      shaderName = _parseGLSLCompilerErr.shaderName,\n      errors = _parseGLSLCompilerErr.errors,\n      warnings = _parseGLSLCompilerErr.warnings;\n\n  return \"GLSL compilation error in \".concat(shaderName, \"\\n\\n\").concat(errors, \"\\n\").concat(warnings);\n}\n\nfunction parseGLSLCompilerError(errLog, src, shaderType, shaderName) {\n  var errorStrings = errLog.split(/\\r?\\n/);\n  var errors = {};\n  var warnings = {};\n  var name = shaderName || (0, _getShaderName[\"default\"])(src) || '(unnamed)';\n  var shaderDescription = \"\".concat((0, _getShaderTypeName[\"default\"])(shaderType), \" shader \").concat(name);\n\n  for (var i = 0; i < errorStrings.length; i++) {\n    var errorString = errorStrings[i];\n\n    if (errorString.length <= 1) {\n      continue;\n    }\n\n    var segments = errorString.split(':');\n    var type = segments[0];\n    var line = parseInt(segments[2], 10);\n\n    if (isNaN(line)) {\n      throw new Error(\"GLSL compilation error in \".concat(shaderDescription, \": \").concat(errLog));\n    }\n\n    if (type !== 'WARNING') {\n      errors[line] = errorString;\n    } else {\n      warnings[line] = errorString;\n    }\n  }\n\n  var lines = addLineNumbers(src);\n  return {\n    shaderName: shaderDescription,\n    errors: formatErrors(errors, lines),\n    warnings: formatErrors(warnings, lines)\n  };\n}\n\nfunction formatErrors(errors, lines) {\n  var message = '';\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n\n    if (!errors[i + 3] && !errors[i + 2] && !errors[i + 1]) {\n      continue;\n    }\n\n    message += \"\".concat(line, \"\\n\");\n\n    if (errors[i + 1]) {\n      var error = errors[i + 1];\n      var segments = error.split(':', 3);\n      var type = segments[0];\n      var column = parseInt(segments[1], 10) || 0;\n      var err = error.substring(segments.join(':').length + 1).trim();\n      message += padLeft(\"^^^ \".concat(type, \": \").concat(err, \"\\n\\n\"), column);\n    }\n  }\n\n  return message;\n}\n\nfunction addLineNumbers(string) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var delim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ': ';\n  var lines = string.split(/\\r?\\n/);\n  var maxDigits = String(lines.length + start - 1).length;\n  return lines.map(function (line, i) {\n    var lineNumber = String(i + start);\n    var digits = lineNumber.length;\n    var prefix = padLeft(lineNumber, maxDigits - digits);\n    return prefix + delim + line;\n  });\n}\n\nfunction padLeft(string, digits) {\n  var result = '';\n\n  for (var i = 0; i < digits; ++i) {\n    result += ' ';\n  }\n\n  return \"\".concat(result).concat(string);\n}\n//# sourceMappingURL=format-glsl-error.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","parseGLSLCompilerError","errLog","src","shaderType","shaderName","errorStrings","split","errors","warnings","name","_getShaderName","shaderDescription","concat","_getShaderTypeName","i","length","errorString","segments","type","line","parseInt","isNaN","Error","lines","addLineNumbers","formatErrors","message","error","column","err","substring","join","trim","padLeft","string","start","arguments","undefined","delim","maxDigits","String","map","lineNumber","prefix","digits","result","_interopRequireDefault","Object","defineProperty","value","formatGLSLCompilerError","_parseGLSLCompilerErr"]
}
