shadow$provide.module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$i3s_lod=function(global,require,module,exports){function projectVertexToSphere(_ref){var _ref2=(0,_slicedToArray2["default"])(_ref,3);_ref=_ref2[0];var y=_ref2[1],z=_ref2[2];_ref2=(0,_core.toRadians)(_ref);var incl=(0,_core.toRadians)(y);z=1+z/WGS84_RADIUS_X;y=z*Math.cos(incl);_ref=y*Math.cos(_ref2);y*=Math.sin(_ref2);z*=Math.sin(incl);return[_ref,y,z]}function getDistanceFromLatLon(_ref3,_ref4){var _ref5=(0,_slicedToArray2["default"])(_ref3,
3);_ref3=_ref5[0];var observerLat=_ref5[1];_ref5=_ref5[2];_ref5=void 0===_ref5?0:_ref5;_ref4=(0,_slicedToArray2["default"])(_ref4,3);var _ref6$=_ref4[2];_ref4=projectVertexToSphere([_ref4[0],_ref4[1],void 0===_ref6$?0:_ref6$]);_ref5=projectVertexToSphere([_ref3,observerLat,_ref5]);_ref3=_ref5[0]-_ref4[0];observerLat=_ref5[1]-_ref4[1];_ref4=_ref5[2]-_ref4[2];return _ref3*_ref3+observerLat*observerLat+_ref4*_ref4}function getI3ScreenSize(tile,frameState){var viewport=frameState.viewport,mbsR=tile.header.mbs[3];
tile=[tile.header.mbs[0],tile.header.mbs[1],tile.header.mbs[2]];var cameraPositionCartographic=viewport.unprojectPosition(viewport.cameraPosition);tile=getDistanceFromLatLon(cameraPositionCartographic,tile);mbsR/=WGS84_RADIUS_X;tile-=mbsR*mbsR;if(0>=tile)return.5*3.4028235E38;var _frameState$viewport=frameState.viewport;frameState=_frameState$viewport.width;cameraPositionCartographic=_frameState$viewport.height;_frameState$viewport=_frameState$viewport.pixelProjectionMatrix;frameState=Math.sqrt(cameraPositionCartographic*
cameraPositionCartographic+frameState*frameState)/Math.tan(Math.atan(Math.sqrt(1/(_frameState$viewport[0]*_frameState$viewport[0])+1/(_frameState$viewport[5]*_frameState$viewport[5]))));return frameState*=mbsR/Math.sqrt(tile)/viewport.scale}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.lodJudge=function(tile,frameState){var viewport=frameState.viewport,mbsLat=tile.header.mbs[1],mbsLon=tile.header.mbs[0],
mbsR=tile.header.mbs[3],height=viewport.height,width=viewport.width,latitude=viewport.latitude,longitude=viewport.longitude,viewportCenter=[longitude,latitude];longitude=[longitude,mbsLat];latitude=[mbsLon,latitude];viewport=Math.sqrt(height*height+width*width)*viewport.metersPerPixel[0];mbsLat=getDistanceFromLatLon(viewportCenter,[mbsLon,mbsLat,tile.header.mbs[2]]);height=.5*height+mbsR/WGS84_RADIUS_X;width=.5*width+mbsR/WGS84_RADIUS_X;if(mbsLat>viewport+mbsR/WGS84_RADIUS_X||getDistanceFromLatLon(viewportCenter,
longitude)>height||getDistanceFromLatLon(viewportCenter,latitude)>width)return"OUT";if(0===tile.lodMetricValue)return"DIG";frameState=getI3ScreenSize(tile,frameState);frameState*=qualityFactor;return.5>frameState?"OUT":!tile.header.children||frameState<=tile.lodMetricValue?"DRAW":tile.header.children?"DIG":"OUT"};exports.getI3ScreenSize=getI3ScreenSize;var _slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_core=require("module$node_modules$$math_DOT_gl$core$dist$es5$index"),
WGS84_RADIUS_X=6378137,qualityFactor=Math.PI/2}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$i3s_lod.js.map
