shadow$provide.module$node_modules$$luma_DOT_gl$engine$dist$es5$geometry$geometry=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports["default"]=exports.DRAW_MODE=void 0;var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_webgl=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$index"),DRAW_MODE={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,
TRIANGLE_FAN:6};exports.DRAW_MODE=DRAW_MODE;require=function(){function Geometry(){var props=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};(0,_classCallCheck2["default"])(this,Geometry);var _props$id=props.id;_props$id=void 0===_props$id?(0,_webgl.uid)("geometry"):_props$id;var _props$drawMode=props.drawMode;_props$drawMode=void 0===_props$drawMode?DRAW_MODE.TRIANGLES:_props$drawMode;var _props$attributes=props.attributes;_props$attributes=void 0===_props$attributes?{}:_props$attributes;
var _props$indices=props.indices;props=props.vertexCount;props=void 0===props?null:props;this.id=_props$id;this.drawMode=_props$drawMode|0;this.attributes={};this.userData={};this._setAttributes(_props$attributes,void 0===_props$indices?null:_props$indices);this.vertexCount=props||this._calculateVertexCount(this.attributes,this.indices)}(0,_createClass2["default"])(Geometry,null,[{key:"DRAW_MODE",get:function(){return DRAW_MODE}}]);(0,_createClass2["default"])(Geometry,[{key:"getVertexCount",value:function(){return this.vertexCount}},
{key:"getAttributes",value:function(){return this.indices?_objectSpread({indices:this.indices},this.attributes):this.attributes}},{key:"_print",value:function(attributeName){return"Geometry ".concat(this.id," attribute ").concat(attributeName)}},{key:"_setAttributes",value:function(attributes,indices){indices&&(this.indices=ArrayBuffer.isView(indices)?{value:indices,size:1}:indices);for(var attributeName in attributes)indices=attributes[attributeName],indices=ArrayBuffer.isView(indices)?{value:indices}:
indices,(0,_webgl.assert)(ArrayBuffer.isView(indices.value),"".concat(this._print(attributeName),": must be typed array or object with value as typed array")),"POSITION"!==attributeName&&"positions"!==attributeName||indices.size||(indices.size=3),"indices"===attributeName?((0,_webgl.assert)(!this.indices),this.indices=indices):this.attributes[attributeName]=indices;this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed);return this}},
{key:"_calculateVertexCount",value:function(attributes,indices){if(indices)return indices.value.length;indices=Infinity;for(var attributeName in attributes){var attribute=attributes[attributeName],value=attribute.value,size=attribute.size;!attribute.constant&&value&&1<=size&&(indices=Math.min(indices,value.length/size))}(0,_webgl.assert)(Number.isFinite(indices));return indices}},{key:"mode",get:function(){return this.drawMode}}]);return Geometry}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$engine$dist$es5$geometry$geometry.js.map
