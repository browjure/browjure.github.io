shadow$provide.module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$parse_gltf=function(global,require,module,exports){function _parseGLTF(){_parseGLTF=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee(gltf$jscomp$0,arrayBufferOrString){var byteOffset$jscomp$0,options$jscomp$0,context,promises,_promise,promise,_args=arguments;return _regenerator["default"].wrap(function(_context){for(;;)switch(_context.prev=_context.next){case 0:byteOffset$jscomp$0=2<_args.length&&void 0!==
_args[2]?_args[2]:0;options$jscomp$0=3<_args.length?_args[3]:void 0;context=4<_args.length?_args[4]:void 0;var gltf=gltf$jscomp$0,data=arrayBufferOrString,byteOffset=byteOffset$jscomp$0,options=options$jscomp$0;options.uri&&(gltf.baseUri=options.uri);data instanceof ArrayBuffer&&!(0,_parseGlb.isGLB)(data,byteOffset,options)&&(data=(new TextDecoder).decode(data));if("string"===typeof data)gltf.json=(0,_loaderUtils.parseJSON)(data);else if(data instanceof ArrayBuffer){var glb={};(0,_parseGlb["default"])(glb,
data,byteOffset,options);(0,_assert["default"])("glTF"===glb.type,"Invalid GLB magic string ".concat(glb.type));gltf._glb=glb;gltf.json=glb.json}else(0,_assert["default"])(!1,"GLTF: must be ArrayBuffer or string");gltf.buffers=Array((gltf.json.buffers||[]).length).fill(null);gltf._glb&&gltf._glb.header.hasBinChunk&&(data=gltf._glb.binChunks,gltf.buffers[0]={arrayBuffer:data[0].arrayBuffer,byteOffset:data[0].byteOffset,byteLength:data[0].byteLength});gltf.images=Array((gltf.json.images||[]).length).fill({});
(0,_normalizeGltfV["default"])(gltf$jscomp$0,{normalize:options$jscomp$0.gltf.normalize});promises=[];if(!options$jscomp$0.gltf.loadBuffers||!gltf$jscomp$0.json.buffers){_context.next=9;break}_context.next=9;return loadBuffers(gltf$jscomp$0,options$jscomp$0,context);case 9:return options$jscomp$0.gltf.loadImages&&(_promise=loadImages(gltf$jscomp$0,options$jscomp$0,context),promises.push(_promise)),promise=(0,_gltfExtensions.decodeExtensions)(gltf$jscomp$0,options$jscomp$0,context),promises.push(promise),
_context.next=14,Promise.all(promises);case 14:return _context.abrupt("return",options$jscomp$0.gltf.postProcess?(0,_postProcessGltf["default"])(gltf$jscomp$0,options$jscomp$0):gltf$jscomp$0);case 15:case "end":return _context.stop()}},_callee)}));return _parseGLTF.apply(this,arguments)}function loadBuffers(_x3,_x4,_x5){return _loadBuffers.apply(this,arguments)}function _loadBuffers(){_loadBuffers=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee2(gltf,options,context){var i,
buffer,fetch,uri,response,arrayBuffer;return _regenerator["default"].wrap(function(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:i=0;case 1:if(!(i<gltf.json.buffers.length)){_context2.next=18;break}buffer=gltf.json.buffers[i];if(!buffer.uri){_context2.next=15;break}fetch=context.fetch;(0,_assert["default"])(fetch);uri=(0,_resolveUrl.resolveUrl)(buffer.uri,options);_context2.next=9;return fetch(uri);case 9:return response=_context2.sent,_context2.next=12,response.arrayBuffer();case 12:arrayBuffer=
_context2.sent,gltf.buffers[i]={arrayBuffer,byteOffset:0,byteLength:arrayBuffer.byteLength},delete buffer.uri;case 15:++i;_context2.next=1;break;case 18:case "end":return _context2.stop()}},_callee2)}));return _loadBuffers.apply(this,arguments)}function loadImages(_x6,_x7,_x8){return _loadImages.apply(this,arguments)}function _loadImages(){_loadImages=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee3(gltf,options,context){var images,promises,i;return _regenerator["default"].wrap(function(_context3){for(;;)switch(_context3.prev=
_context3.next){case 0:images=gltf.json.images||[];promises=[];for(i=0;i<images.length;++i)promises.push(loadImage(gltf,images[i],i,options,context));_context3.next=5;return Promise.all(promises);case 5:return _context3.abrupt("return",_context3.sent);case 6:case "end":return _context3.stop()}},_callee3)}));return _loadImages.apply(this,arguments)}function loadImage(_x9,_x10,_x11,_x12,_x13){return _loadImage.apply(this,arguments)}function _loadImage(){_loadImage=(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee4(gltf,
image,i,options,context){var fetch,parse,arrayBuffer,uri,response,array,parsedImage;return _regenerator["default"].wrap(function(_context4){for(;;)switch(_context4.prev=_context4.next){case 0:fetch=context.fetch;parse=context.parse;if(!image.uri){_context4.next=9;break}uri=(0,_resolveUrl.resolveUrl)(image.uri,options);_context4.next=5;return fetch(uri);case 5:return response=_context4.sent,_context4.next=8,response.arrayBuffer();case 8:arrayBuffer=_context4.sent;case 9:return Number.isFinite(image.bufferView)&&
(array=(0,_getTypedArray.getTypedArrayForBufferView)(gltf.json,gltf.buffers,image.bufferView),arrayBuffer=(0,_loaderUtils.getZeroOffsetArrayBuffer)(array.buffer,array.byteOffset,array.byteLength)),(0,_assert["default"])(arrayBuffer,"glTF image has no data"),_context4.next=13,parse(arrayBuffer,_images.ImageLoader,{},context);case 13:parsedImage=_context4.sent,gltf.images[i]=parsedImage;case 15:case "end":return _context4.stop()}},_callee4)}));return _loadImage.apply(this,arguments)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");
module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.isGLTF=function(arrayBuffer){arrayBuffer=new DataView(arrayBuffer);return(0,_parseGlb.isGLB)(arrayBuffer,0)};exports.parseGLTF=function(_x,_x2){return _parseGLTF.apply(this,arguments)};var _regenerator=module(require("module$node_modules$$babel$runtime$regenerator$index")),_asyncToGenerator2=module(require("module$node_modules$$babel$runtime$helpers$asyncToGenerator")),
_images=require("module$node_modules$$loaders_DOT_gl$images$dist$es5$index"),_loaderUtils=require("module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$index"),_assert=module(require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$utils$assert")),_resolveUrl=require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$gltf_utils$resolve_url"),_getTypedArray=require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$gltf_utils$get_typed_array"),_gltfExtensions=require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$extensions$gltf_extensions"),
_parseGlb=global(require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$parse_glb")),_normalizeGltfV=module(require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$normalize_gltf_v1")),_postProcessGltf=module(require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$post_process_gltf"))}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$parse_gltf.js.map
