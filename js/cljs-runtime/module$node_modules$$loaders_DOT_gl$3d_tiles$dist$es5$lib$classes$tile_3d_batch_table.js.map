{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$classes$tile_3d_batch_table.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/3d-tiles/dist/es5/lib/classes/tile-3d-batch-table.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$3d_tiles$dist$es5$lib$classes$tile_3d_batch_table\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nvar _tile3dAccessorUtils = require(\"./helpers/tile-3d-accessor-utils\");\n\nvar _tile3dBatchTableHierarchy = require(\"./tile-3d-batch-table-hierarchy\");\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\nvar clone = function clone(x, y) {\n  return x;\n};\n\nvar IGNORED_PROPERTY_FIELDS = {\n  HIERARCHY: true,\n  extensions: true,\n  extras: true\n};\n\nvar Tile3DBatchTableParser = function () {\n  function Tile3DBatchTableParser(json, binary, featureCount) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    (0, _classCallCheck2[\"default\"])(this, Tile3DBatchTableParser);\n    (0, _loaderUtils.assert)(featureCount >= 0);\n    this.json = json || {};\n    this.binary = binary;\n    this.featureCount = featureCount;\n    this._extensions = this.json && this.json.extensions || {};\n    this._properties = {};\n\n    for (var propertyName in this.json) {\n      if (!IGNORED_PROPERTY_FIELDS[propertyName]) {\n        this._properties[propertyName] = this.json[propertyName];\n      }\n    }\n\n    this._binaryProperties = this._initializeBinaryProperties();\n\n    if (options['3DTILES_batch_table_hierarchy']) {\n      this._hierarchy = (0, _tile3dBatchTableHierarchy.initializeHierarchy)(this, this.json, this.binary);\n    }\n  }\n\n  (0, _createClass2[\"default\"])(Tile3DBatchTableParser, [{\n    key: \"getExtension\",\n    value: function getExtension(extensionName) {\n      return this.json && this.json.extensions && this.json.extensions[extensionName];\n    }\n  }, {\n    key: \"memorySizeInBytes\",\n    value: function memorySizeInBytes() {\n      return 0;\n    }\n  }, {\n    key: \"isClass\",\n    value: function isClass(batchId, className) {\n      this._checkBatchId(batchId);\n\n      (0, _loaderUtils.assert)(typeof className === 'string', className);\n\n      if (this._hierarchy) {\n        var result = (0, _tile3dBatchTableHierarchy.traverseHierarchy)(this._hierarchy, batchId, function (hierarchy, instanceIndex) {\n          var classId = hierarchy.classIds[instanceIndex];\n          var instanceClass = hierarchy.classes[classId];\n          return instanceClass.name === className;\n        });\n        return defined(result);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isExactClass\",\n    value: function isExactClass(batchId, className) {\n      (0, _loaderUtils.assert)(typeof className === 'string', className);\n      return this.getExactClassName(batchId) === className;\n    }\n  }, {\n    key: \"getExactClassName\",\n    value: function getExactClassName(batchId) {\n      this._checkBatchId(batchId);\n\n      if (this._hierarchy) {\n        var classId = this._hierarchy.classIds[batchId];\n        var instanceClass = this._hierarchy.classes[classId];\n        return instanceClass.name;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"hasProperty\",\n    value: function hasProperty(batchId, name) {\n      this._checkBatchId(batchId);\n\n      (0, _loaderUtils.assert)(typeof name === 'string', name);\n      return defined(this._properties[name]) || this._hasPropertyInHierarchy(batchId, name);\n    }\n  }, {\n    key: \"getPropertyNames\",\n    value: function getPropertyNames(batchId, results) {\n      var _results;\n\n      this._checkBatchId(batchId);\n\n      results = defined(results) ? results : [];\n      results.length = 0;\n      var propertyNames = Object.keys(this._properties);\n\n      (_results = results).push.apply(_results, (0, _toConsumableArray2[\"default\"])(propertyNames));\n\n      if (this._hierarchy) {\n        this._getPropertyNamesInHierarchy(batchId, results);\n      }\n\n      return results;\n    }\n  }, {\n    key: \"getProperty\",\n    value: function getProperty(batchId, name) {\n      this._checkBatchId(batchId);\n\n      (0, _loaderUtils.assert)(typeof name === 'string', name);\n\n      if (this._binaryProperties) {\n        var binaryProperty = this._binaryProperties[name];\n\n        if (defined(binaryProperty)) {\n          return this._getBinaryProperty(binaryProperty, batchId);\n        }\n      }\n\n      var propertyValues = this._properties[name];\n\n      if (defined(propertyValues)) {\n        return clone(propertyValues[batchId], true);\n      }\n\n      if (this._hierarchy) {\n        var hierarchyProperty = this._getHierarchyProperty(batchId, name);\n\n        if (defined(hierarchyProperty)) {\n          return hierarchyProperty;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(batchId, name, value) {\n      var featureCount = this.featureCount;\n\n      this._checkBatchId(batchId);\n\n      (0, _loaderUtils.assert)(typeof name === 'string', name);\n\n      if (this._binaryProperties) {\n        var binaryProperty = this._binaryProperties[name];\n\n        if (binaryProperty) {\n          this._setBinaryProperty(binaryProperty, batchId, value);\n\n          return;\n        }\n      }\n\n      if (this._hierarchy) {\n        if (this._setHierarchyProperty(this, batchId, name, value)) {\n          return;\n        }\n      }\n\n      var propertyValues = this._properties[name];\n\n      if (!defined(propertyValues)) {\n        this._properties[name] = new Array(featureCount);\n        propertyValues = this._properties[name];\n      }\n\n      propertyValues[batchId] = clone(value, true);\n    }\n  }, {\n    key: \"_checkBatchId\",\n    value: function _checkBatchId(batchId) {\n      var valid = batchId >= 0 && batchId < this.featureCount;\n\n      if (!valid) {\n        throw new Error(\"batchId not in range [0, featureCount - 1].\");\n      }\n    }\n  }, {\n    key: \"_getBinaryProperty\",\n    value: function _getBinaryProperty(binaryProperty, index) {\n      return binaryProperty.unpack(binaryProperty.typedArray, index);\n    }\n  }, {\n    key: \"_setBinaryProperty\",\n    value: function _setBinaryProperty(binaryProperty, index, value) {\n      binaryProperty.pack(value, binaryProperty.typedArray, index);\n    }\n  }, {\n    key: \"_initializeBinaryProperties\",\n    value: function _initializeBinaryProperties() {\n      var binaryProperties = null;\n\n      for (var name in this._properties) {\n        var property = this._properties[name];\n\n        var binaryProperty = this._initializeBinaryProperty(name, property);\n\n        if (binaryProperty) {\n          binaryProperties = binaryProperties || {};\n          binaryProperties[name] = binaryProperty;\n        }\n      }\n\n      return binaryProperties;\n    }\n  }, {\n    key: \"_initializeBinaryProperty\",\n    value: function _initializeBinaryProperty(name, property) {\n      if ('byteOffset' in property) {\n        var tile3DAccessor = property;\n        (0, _loaderUtils.assert)(this.binary, \"Property \".concat(name, \" requires a batch table binary.\"));\n        (0, _loaderUtils.assert)(tile3DAccessor.type, \"Property \".concat(name, \" requires a type.\"));\n        var accessor = (0, _tile3dAccessorUtils.createTypedArrayFromAccessor)(tile3DAccessor, this.binary.buffer, this.binary.byteOffset | 0, this.featureCount);\n        return {\n          typedArray: accessor.values,\n          componentCount: accessor.size,\n          unpack: accessor.unpacker,\n          pack: accessor.packer\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_hasPropertyInHierarchy\",\n    value: function _hasPropertyInHierarchy(batchId, name) {\n      if (!this._hierarchy) {\n        return false;\n      }\n\n      var result = (0, _tile3dBatchTableHierarchy.traverseHierarchy)(this._hierarchy, batchId, function (hierarchy, instanceIndex) {\n        var classId = hierarchy.classIds[instanceIndex];\n        var instances = hierarchy.classes[classId].instances;\n        return defined(instances[name]);\n      });\n      return defined(result);\n    }\n  }, {\n    key: \"_getPropertyNamesInHierarchy\",\n    value: function _getPropertyNamesInHierarchy(batchId, results) {\n      (0, _tile3dBatchTableHierarchy.traverseHierarchy)(this._hierarchy, batchId, function (hierarchy, instanceIndex) {\n        var classId = hierarchy.classIds[instanceIndex];\n        var instances = hierarchy.classes[classId].instances;\n\n        for (var name in instances) {\n          if (instances.hasOwnProperty(name)) {\n            if (results.indexOf(name) === -1) {\n              results.push(name);\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_getHierarchyProperty\",\n    value: function _getHierarchyProperty(batchId, name) {\n      var _this = this;\n\n      return (0, _tile3dBatchTableHierarchy.traverseHierarchy)(this._hierarchy, batchId, function (hierarchy, instanceIndex) {\n        var classId = hierarchy.classIds[instanceIndex];\n        var instanceClass = hierarchy.classes[classId];\n        var indexInClass = hierarchy.classIndexes[instanceIndex];\n        var propertyValues = instanceClass.instances[name];\n\n        if (defined(propertyValues)) {\n          if (defined(propertyValues.typedArray)) {\n            return _this._getBinaryProperty(propertyValues, indexInClass);\n          }\n\n          return clone(propertyValues[indexInClass], true);\n        }\n\n        return null;\n      });\n    }\n  }, {\n    key: \"_setHierarchyProperty\",\n    value: function _setHierarchyProperty(batchTable, batchId, name, value) {\n      var _this2 = this;\n\n      var result = (0, _tile3dBatchTableHierarchy.traverseHierarchy)(this._hierarchy, batchId, function (hierarchy, instanceIndex) {\n        var classId = hierarchy.classIds[instanceIndex];\n        var instanceClass = hierarchy.classes[classId];\n        var indexInClass = hierarchy.classIndexes[instanceIndex];\n        var propertyValues = instanceClass.instances[name];\n\n        if (defined(propertyValues)) {\n          (0, _loaderUtils.assert)(instanceIndex === batchId, \"Inherited property \\\"\".concat(name, \"\\\" is read-only.\"));\n\n          if (defined(propertyValues.typedArray)) {\n            _this2._setBinaryProperty(propertyValues, indexInClass, value);\n          } else {\n            propertyValues[indexInClass] = clone(value, true);\n          }\n\n          return true;\n        }\n\n        return false;\n      });\n      return defined(result);\n    }\n  }]);\n  return Tile3DBatchTableParser;\n}();\n\nexports[\"default\"] = Tile3DBatchTableParser;\n//# sourceMappingURL=tile-3d-batch-table.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","defined","x","undefined","_interopRequireDefault","Object","defineProperty","value","_toConsumableArray2","_classCallCheck2","_createClass2","_loaderUtils","_tile3dAccessorUtils","_tile3dBatchTableHierarchy","IGNORED_PROPERTY_FIELDS","HIERARCHY","extensions","extras","Tile3DBatchTableParser","json","binary","featureCount","options","arguments","length","assert","_extensions","_properties","propertyName","_binaryProperties","_initializeBinaryProperties","_hierarchy","initializeHierarchy","key","getExtension","extensionName","memorySizeInBytes","isClass","batchId","className","_checkBatchId","result","traverseHierarchy","hierarchy","instanceIndex","instanceClass","classes","classId","classIds","name","isExactClass","getExactClassName","hasProperty","_hasPropertyInHierarchy","getPropertyNames","results","_results","propertyNames","keys","push","apply","_getPropertyNamesInHierarchy","getProperty","binaryProperty","_getBinaryProperty","propertyValues","hierarchyProperty","_getHierarchyProperty","setProperty","_setBinaryProperty","_setHierarchyProperty","Array","Error","index","unpack","typedArray","pack","binaryProperties","_initializeBinaryProperty","property","concat","type","accessor","createTypedArrayFromAccessor","buffer","byteOffset","values","componentCount","size","unpacker","packer","instances","hasOwnProperty","indexOf","_this","indexInClass","classIndexes","batchTable","_this2"]
}
