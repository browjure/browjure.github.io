shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$utils$array_utils=function(global,require,module,exports){function padArrayChunk(_ref){var source=_ref.source,target=_ref.target,_ref$start=_ref.start;_ref$start=void 0===_ref$start?0:_ref$start;var end=_ref.end,size=_ref.size;_ref=_ref.getData;end=end||target.length;var sourceLength=source.length;end-=_ref$start;if(sourceLength>end)target.set(source.subarray(0,end),_ref$start);else if(target.set(source,_ref$start),_ref)for(;sourceLength<
end;)for(var datum=_ref(sourceLength,source),j=0;j<size;j++)target[_ref$start+sourceLength]=datum[j]||0,sourceLength++}Object.defineProperty(exports,"__esModule",{value:!0});exports.padArray=function(_ref2){var source=_ref2.source,target=_ref2.target,size=_ref2.size,getData=_ref2.getData,sourceStartIndices=_ref2.sourceStartIndices;_ref2=_ref2.targetStartIndices;if(!Array.isArray(_ref2))return padArrayChunk({source,target,size,getData}),target;for(var sourceIndex=0,targetIndex=0,getChunkData=getData&&
function(i,chunk){return getData(i+targetIndex,chunk)},n=Math.min(sourceStartIndices.length,_ref2.length),i$jscomp$0=1;i$jscomp$0<n;i$jscomp$0++){var nextSourceIndex=sourceStartIndices[i$jscomp$0]*size,nextTargetIndex=_ref2[i$jscomp$0]*size;padArrayChunk({source:source.subarray(sourceIndex,nextSourceIndex),target,start:targetIndex,end:nextTargetIndex,size,getData:getChunkData});sourceIndex=nextSourceIndex;targetIndex=nextTargetIndex}targetIndex<target.length&&padArrayChunk({source:[],target,start:targetIndex,
size,getData:getChunkData});return target}}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$utils$array_utils.js.map
