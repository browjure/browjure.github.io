{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$multicast.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,8DAAf,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,SAAR,CAAoB,IAAK,EACzB,KAAIC,wBAA0BP,OAAA,CAAQ,6EAAR,CAA9B,CACIQ,aAAeR,OAAA,CAAQ,4DAAR,CADnB,CAEIS,UAAYT,OAAA,CAAQ,8DAAR,CAUhBE,QAAA,CAAQI,SAAR,CATAA,QAAkB,CAACI,uBAAD;AAA0BC,QAA1B,CAAoC,CAClD,IAAIC,eAAiBJ,YAAA,CAAaK,UAAb,CAAwBH,uBAAxB,CAAA,CAAmDA,uBAAnD,CAA6E,QAAS,EAAG,CAAE,MAAOA,wBAAT,CAC9G,OAAIF,aAAA,CAAaK,UAAb,CAAwBF,QAAxB,CAAJ,CACWF,SAAA,CAAUK,OAAV,CAAkBH,QAAlB,CAA4B,CAC/BI,UAAWH,cADoB,CAA5B,CADX,CAKO,QAAS,CAACI,MAAD,CAAS,CAAE,MAAO,KAAIT,uBAAJ,CAA4BU,qBAA5B,CAAkDD,MAAlD,CAA0DJ,cAA1D,CAAT,CAPyB,CAPqE;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/multicast.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$multicast\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multicast = void 0;\nvar ConnectableObservable_1 = require(\"../observable/ConnectableObservable\");\nvar isFunction_1 = require(\"../util/isFunction\");\nvar connect_1 = require(\"./connect\");\nfunction multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory = isFunction_1.isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () { return subjectOrSubjectFactory; };\n    if (isFunction_1.isFunction(selector)) {\n        return connect_1.connect(selector, {\n            connector: subjectFactory,\n        });\n    }\n    return function (source) { return new ConnectableObservable_1.ConnectableObservable(source, subjectFactory); };\n}\nexports.multicast = multicast;\n//# sourceMappingURL=multicast.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","multicast","ConnectableObservable_1","isFunction_1","connect_1","subjectOrSubjectFactory","selector","subjectFactory","isFunction","connect","connector","source","ConnectableObservable"]
}
