{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$lib$worker_loader_utils$validate_loader_version.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,yGAAf,CAA8H,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA2BtKC,QAASA,aAAY,CAACC,OAAD,CAAU,CACzBC,OAAAA,CAAQD,OAAA,CAAQE,KAAR,CAAc,GAAd,CAAA,CAAmBC,GAAnB,CAAuBC,MAAvB,CACZ,OAAO,CACLC,MAAOJ,OAAA,CAAM,CAAN,CADF,CAELK,MAAOL,OAAA,CAAM,CAAN,CAFF,CAFsB,CAxB3BM,MAAAA,CAAyBX,OAAA,CAAQ,kEAAR,CAE7BY,OAAA,CAAOC,cAAP,CAAsBX,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CY,MAAO,CAAA,CADoC,CAA7C,CAGAZ,QAAA,CAAQa,qBAAR,CAMAA,QAA8B,CAACC,MAAD,CAAS,CACrC,IAAIC,YAAiC,CAAnB,CAAAC,SAAA,CAAUC,MAAV,EAAyCC,IAAAA,EAAzC;AAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoEG,OACtF,EAAC,CAAA,CAAGC,OAAA,CAAQ,SAAR,CAAJ,EAAwBN,MAAxB,CAAgC,oBAAhC,CACA,KAAIO,cAAgBP,MAAhBO,CAAuBnB,OAEtBa,YAAL,EAAqBM,aAArB,GAIcpB,YAAA,CAAac,WAAb,CACE,CAAAd,YAAA,CAAaoB,aAAb,CALhB,CALqC,CAJvC,KAAID,QAAUX,MAAA,CAAuBX,OAAA,CAAQ,gFAAR,CAAvB,CAAd,CAEIqB,QAA4C,QAZsH;",
"sources":["node_modules/@loaders_DOT_gl/loader-utils/dist/es5/lib/worker-loader-utils/validate-loader-version.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$lib$worker_loader_utils$validate_loader_version\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateLoaderVersion = validateLoaderVersion;\n\nvar _assert = _interopRequireDefault(require(\"../env-utils/assert\"));\n\nvar VERSION = typeof \"2.3.13\" !== 'undefined' ? \"2.3.13\" : '';\n\nfunction validateLoaderVersion(loader) {\n  var coreVersion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : VERSION;\n  (0, _assert[\"default\"])(loader, 'no loader provided');\n  var loaderVersion = loader.version;\n\n  if (!coreVersion || !loaderVersion) {\n    return;\n  }\n\n  coreVersion = parseVersion(coreVersion);\n  loaderVersion = parseVersion(loaderVersion);\n}\n\nfunction parseVersion(version) {\n  var parts = version.split('.').map(Number);\n  return {\n    major: parts[0],\n    minor: parts[1]\n  };\n}\n//# sourceMappingURL=validate-loader-version.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","parseVersion","version","parts","split","map","Number","major","minor","_interopRequireDefault","Object","defineProperty","value","validateLoaderVersion","loader","coreVersion","arguments","length","undefined","VERSION","_assert","loaderVersion"]
}
