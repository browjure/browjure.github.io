{
"version":3,
"file":"module$node_modules$gl_matrix$cjs$vec3.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/gl-matrix/cjs/vec3.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$gl_matrix$cjs$vec3\"] = function(global,require,module,exports) {\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\n\nfunction rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexports.len = len;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;\n};"],
"names":["shadow$provide","global","require","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","create","out","glMatrix","ARRAY_TYPE","Float32Array","length","a","Math","hypot","x","y","z","subtract","b","multiply","divide","distance","squaredDistance","squaredLength","dot","Object","defineProperty","value","clone","fromValues","copy","set","add","ceil","floor","min","max","round","scale","scaleAndAdd","negate","inverse","normalize","len","sqrt","cross","ax","ay","az","bx","by","bz","lerp","t","hermite","c","d","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","random","r","RANDOM","PI","zScale","cos","sin","transformMat4","m","w","transformMat3","transformQuat","q","qx","qy","qz","uvx","uvy","uvz","w2","qw","rotateX","rad","p","rotateY","rotateZ","angle","cosine","mag","mag1","mag2","acos","zero","str","exactEquals","equals","a0","a1","a2","b0","b1","b2","abs","EPSILON","forEach","sqrLen","sqrDist","dist","div","mul","sub","_interopRequireWildcard","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","vec","stride","offset","count","fn","arg","l","i"]
}
