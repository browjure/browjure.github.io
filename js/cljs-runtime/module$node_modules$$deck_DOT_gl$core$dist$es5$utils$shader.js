shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$utils$shader=function(global,require,module$jscomp$0,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.mergeShaders=function(target,source){if(!source)return target;var result=Object.assign({},target,source);"defines"in source&&(result.defines=Object.assign({},target.defines,source.defines));if("modules"in source&&(result.modules=(target.modules||[]).concat(source.modules),source.modules.some(function(module){return"project64"===module.name}))){var index=result.modules.findIndex(function(module){return"project32"===module.name});0<=index&&result.modules.splice(index,
1)}if("inject"in source)if(target.inject){target=_objectSpread({},target.inject);for(var key in source.inject)target[key]=(target[key]||"")+source.inject[key];result.inject=target}else result.inject=source.inject;return result};var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty"))}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$utils$shader.js.map
