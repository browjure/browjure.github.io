{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$hexagon_layer$hexagon_layer.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/hexagon-layer/hexagon-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$hexagon_layer$hexagon_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _layers = require(\"@deck.gl/layers\");\n\nvar _colorUtils = require(\"../utils/color-utils\");\n\nvar _hexagonAggregator = require(\"./hexagon-aggregator\");\n\nvar _cpuAggregator = _interopRequireDefault(require(\"../utils/cpu-aggregator\"));\n\nvar _aggregationLayer = _interopRequireDefault(require(\"../aggregation-layer\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction nop() {}\n\nvar defaultProps = {\n  colorDomain: null,\n  colorRange: _colorUtils.defaultColorRange,\n  getColorValue: {\n    type: 'accessor',\n    value: null\n  },\n  getColorWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  colorAggregation: 'SUM',\n  lowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  upperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {\n    type: 'accessor',\n    value: null\n  },\n  getElevationWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {\n    type: 'number',\n    value: 0,\n    min: 0,\n    max: 100\n  },\n  elevationUpperPercentile: {\n    type: 'number',\n    value: 100,\n    min: 0,\n    max: 100\n  },\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n  radius: {\n    type: 'number',\n    value: 1000,\n    min: 1\n  },\n  coverage: {\n    type: 'number',\n    min: 0,\n    max: 1,\n    value: 1\n  },\n  extruded: false,\n  hexagonAggregator: _hexagonAggregator.pointToHexbin,\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  material: true,\n  _filterData: {\n    type: 'function',\n    value: null,\n    optional: true\n  }\n};\n\nvar HexagonLayer = function (_AggregationLayer) {\n  (0, _inherits2[\"default\"])(HexagonLayer, _AggregationLayer);\n\n  var _super = _createSuper(HexagonLayer);\n\n  function HexagonLayer() {\n    (0, _classCallCheck2[\"default\"])(this, HexagonLayer);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(HexagonLayer, [{\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      return changeFlags.somethingChanged;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var cpuAggregator = new _cpuAggregator[\"default\"]({\n        getAggregator: function getAggregator(props) {\n          return props.hexagonAggregator;\n        },\n        getCellSize: function getCellSize(props) {\n          return props.radius;\n        }\n      });\n      this.state = {\n        cpuAggregator: cpuAggregator,\n        aggregatorState: cpuAggregator.state,\n        hexagonVertices: null\n      };\n      var attributeManager = this.getAttributeManager();\n      attributeManager.add({\n        positions: {\n          size: 3,\n          accessor: 'getPosition'\n        }\n      });\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(HexagonLayer.prototype), \"updateState\", this).call(this, opts);\n      var _this$state = this.state,\n          cpuAggregator = _this$state.cpuAggregator,\n          oldVertices = _this$state.hexagonVertices;\n\n      if (opts.changeFlags.propsOrDataChanged) {\n        this.setState({\n          aggregatorState: cpuAggregator.updateState(opts, {\n            viewport: this.context.viewport,\n            attributes: this.getAttributes()\n          })\n        });\n      }\n\n      var _ref2 = cpuAggregator.state.layerData || {},\n          hexagonVertices = _ref2.hexagonVertices;\n\n      if (hexagonVertices && oldVertices !== hexagonVertices) {\n        var vertices = this.convertLatLngToMeterOffset(hexagonVertices);\n\n        if (vertices) {\n          this.setState({\n            hexagonVertices: hexagonVertices,\n            vertices: vertices\n          });\n        }\n      } else {\n        this.updateRadiusAngle();\n      }\n    }\n  }, {\n    key: \"updateRadiusAngle\",\n    value: function updateRadiusAngle(vertices) {\n      var viewport = this.context.viewport;\n\n      var _viewport$getDistance = viewport.getDistanceScales(),\n          unitsPerMeter = _viewport$getDistance.unitsPerMeter;\n\n      var cpuAggregator = this.state.cpuAggregator;\n\n      if (cpuAggregator.state.layerData && cpuAggregator.state.layerData.radiusCommon) {\n        var radiusCommon = cpuAggregator.state.layerData.radiusCommon;\n        var radius = radiusCommon / unitsPerMeter[0];\n        this.setState({\n          angle: 90,\n          radius: radius\n        });\n      }\n    }\n  }, {\n    key: \"convertLatLngToMeterOffset\",\n    value: function convertLatLngToMeterOffset(hexagonVertices) {\n      var viewport = this.context.viewport;\n\n      if (Array.isArray(hexagonVertices) && hexagonVertices.length === 6) {\n        var vertex0 = hexagonVertices[0];\n        var vertex3 = hexagonVertices[3];\n        var centroid = [(vertex0[0] + vertex3[0]) / 2, (vertex0[1] + vertex3[1]) / 2];\n        var centroidFlat = viewport.projectFlat(centroid);\n\n        var _viewport$getDistance2 = viewport.getDistanceScales(centroid),\n            metersPerUnit = _viewport$getDistance2.metersPerUnit;\n\n        var vertices = hexagonVertices.map(function (vt) {\n          var vtFlat = viewport.projectFlat(vt);\n          return [(vtFlat[0] - centroidFlat[0]) * metersPerUnit[0], (vtFlat[1] - centroidFlat[1]) * metersPerUnit[1]];\n        });\n        return vertices;\n      }\n\n      _core.log.error('HexagonLayer: hexagonVertices needs to be an array of 6 points')();\n\n      return null;\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref3) {\n      var info = _ref3.info;\n      return this.state.cpuAggregator.getPickingInfo({\n        info: info\n      });\n    }\n  }, {\n    key: \"_onGetSublayerColor\",\n    value: function _onGetSublayerColor(cell) {\n      return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n    }\n  }, {\n    key: \"_onGetSublayerElevation\",\n    value: function _onGetSublayerElevation(cell) {\n      return this.state.cpuAggregator.getAccessor('elevation')(cell);\n    }\n  }, {\n    key: \"_getSublayerUpdateTriggers\",\n    value: function _getSublayerUpdateTriggers() {\n      return this.state.cpuAggregator.getUpdateTriggers(this.props);\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$props = this.props,\n          elevationScale = _this$props.elevationScale,\n          extruded = _this$props.extruded,\n          coverage = _this$props.coverage,\n          material = _this$props.material,\n          transitions = _this$props.transitions;\n      var _this$state2 = this.state,\n          angle = _this$state2.angle,\n          radius = _this$state2.radius,\n          cpuAggregator = _this$state2.cpuAggregator,\n          vertices = _this$state2.vertices;\n      var SubLayerClass = this.getSubLayerClass('hexagon-cell', _layers.ColumnLayer);\n\n      var updateTriggers = this._getSublayerUpdateTriggers();\n\n      var geometry = vertices && vertices.length ? {\n        vertices: vertices,\n        radius: 1\n      } : {\n        radius: radius,\n        angle: angle\n      };\n      return new SubLayerClass(_objectSpread(_objectSpread({}, geometry), {}, {\n        diskResolution: 6,\n        elevationScale: elevationScale,\n        extruded: extruded,\n        coverage: coverage,\n        material: material,\n        getFillColor: this._onGetSublayerColor.bind(this),\n        getElevation: this._onGetSublayerElevation.bind(this),\n        transitions: transitions && {\n          getFillColor: transitions.getColorValue || transitions.getColorWeight,\n          getElevation: transitions.getElevationValue || transitions.getElevationWeight\n        }\n      }), this.getSubLayerProps({\n        id: 'hexagon-cell',\n        updateTriggers: updateTriggers\n      }), {\n        data: cpuAggregator.state.layerData.data\n      });\n    }\n  }]);\n  return HexagonLayer;\n}(_aggregationLayer[\"default\"]);\n\nexports[\"default\"] = HexagonLayer;\nHexagonLayer.layerName = 'HexagonLayer';\nHexagonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=hexagon-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","NewTarget","constructor","result","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Date","prototype","toString","call","e","nop","_interopRequireDefault","value","_classCallCheck2","_createClass2","_get2","_inherits2","_core","_layers","_colorUtils","_hexagonAggregator","_cpuAggregator","_aggregationLayer","defaultProps","colorDomain","colorRange","defaultColorRange","getColorValue","type","getColorWeight","colorAggregation","lowerPercentile","min","max","upperPercentile","colorScaleType","onSetColorDomain","elevationDomain","elevationRange","getElevationValue","getElevationWeight","elevationAggregation","elevationLowerPercentile","elevationUpperPercentile","elevationScale","elevationScaleType","onSetElevationDomain","radius","coverage","extruded","hexagonAggregator","pointToHexbin","getPosition","x","position","material","_filterData","optional","HexagonLayer","_AggregationLayer","_super","shouldUpdateState","_ref","changeFlags","somethingChanged","initializeState","cpuAggregator","getAggregator","props","getCellSize","state","aggregatorState","hexagonVertices","attributeManager","getAttributeManager","add","positions","size","accessor","updateState","opts","_this$state","oldVertices","propsOrDataChanged","setState","viewport","context","attributes","getAttributes","layerData","vertices","convertLatLngToMeterOffset","updateRadiusAngle","unitsPerMeter","_viewport$getDistance","getDistanceScales","radiusCommon","angle","Array","isArray","vertex0","vertex3","centroid","centroidFlat","projectFlat","metersPerUnit","_viewport$getDistance2","map","vt","vtFlat","log","error","getPickingInfo","_ref3","info","_onGetSublayerColor","cell","getAccessor","_onGetSublayerElevation","_getSublayerUpdateTriggers","getUpdateTriggers","renderLayers","_this$props","transitions","_this$state2","SubLayerClass","getSubLayerClass","ColumnLayer","updateTriggers","geometry","diskResolution","getFillColor","bind","getElevation","getSubLayerProps","id","data","layerName"]
}
