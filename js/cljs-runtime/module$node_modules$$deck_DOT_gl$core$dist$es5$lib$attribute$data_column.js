shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$data_column=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function getStride(accessor){return accessor.stride||accessor.size*accessor.bytesPerElement}function resolveShaderAttribute(baseAccessor,
shaderAttributeOptions){shaderAttributeOptions.offset&&_log["default"].removed("shaderAttribute.offset","vertexOffset, elementOffset")();var stride=getStride(baseAccessor);baseAccessor=("vertexOffset"in shaderAttributeOptions?shaderAttributeOptions.vertexOffset:baseAccessor.vertexOffset||0)*stride+(shaderAttributeOptions.elementOffset||0)*baseAccessor.bytesPerElement+(baseAccessor.offset||0);return _objectSpread(_objectSpread({},shaderAttributeOptions),{},{offset:baseAccessor,stride})}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_core=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_shaderAttribute=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$shader_attribute")),
_glUtils=require("module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$gl_utils"),_typedArrayManager=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$typed_array_manager")),_mathUtils=require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$math_utils"),_log=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$log"));require=function(){function DataColumn(gl,opts){(0,_classCallCheck2["default"])(this,DataColumn);this.gl=gl;this.id=opts.id;this.size=
opts.size;var logicalType=opts.logicalType||opts.type,doublePrecision=5130===logicalType,defaultValue=opts.defaultValue;defaultValue=Number.isFinite(defaultValue)?[defaultValue]:defaultValue||Array(this.size).fill(0);opts.defaultValue=defaultValue;defaultValue=logicalType;doublePrecision?defaultValue=5126:!defaultValue&&opts.isIndexed?defaultValue=gl&&(0,_core.hasFeature)(gl,_core.FEATURES.ELEMENT_INDEX_UINT32)?5125:5123:defaultValue||(defaultValue=5126);opts.logicalType=logicalType;opts.type=defaultValue;
gl=(0,_glUtils.glArrayFromType)(logicalType||defaultValue||5126);this.shaderAttributes={};(this.doublePrecision=doublePrecision)&&!1===opts.fp64&&(gl=Float32Array);opts.bytesPerElement=gl.BYTES_PER_ELEMENT;this.defaultType=gl;this.value=null;this.settings=opts;this.state={externalBuffer:null,bufferAccessor:opts,allocatedValue:null,constant:!1};this._buffer=null;this.setData(opts)}(0,_createClass2["default"])(DataColumn,[{key:"delete",value:function(){this._buffer&&(this._buffer["delete"](),this._buffer=
null);_typedArrayManager["default"].release(this.state.allocatedValue)}},{key:"getShaderAttributes",value:function(id,options){if(this.doublePrecision){var shaderAttributes={},isBuffer64Bit=this.value instanceof Float64Array;var JSCompiler_object_inline_low_4366=this.getAccessor();options=resolveShaderAttribute(JSCompiler_object_inline_low_4366,options||{});JSCompiler_object_inline_low_4366=_objectSpread(_objectSpread({},options),{},{offset:options.offset+4*JSCompiler_object_inline_low_4366.size});
shaderAttributes[id]=new _shaderAttribute["default"](this,options);shaderAttributes["".concat(id,"64Low")]=isBuffer64Bit?new _shaderAttribute["default"](this,JSCompiler_object_inline_low_4366):new Float32Array(this.size);return shaderAttributes}return options?(shaderAttributes=resolveShaderAttribute(this.getAccessor(),options),(0,_defineProperty2["default"])({},id,new _shaderAttribute["default"](this,shaderAttributes))):(0,_defineProperty2["default"])({},id,this)}},{key:"getBuffer",value:function(){return this.state.constant?
null:this.state.externalBuffer||this._buffer}},{key:"getValue",value:function(){return this.state.constant?this.value:[this.getBuffer(),this.getAccessor()]}},{key:"getAccessor",value:function(){return this.state.bufferAccessor}},{key:"setData",value:function(opts){var state=this.state;ArrayBuffer.isView(opts)?opts={value:opts}:opts instanceof _core.Buffer&&(opts={buffer:opts});var accessor=_objectSpread(_objectSpread({},this.settings),opts);state.bufferAccessor=accessor;if(opts.constant){opts=opts.value;
opts=this._normalizeValue(opts,[],0);this.settings.normalized&&(opts=this._normalizeConstant(opts));if(state.constant&&this._areValuesEqual(opts,this.value))return!1;state.externalBuffer=null;state.constant=!0;this.value=opts}else if(opts.buffer){var buffer=opts.buffer;state.externalBuffer=buffer;state.constant=!1;this.value=opts.value;state=opts.value instanceof Float64Array;accessor.type=opts.type||buffer.accessor.type;accessor.bytesPerElement=buffer.accessor.BYTES_PER_ELEMENT*(state?2:1);accessor.stride=
getStride(accessor)}else if(opts.value){this._checkExternalBuffer(opts);buffer=opts.value;state.externalBuffer=null;state.constant=!1;this.value=buffer;accessor.bytesPerElement=buffer.BYTES_PER_ELEMENT;accessor.stride=getStride(accessor);state=this.buffer;var byteOffset=this.byteOffset;this.doublePrecision&&buffer instanceof Float64Array&&(buffer=(0,_mathUtils.toDoublePrecisionArray)(buffer,accessor));var requiredBufferSize=buffer.byteLength+byteOffset+2*accessor.stride;state.byteLength<requiredBufferSize&&
state.reallocate(requiredBufferSize);state.setAccessor(null);state.subData({data:buffer,offset:byteOffset});accessor.type=opts.type||state.accessor.type}return!0}},{key:"updateSubBuffer",value:function(){var opts=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},value=this.value,_opts$startOffset=opts.startOffset;_opts$startOffset=void 0===_opts$startOffset?0:_opts$startOffset;opts=opts.endOffset;this.buffer.subData({data:this.doublePrecision&&value instanceof Float64Array?(0,_mathUtils.toDoublePrecisionArray)(value,
{size:this.size,startIndex:_opts$startOffset,endIndex:opts}):value.subarray(_opts$startOffset,opts),offset:_opts$startOffset*value.BYTES_PER_ELEMENT+this.byteOffset})}},{key:"allocate",value:function(_ref3){var _ref3$copy=_ref3.copy;_ref3$copy=void 0===_ref3$copy?!1:_ref3$copy;var state=this.state,oldValue=state.allocatedValue;this.value=_ref3=_typedArrayManager["default"].allocate(oldValue,_ref3.numInstances+1,{size:this.size,type:this.defaultType,copy:_ref3$copy});var buffer=this.buffer,byteOffset=
this.byteOffset;buffer.byteLength<_ref3.byteLength+byteOffset&&(buffer.reallocate(_ref3.byteLength+byteOffset),_ref3$copy&&oldValue&&buffer.subData({data:oldValue instanceof Float64Array?(0,_mathUtils.toDoublePrecisionArray)(oldValue,this):oldValue,offset:byteOffset}));state.allocatedValue=_ref3;state.constant=!1;state.externalBuffer=null;state.bufferAccessor=this.settings;return!0}},{key:"_checkExternalBuffer",value:function(opts){var value=opts.value;if(!opts.constant&&value){var ArrayType=this.defaultType,
illegalArrayType=!1;this.doublePrecision&&(illegalArrayType=4>value.BYTES_PER_ELEMENT);if(illegalArrayType)throw Error("Attribute ".concat(this.id," does not support ").concat(value.constructor.name));value instanceof ArrayType||!this.settings.normalized||"normalized"in opts||_log["default"].warn("Attribute ".concat(this.id," is normalized"))()}}},{key:"_normalizeConstant",value:function(value){switch(this.settings.type){case 5120:return(new Float32Array(value)).map(function(x){return(x+128)/255*
2-1});case 5122:return(new Float32Array(value)).map(function(x){return(x+32768)/65535*2-1});case 5121:return(new Float32Array(value)).map(function(x){return x/255});case 5123:return(new Float32Array(value)).map(function(x){return x/65535});default:return value}}},{key:"_normalizeValue",value:function(value,out,start){var _this$settings=this.settings,defaultValue=_this$settings.defaultValue;_this$settings=_this$settings.size;if(Number.isFinite(value))return out[start]=value,out;if(!value)return out[start]=
defaultValue[0],out;switch(_this$settings){case 4:out[start+3]=Number.isFinite(value[3])?value[3]:defaultValue[3];case 3:out[start+2]=Number.isFinite(value[2])?value[2]:defaultValue[2];case 2:out[start+1]=Number.isFinite(value[1])?value[1]:defaultValue[1];case 1:out[start+0]=Number.isFinite(value[0])?value[0]:defaultValue[0];break;default:for(;0<=--_this$settings;)out[start+_this$settings]=Number.isFinite(value[_this$settings])?value[_this$settings]:defaultValue[_this$settings]}return out}},{key:"_areValuesEqual",
value:function(value1,value2){if(!value1||!value2)return!1;for(var size=this.size,i=0;i<size;i++)if(value1[i]!==value2[i])return!1;return!0}},{key:"buffer",get:function(){if(!this._buffer){var _this$settings2=this.settings;this._buffer=new _core.Buffer(this.gl,{id:this.id,target:_this$settings2.isIndexed?34963:34962,accessor:{type:_this$settings2.type}})}return this._buffer}},{key:"byteOffset",get:function(){var accessor=this.getAccessor();return accessor.vertexOffset?accessor.vertexOffset*getStride(accessor):
0}}]);return DataColumn}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$lib$attribute$data_column.js.map
