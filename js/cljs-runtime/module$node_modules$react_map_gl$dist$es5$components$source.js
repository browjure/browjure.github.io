shadow$provide.module$node_modules$react_map_gl$dist$es5$components$source=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function createSource(map,id,props){return map.style&&map.style._loaded?(props=_objectSpread({},props),delete props.id,
delete props.children,map.addSource(id,props),map.getSource(id)):null}function updateSource(source,props,prevProps){(0,_assert["default"])(props.id===prevProps.id,"source id changed");(0,_assert["default"])(props.type===prevProps.type,"source type changed");var changedKey="",changedKeyCount=0,key;for(key in props)"children"===key||"id"===key||(0,_deepEqual["default"])(prevProps[key],props[key])||(changedKey=key,changedKeyCount++);if(changedKeyCount)if(prevProps=props.type,"geojson"===prevProps)source.setData(props.data);
else if("image"===prevProps)source.updateImage({url:props.url,coordinates:props.coordinates});else if("canvas"!==prevProps&&"video"!==prevProps||1!==changedKeyCount||"coordinates"!==changedKey)if("vector"===prevProps&&source.setUrl)switch(changedKey){case "url":source.setUrl(props.url);break;case "tiles":source.setTiles(props.tiles)}else console.warn("Unable to update \x3cSource\x3e prop: ".concat(changedKey));else source.setCoordinates(props.coordinates)}function Source(props){var context=(0,React.useContext)(_mapContext["default"]),
propsRef=(0,React.useRef)({id:props.id,type:props.type}),_useState=(0,React.useState)(0),setStyleLoaded=(0,_slicedToArray2["default"])(_useState,2)[1],id=(0,React.useMemo)(function(){return props.id||"jsx-source-".concat(sourceCounter++)},[]),map=context.map;(0,React.useEffect)(function(){if(map){var forceUpdate=function(){return setStyleLoaded(function(version){return version+1})};map.on("styledata",forceUpdate);return function(){map.off("styledata",forceUpdate);requestAnimationFrame(function(){map.style&&
map.style._loaded&&map.removeSource(id)})}}},[map]);(context=map&&map.style&&map.getSource(id))?updateSource(context,props,propsRef.current):context=createSource(map,id,props);propsRef.current=props;return context&&React.Children.map(props.children,function(child){return child&&(0,React.cloneElement)(child,{source:id})})||null}module=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports["default"]=void 0;var _slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),React=module(require("module$node_modules$react$index"));module=module(require("module$node_modules$prop_types$index"));var _mapContext=global(require("module$node_modules$react_map_gl$dist$es5$components$map_context")),_assert=global(require("module$node_modules$react_map_gl$dist$es5$utils$assert")),
_deepEqual=global(require("module$node_modules$react_map_gl$dist$es5$utils$deep_equal")),sourceCounter=0;Source.propTypes={type:module.string.isRequired,id:module.string};exports["default"]=Source}
//# sourceMappingURL=module$node_modules$react_map_gl$dist$es5$components$source.js.map
