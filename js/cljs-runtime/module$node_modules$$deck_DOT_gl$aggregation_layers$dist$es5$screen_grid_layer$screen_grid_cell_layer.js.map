{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$screen_grid_layer$screen_grid_cell_layer.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/screen-grid-layer/screen-grid-cell-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$screen_grid_layer$screen_grid_cell_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _core = require(\"@luma.gl/core\");\n\nvar _core2 = require(\"@deck.gl/core\");\n\nvar _colorUtils = require(\"../utils/color-utils\");\n\nvar _screenGridLayerVertex = _interopRequireDefault(require(\"./screen-grid-layer-vertex.glsl\"));\n\nvar _screenGridLayerFragment = _interopRequireDefault(require(\"./screen-grid-layer-fragment.glsl\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DEFAULT_MINCOLOR = [0, 0, 0, 0];\nvar DEFAULT_MAXCOLOR = [0, 255, 0, 255];\nvar COLOR_PROPS = [\"minColor\", \"maxColor\", \"colorRange\", \"colorDomain\"];\nvar defaultProps = {\n  cellSizePixels: {\n    value: 100,\n    min: 1\n  },\n  cellMarginPixels: {\n    value: 2,\n    min: 0,\n    max: 5\n  },\n  colorDomain: null,\n  colorRange: _colorUtils.defaultColorRange\n};\n\nvar ScreenGridCellLayer = function (_Layer) {\n  (0, _inherits2[\"default\"])(ScreenGridCellLayer, _Layer);\n\n  var _super = _createSuper(ScreenGridCellLayer);\n\n  function ScreenGridCellLayer() {\n    (0, _classCallCheck2[\"default\"])(this, ScreenGridCellLayer);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(ScreenGridCellLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      return {\n        vs: _screenGridLayerVertex[\"default\"],\n        fs: _screenGridLayerFragment[\"default\"],\n        modules: [_core2.picking]\n      };\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState() {\n      var gl = this.context.gl;\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        instancePositions: {\n          size: 3,\n          update: this.calculateInstancePositions\n        },\n        instanceCounts: {\n          size: 4,\n          noAlloc: true\n        }\n      });\n      this.setState({\n        model: this._getModel(gl)\n      });\n    }\n  }, {\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      return changeFlags.somethingChanged;\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref2) {\n      var oldProps = _ref2.oldProps,\n          props = _ref2.props,\n          changeFlags = _ref2.changeFlags;\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ScreenGridCellLayer.prototype), \"updateState\", this).call(this, {\n        oldProps: oldProps,\n        props: props,\n        changeFlags: changeFlags\n      });\n      var attributeManager = this.getAttributeManager();\n\n      if (props.numInstances !== oldProps.numInstances) {\n        attributeManager.invalidateAll();\n      } else if (oldProps.cellSizePixels !== props.cellSizePixels) {\n        attributeManager.invalidate('instancePositions');\n      }\n\n      this._updateUniforms(oldProps, props, changeFlags);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(_ref3) {\n      var uniforms = _ref3.uniforms;\n      var _this$props = this.props,\n          parameters = _this$props.parameters,\n          maxTexture = _this$props.maxTexture;\n      var minColor = this.props.minColor || DEFAULT_MINCOLOR;\n      var maxColor = this.props.maxColor || DEFAULT_MAXCOLOR;\n      var colorDomain = this.props.colorDomain || [1, 0];\n      var model = this.state.model;\n      var layerUniforms = {\n        minColor: minColor,\n        maxColor: maxColor,\n        maxTexture: maxTexture,\n        colorDomain: colorDomain\n      };\n      uniforms = Object.assign(layerUniforms, uniforms);\n      model.draw({\n        uniforms: uniforms,\n        parameters: Object.assign({\n          depthTest: false,\n          depthMask: false\n        }, parameters)\n      });\n    }\n  }, {\n    key: \"calculateInstancePositions\",\n    value: function calculateInstancePositions(attribute, _ref4) {\n      var numInstances = _ref4.numInstances;\n      var _this$context$viewpor = this.context.viewport,\n          width = _this$context$viewpor.width,\n          height = _this$context$viewpor.height;\n      var cellSizePixels = this.props.cellSizePixels;\n      var numCol = Math.ceil(width / cellSizePixels);\n      var value = attribute.value,\n          size = attribute.size;\n\n      for (var i = 0; i < numInstances; i++) {\n        var x = i % numCol;\n        var y = Math.floor(i / numCol);\n        value[i * size + 0] = x * cellSizePixels / width * 2 - 1;\n        value[i * size + 1] = 1 - y * cellSizePixels / height * 2;\n        value[i * size + 2] = 0;\n      }\n    }\n  }, {\n    key: \"_getModel\",\n    value: function _getModel(gl) {\n      return new _core.Model(gl, Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new _core.Geometry({\n          drawMode: 6,\n          attributes: {\n            positions: new Float32Array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0])\n          }\n        }),\n        isInstanced: true\n      }));\n    }\n  }, {\n    key: \"_shouldUseMinMax\",\n    value: function _shouldUseMinMax() {\n      var _this$props2 = this.props,\n          minColor = _this$props2.minColor,\n          maxColor = _this$props2.maxColor,\n          colorDomain = _this$props2.colorDomain,\n          colorRange = _this$props2.colorRange;\n\n      if (minColor || maxColor) {\n        _core2.log.deprecated('ScreenGridLayer props: minColor and maxColor', 'colorRange, colorDomain')();\n\n        return true;\n      }\n\n      if (colorDomain || colorRange) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_updateUniforms\",\n    value: function _updateUniforms(oldProps, props, changeFlags) {\n      var model = this.state.model;\n\n      if (COLOR_PROPS.some(function (key) {\n        return oldProps[key] !== props[key];\n      })) {\n        model.setUniforms({\n          shouldUseMinMax: this._shouldUseMinMax()\n        });\n      }\n\n      if (oldProps.colorRange !== props.colorRange) {\n        model.setUniforms({\n          colorRange: (0, _colorUtils.colorRangeToFlatArray)(props.colorRange)\n        });\n      }\n\n      if (oldProps.cellMarginPixels !== props.cellMarginPixels || oldProps.cellSizePixels !== props.cellSizePixels || changeFlags.viewportChanged) {\n        var _this$context$viewpor2 = this.context.viewport,\n            width = _this$context$viewpor2.width,\n            height = _this$context$viewpor2.height;\n        var _this$props3 = this.props,\n            cellSizePixels = _this$props3.cellSizePixels,\n            cellMarginPixels = _this$props3.cellMarginPixels;\n        var margin = cellSizePixels > cellMarginPixels ? cellMarginPixels : 0;\n        var cellScale = new Float32Array([(cellSizePixels - margin) / width * 2, -(cellSizePixels - margin) / height * 2, 1]);\n        model.setUniforms({\n          cellScale: cellScale\n        });\n      }\n    }\n  }], [{\n    key: \"isSupported\",\n    value: function isSupported(gl) {\n      return (0, _core.hasFeatures)(gl, [_core.FEATURES.TEXTURE_FLOAT]);\n    }\n  }]);\n  return ScreenGridCellLayer;\n}(_core2.Layer);\n\nexports[\"default\"] = ScreenGridCellLayer;\nScreenGridCellLayer.layerName = 'ScreenGridCellLayer';\nScreenGridCellLayer.defaultProps = defaultProps;\n//# sourceMappingURL=screen-grid-cell-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","NewTarget","constructor","result","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Date","prototype","toString","call","e","_interopRequireDefault","Object","defineProperty","value","_classCallCheck2","_createClass2","_get2","_inherits2","_core","_core2","_colorUtils","_screenGridLayerVertex","_screenGridLayerFragment","DEFAULT_MINCOLOR","DEFAULT_MAXCOLOR","COLOR_PROPS","defaultProps","cellSizePixels","min","cellMarginPixels","max","colorDomain","colorRange","defaultColorRange","ScreenGridCellLayer","_Layer","_super","key","getShaders","vs","fs","modules","picking","initializeState","gl","context","attributeManager","getAttributeManager","addInstanced","instancePositions","size","update","calculateInstancePositions","instanceCounts","noAlloc","setState","model","_getModel","shouldUpdateState","_ref","changeFlags","somethingChanged","updateState","_ref2","oldProps","props","numInstances","invalidateAll","invalidate","_updateUniforms","draw","_ref3","uniforms","_this$props","parameters","state","assign","layerUniforms","minColor","maxColor","maxTexture","depthTest","depthMask","attribute","_ref4","_this$context$viewpor","viewport","width","height","numCol","Math","ceil","i","y","floor","Model","id","geometry","Geometry","drawMode","attributes","positions","Float32Array","isInstanced","_shouldUseMinMax","_this$props2","log","deprecated","some","setUniforms","shouldUseMinMax","colorRangeToFlatArray","viewportChanged","_this$context$viewpor2","_this$props3","margin","cellScale","isSupported","hasFeatures","FEATURES","TEXTURE_FLOAT","Layer","layerName"]
}
