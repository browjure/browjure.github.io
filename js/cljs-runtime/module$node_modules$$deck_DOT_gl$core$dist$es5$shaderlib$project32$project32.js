shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project32$project32=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;require={name:"project32",dependencies:[global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project$project"))["default"]],vs:"\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition \x3d project_position(position, position64Low);\n  if (project_uProjectionMode \x3d\x3d PROJECTION_MODE_GLOBE) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    mat3 rotation \x3d project_get_orientation_matrix(projectedPosition);\n    offset \x3d rotation * offset;\n  }\n  commonPosition \x3d vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"};
exports["default"]=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$shaderlib$project32$project32.js.map
