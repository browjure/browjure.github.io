shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$lib$picking$pick_info=function(global,require,module,exports){function getEmptyPickingInfo(_ref){var pickInfo=_ref.pickInfo,mode=_ref.mode,layerFilter=_ref.layerFilter,pixelRatio=_ref.pixelRatio,x=_ref.x,y=_ref.y,z=_ref.z,layer=pickInfo&&pickInfo.pickedLayer;z=(_ref=getViewportFromCoordinates(_ref.viewports,{x,y},layerFilter&&layer&&function(v){return layerFilter({layer,viewport:v,isPicking:!0,renderPass:"picking:".concat(mode)})}))&&_ref.unproject([x-
_ref.x,y-_ref.y],{targetZ:z});return{color:null,layer:null,viewport:_ref,index:-1,picked:!1,x,y,pixel:[x,y],coordinate:z,devicePixel:pickInfo&&[pickInfo.pickedX,pickInfo.pickedY],pixelRatio}}function getLayerPickingInfo(_ref2){var layer=_ref2.layer,info=_ref2.info;for(_ref2=_ref2.mode;layer&&info;){var sourceLayer=info.layer||layer;info.layer=layer;info=layer.getPickingInfo({info,mode:_ref2,sourceLayer});layer=layer.parent}return info}function getViewportFromCoordinates(viewports,pixel,filter){for(var i=
viewports.length-1;0<=i;i--){var viewport=viewports[i];if(viewport.containsPixel(pixel)&&(!filter||filter(viewport)))return viewport}return viewports[0]}Object.defineProperty(exports,"__esModule",{value:!0});exports.getEmptyPickingInfo=getEmptyPickingInfo;exports.processPickInfo=function(opts){var pickInfo=opts.pickInfo,lastPickedInfo=opts.lastPickedInfo,mode=opts.mode,layers=opts.layers,pickedColor=pickInfo.pickedColor,pickedLayer=pickInfo.pickedLayer,pickedObjectIndex=pickInfo.pickedObjectIndex;
pickInfo=pickedLayer?[pickedLayer]:[];if("hover"===mode){var lastPickedObjectIndex=lastPickedInfo.index,lastPickedLayerId=lastPickedInfo.layerId,pickedLayerId=pickedLayer&&pickedLayer.props.id;if(pickedLayerId!==lastPickedLayerId||pickedObjectIndex!==lastPickedObjectIndex)pickedLayerId!==lastPickedLayerId&&(layers=layers.find(function(layer){return layer.props.id===lastPickedLayerId}))&&pickInfo.unshift(layers),lastPickedInfo.layerId=pickedLayerId,lastPickedInfo.index=pickedObjectIndex,lastPickedInfo.info=
null}var baseInfo=getEmptyPickingInfo(opts),infos=new Map;infos.set(null,baseInfo);pickInfo.forEach(function(layer){var info=Object.assign({},baseInfo);layer===pickedLayer&&(info.color=pickedColor,info.index=pickedObjectIndex,info.picked=!0);info=getLayerPickingInfo({layer,info,mode});layer===pickedLayer&&"hover"===mode&&(lastPickedInfo.info=info);info&&infos.set(info.layer.id,info);if("hover"===mode&&layer.props.autoHighlight){var pickingModuleParameters={pickingSelectedColor:pickedLayer===layer?
pickedColor:null},highlightColor=layer.props.highlightColor;pickedLayer===layer&&"function"===typeof highlightColor&&(pickingModuleParameters.pickingHighlightColor=highlightColor(info));layer.setModuleParameters(pickingModuleParameters);layer.setNeedsRedraw()}});return infos};exports.getLayerPickingInfo=getLayerPickingInfo}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$lib$picking$pick_info.js.map
