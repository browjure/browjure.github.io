{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$gltf$dist$es5$gltf_writer.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,6DAAf,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1B,KAAII,YAAcN,OAAA,CAAQ,mEAAR,CAUlBE,QAAA,CAAQ,SAAR,CAAA,CAReK,CACbC,KAAM,MADOD,CAEbE,WAAY,CAAC,KAAD,CAFCF,CAGbG,UAAW,CAAC,mBAAD,CAHEH,CAIbI,WAMFA,QAAmB,CAACC,IAAD,CAAO,CACxB,IAAIC,QAA6B,CAAnB,CAAAC,SAAA,CAAUC,MAAV,EAAyCC,IAAAA,EAAzC,GAAwBF,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,EAAlF,CACIG,oBAAsBJ,OAAtBI,CAA8BC,UAC9BA;mBAAAA,CAAqC,IAAK,EAA7B,GAAAD,mBAAA,CAAiC,CAAjC,CAAqCA,mBACtD,KAAIE,WAAa,CAAC,CAAA,CAAGb,WAAH,CAAec,cAAhB,EAAgCR,IAAhC,CAAsC,IAAtC,CAA4CM,mBAA5C,CAAwDL,OAAxD,CACbQ,WAAAA,CAAc,IAAIC,WAAJ,CAAgBH,UAAhB,CAClB,KAAII,SAAW,IAAIC,QAAJ,CAAaH,UAAb,CACf,EAAC,CAAA,CAAGf,WAAH,CAAec,cAAhB,EAAgCR,IAAhC,CAAsCW,QAAtC,CAAgDL,mBAAhD,CAA4DL,OAA5D,CACA,OAAOQ,WARiB,CAVXd,CAKbkB,OAAQ,CAAA,CALKlB,CAMbM,QAAS,EANIN,CAV2G;",
"sources":["node_modules/@loaders_DOT_gl/gltf/dist/es5/gltf-writer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$gltf$dist$es5$gltf_writer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _encodeGltf = require(\"./lib/encode-gltf\");\n\nvar _default = {\n  name: 'glTF',\n  extensions: ['glb'],\n  mimeTypes: ['model/gltf-binary'],\n  encodeSync: encodeSync,\n  binary: true,\n  options: {}\n};\nexports[\"default\"] = _default;\n\nfunction encodeSync(gltf) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$byteOffset = options.byteOffset,\n      byteOffset = _options$byteOffset === void 0 ? 0 : _options$byteOffset;\n  var byteLength = (0, _encodeGltf.encodeGLTFSync)(gltf, null, byteOffset, options);\n  var arrayBuffer = new ArrayBuffer(byteLength);\n  var dataView = new DataView(arrayBuffer);\n  (0, _encodeGltf.encodeGLTFSync)(gltf, dataView, byteOffset, options);\n  return arrayBuffer;\n}\n//# sourceMappingURL=gltf-writer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_encodeGltf","_default","name","extensions","mimeTypes","encodeSync","gltf","options","arguments","length","undefined","_options$byteOffset","byteOffset","byteLength","encodeGLTFSync","arrayBuffer","ArrayBuffer","dataView","DataView","binary"]
}
