shadow$provide.module$node_modules$rxjs$dist$cjs$internal$util$lift=function(global,require,module,exports){function hasLift(source){return isFunction_1.isFunction(null===source||void 0===source?void 0:source.lift)}Object.defineProperty(exports,"__esModule",{value:!0});exports.operate=exports.hasLift=void 0;var isFunction_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isFunction");exports.hasLift=hasLift;exports.operate=function(init){return function(source){if(hasLift(source))return source.lift(function(liftedSource){try{return init(liftedSource,
this)}catch(err){this.error(err)}});throw new TypeError("Unable to lift unknown Observable type");}}}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$util$lift.js.map
