{
"version":3,
"file":"module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_table.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@luma_DOT_gl/gltools/dist/es5/polyfill/polyfill-table.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$luma_DOT_gl$gltools$dist$es5$polyfill$polyfill_table\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WEBGL2_CONTEXT_OVERRIDES = exports.WEBGL2_CONTEXT_POLYFILLS = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _assert = require(\"../utils/assert\");\n\nvar _webglChecks = require(\"../utils/webgl-checks\");\n\nvar _getParameterPolyfill = require(\"./get-parameter-polyfill\");\n\nvar _WEBGL2_CONTEXT_POLYF;\n\nvar OES_vertex_array_object = 'OES_vertex_array_object';\nvar ANGLE_instanced_arrays = 'ANGLE_instanced_arrays';\nvar WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nvar EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nvar EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\nvar ERR_VAO_NOT_SUPPORTED = 'VertexArray requires WebGL2 or OES_vertex_array_object extension';\n\nfunction getExtensionData(gl, extension) {\n  return {\n    webgl2: (0, _webglChecks.isWebGL2)(gl),\n    ext: gl.getExtension(extension)\n  };\n}\n\nvar WEBGL2_CONTEXT_POLYFILLS = (_WEBGL2_CONTEXT_POLYF = {}, (0, _defineProperty2[\"default\"])(_WEBGL2_CONTEXT_POLYF, OES_vertex_array_object, {\n  meta: {\n    suffix: 'OES'\n  },\n  createVertexArray: function createVertexArray() {\n    (0, _assert.assert)(false, ERR_VAO_NOT_SUPPORTED);\n  },\n  deleteVertexArray: function deleteVertexArray() {},\n  bindVertexArray: function bindVertexArray() {},\n  isVertexArray: function isVertexArray() {\n    return false;\n  }\n}), (0, _defineProperty2[\"default\"])(_WEBGL2_CONTEXT_POLYF, ANGLE_instanced_arrays, {\n  meta: {\n    suffix: 'ANGLE'\n  },\n  vertexAttribDivisor: function vertexAttribDivisor(location, divisor) {\n    (0, _assert.assert)(divisor === 0, 'WebGL instanced rendering not supported');\n  },\n  drawElementsInstanced: function drawElementsInstanced() {},\n  drawArraysInstanced: function drawArraysInstanced() {}\n}), (0, _defineProperty2[\"default\"])(_WEBGL2_CONTEXT_POLYF, WEBGL_draw_buffers, {\n  meta: {\n    suffix: 'WEBGL'\n  },\n  drawBuffers: function drawBuffers() {\n    (0, _assert.assert)(false);\n  }\n}), (0, _defineProperty2[\"default\"])(_WEBGL2_CONTEXT_POLYF, EXT_disjoint_timer_query, {\n  meta: {\n    suffix: 'EXT'\n  },\n  createQuery: function createQuery() {\n    (0, _assert.assert)(false);\n  },\n  deleteQuery: function deleteQuery() {\n    (0, _assert.assert)(false);\n  },\n  beginQuery: function beginQuery() {\n    (0, _assert.assert)(false);\n  },\n  endQuery: function endQuery() {},\n  getQuery: function getQuery(handle, pname) {\n    return this.getQueryObject(handle, pname);\n  },\n  getQueryParameter: function getQueryParameter(handle, pname) {\n    return this.getQueryObject(handle, pname);\n  },\n  getQueryObject: function getQueryObject() {}\n}), _WEBGL2_CONTEXT_POLYF);\nexports.WEBGL2_CONTEXT_POLYFILLS = WEBGL2_CONTEXT_POLYFILLS;\nvar WEBGL2_CONTEXT_OVERRIDES = {\n  readBuffer: function readBuffer(gl, originalFunc, attachment) {\n    if ((0, _webglChecks.isWebGL2)(gl)) {\n      originalFunc(attachment);\n    } else {}\n  },\n  getVertexAttrib: function getVertexAttrib(gl, originalFunc, location, pname) {\n    var _getExtensionData = getExtensionData(gl, ANGLE_instanced_arrays),\n        webgl2 = _getExtensionData.webgl2,\n        ext = _getExtensionData.ext;\n\n    var result;\n\n    switch (pname) {\n      case 35069:\n        result = !webgl2 ? false : undefined;\n        break;\n\n      case 35070:\n        result = !webgl2 && !ext ? 0 : undefined;\n        break;\n\n      default:\n    }\n\n    return result !== undefined ? result : originalFunc(location, pname);\n  },\n  getProgramParameter: function getProgramParameter(gl, originalFunc, program, pname) {\n    if (!(0, _webglChecks.isWebGL2)(gl)) {\n      switch (pname) {\n        case 35967:\n          return 35981;\n\n        case 35971:\n          return 0;\n\n        case 35382:\n          return 0;\n\n        default:\n      }\n    }\n\n    return originalFunc(program, pname);\n  },\n  getInternalformatParameter: function getInternalformatParameter(gl, originalFunc, target, format, pname) {\n    if (!(0, _webglChecks.isWebGL2)(gl)) {\n      switch (pname) {\n        case 32937:\n          return new Int32Array([0]);\n\n        default:\n      }\n    }\n\n    return gl.getInternalformatParameter(target, format, pname);\n  },\n  getTexParameter: function getTexParameter(gl, originalFunc, target, pname) {\n    switch (pname) {\n      case 34046:\n        var extensions = gl.luma.extensions;\n        var ext = extensions[EXT_texture_filter_anisotropic];\n        pname = ext && ext.TEXTURE_MAX_ANISOTROPY_EXT || 34046;\n        break;\n\n      default:\n    }\n\n    return originalFunc(target, pname);\n  },\n  getParameter: _getParameterPolyfill.getParameterPolyfill,\n  hint: function hint(gl, originalFunc, pname, value) {\n    return originalFunc(pname, value);\n  }\n};\nexports.WEBGL2_CONTEXT_OVERRIDES = WEBGL2_CONTEXT_OVERRIDES;\n//# sourceMappingURL=polyfill-table.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","WEBGL2_CONTEXT_OVERRIDES","WEBGL2_CONTEXT_POLYFILLS","_defineProperty2","_assert","_webglChecks","_getParameterPolyfill","_WEBGL2_CONTEXT_POLYF","OES_vertex_array_object","meta","suffix","createVertexArray","assert","ERR_VAO_NOT_SUPPORTED","deleteVertexArray","bindVertexArray","isVertexArray","ANGLE_instanced_arrays","vertexAttribDivisor","location","divisor","drawElementsInstanced","drawArraysInstanced","WEBGL_draw_buffers","drawBuffers","EXT_disjoint_timer_query","createQuery","deleteQuery","beginQuery","endQuery","getQuery","handle","pname","getQueryObject","getQueryParameter","readBuffer","gl","originalFunc","attachment","isWebGL2","getVertexAttrib","ext","getExtension","result","webgl2","undefined","getProgramParameter","program","getInternalformatParameter","target","format","Int32Array","getTexParameter","luma","extensions","EXT_texture_filter_anisotropic","TEXTURE_MAX_ANISOTROPY_EXT","getParameter","getParameterPolyfill","hint"]
}
