{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$core$dist$es5$lib$api$parse_sync.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,oEAAf,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAsBjIC,QAASA,UAAS,CAACC,IAAD,CAAOC,OAAP,CAAgBC,OAAhB,CAAyBC,OAAzB,CAAkC,CAClD,CAAC,CAAA,CAAGC,YAAH,CAAgBC,MAAjB,EAAyB,CAACF,OAA1B,EAAwD,QAAxD,GAAqC,MAAOA,QAA5C,CAAkE,uCAAlE,CAEKG,MAAA,CAAMC,OAAN,CAAcN,OAAd,CAAL,EAAgC,CAAC,CAAA,CAAGO,gBAAH,CAAoBC,cAArB,EAAqCR,OAArC,CAAhC,GACEE,OAEA,CAFUD,OAEV,CADAA,OACA,CADUD,OACV,CAAAA,OAAA,CAAU,IAHZ,CAMAC,QAAA,CAAUA,OAAV,EAAqB,EACjBQ,QAAAA,CAAmB,CAAC,CAAA,CAAGC,aAAH,CAAiBC,UAAlB,EAA8BX,OAA9B,CAAuCE,OAAvC,CACvB,KAAIU,OAAS,CAAC,CAAA,CAAGC,aAAH,CAAiBC,gBAAlB,EAAoCf,IAApC;AAA0CU,OAA1C,CAA4DR,OAA5D,CAEb,IAAI,CAACW,MAAL,CACE,MAAO,KAGTX,QAAA,CAAU,CAAC,CAAA,CAAGc,YAAH,CAAgBC,gBAAjB,EAAmCf,OAAnC,CAA4CW,MAA5C,CAAoDH,OAApD,CAGNQ,QAAAA,CADwBC,CAAC,CAAA,CAAGC,cAAH,CAAkBC,qBAAnBF,EAA0CnB,IAA1CmB,CACxBD,CAA4BA,GAEhCf,QAAA,CAAU,CAAC,CAAA,CAAGQ,aAAH,CAAiBW,gBAAlB,EAAoC,CAC5CJ,IAAKA,OADuC,CAEjCnB,SAFiC,CAGnCE,OAHmC,CAApC,CAIPC,OAJO,CAKwCC,QAAAA,CAAAA,OAIlDH,KAAA,CAAO,CAAC,CAAA,CAAGuB,QAAH,CAAYC,kCAAb,EAAiDxB,IAAjD,CAJoBa,MAIpB,CAEP,IAN2BA,MAM3B,CAAWY,aAAX,EAA4C,QAA5C,GAA4B,MAAOzB,KAAnC,CACE,MAAA,CAPyBa,MAOlB,CAAOY,aAAP,CAAqBzB,IAArB,CAA2BE,OAA3B,CAAoCC,OAApC,CAPkBU,MAOlB,CADT,KAIA,IAV2BA,MAU3B,CAAWd,SAAX,CACE,MAAA,CAXyBc,MAWlB,CAAOd,SAAP,CAAiBC,IAAjB,CAAuBE,OAAvB,CAAgCC,OAAhC;AAXkBU,MAWlB,CADT,KAIA,MAAUa,MAAJ,CAAUC,EAAA,CAAGA,MAAH,CAdWd,MAcX,CAAiBe,IAAjB,CAAuB,0EAAvB,CAAA,CAAmGD,MAAnG,CAA0GxB,OAA1G,CAAkHe,GAAlH,EAAyH,EAAzH,CAAV,CAAN,CAdA,MAAO,OA3B2C,CAnBpDW,MAAA,CAAOC,cAAP,CAAsBhC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CiC,MAAO,CAAA,CADoC,CAA7C,CAGAjC,QAAA,CAAQC,SAAR,CAAoBA,SAEpB,KAAIK,aAAeR,OAAA,CAAQ,iEAAR,CAAnB,CAEIkB,cAAgBlB,OAAA,CAAQ,yEAAR,CAFpB,CAIIY,iBAAmBZ,OAAA,CAAQ,qFAAR,CAJvB;AAMIoB,aAAepB,OAAA,CAAQ,iFAAR,CANnB,CAQI2B,SAAW3B,OAAA,CAAQ,6EAAR,CARf,CAUIe,cAAgBf,OAAA,CAAQ,kFAAR,CAVpB,CAYIwB,eAAiBxB,OAAA,CAAQ,4EAAR,CApB4G;",
"sources":["node_modules/@loaders_DOT_gl/core/dist/es5/lib/api/parse-sync.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$core$dist$es5$lib$api$parse_sync\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseSync = parseSync;\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nvar _selectLoader = require(\"./select-loader\");\n\nvar _normalizeLoader = require(\"../loader-utils/normalize-loader\");\n\nvar _optionUtils = require(\"../loader-utils/option-utils\");\n\nvar _getData = require(\"../loader-utils/get-data\");\n\nvar _contextUtils = require(\"../loader-utils/context-utils\");\n\nvar _resourceUtils = require(\"../utils/resource-utils\");\n\nfunction parseSync(data, loaders, options, context) {\n  (0, _loaderUtils.assert)(!context || typeof context !== 'string', 'parseSync no longer accepts final url');\n\n  if (!Array.isArray(loaders) && !(0, _normalizeLoader.isLoaderObject)(loaders)) {\n    context = options;\n    options = loaders;\n    loaders = null;\n  }\n\n  options = options || {};\n  var candidateLoaders = (0, _contextUtils.getLoaders)(loaders, context);\n  var loader = (0, _selectLoader.selectLoaderSync)(data, candidateLoaders, options);\n\n  if (!loader) {\n    return null;\n  }\n\n  options = (0, _optionUtils.normalizeOptions)(options, loader, candidateLoaders);\n\n  var _getResourceUrlAndTyp = (0, _resourceUtils.getResourceUrlAndType)(data),\n      url = _getResourceUrlAndTyp.url;\n\n  context = (0, _contextUtils.getLoaderContext)({\n    url: url,\n    parseSync: parseSync,\n    loaders: loaders\n  }, options);\n  return parseWithLoaderSync(loader, data, options, context);\n}\n\nfunction parseWithLoaderSync(loader, data, options, context) {\n  data = (0, _getData.getArrayBufferOrStringFromDataSync)(data, loader);\n\n  if (loader.parseTextSync && typeof data === 'string') {\n    return loader.parseTextSync(data, options, context, loader);\n  }\n\n  if (loader.parseSync) {\n    return loader.parseSync(data, options, context, loader);\n  }\n\n  throw new Error(\"\".concat(loader.name, \" loader: 'parseSync' not supported by this loader, use 'parse' instead. \").concat(context.url || ''));\n}\n//# sourceMappingURL=parse-sync.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","parseSync","data","loaders","options","context","_loaderUtils","assert","Array","isArray","_normalizeLoader","isLoaderObject","candidateLoaders","_contextUtils","getLoaders","loader","_selectLoader","selectLoaderSync","_optionUtils","normalizeOptions","url","_getResourceUrlAndTyp","_resourceUtils","getResourceUrlAndType","getLoaderContext","_getData","getArrayBufferOrStringFromDataSync","parseTextSync","Error","concat","name","Object","defineProperty","value"]
}
