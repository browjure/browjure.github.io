shadow$provide.module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$post_process_gltf=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports["default"]=function(gltf,options){return(new GLTFPostProcessor).postProcess(gltf,options)};var _typeof2=global(require("module$node_modules$$babel$runtime$helpers$typeof")),_classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_assert=global(require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$utils$assert")),
_gltfUtils=require("module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$gltf_utils$gltf_utils"),_DEFAULT_SAMPLER,COMPONENTS={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},BYTES={5120:1,5121:1,5122:2,5123:2,5125:4,5126:4};require={TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,REPEAT:10497,LINEAR:9729,NEAREST_MIPMAP_LINEAR:9986};var SAMPLER_PARAMETER_GLTF_TO_GL={magFilter:require.TEXTURE_MAG_FILTER,minFilter:require.TEXTURE_MIN_FILTER,wrapS:require.TEXTURE_WRAP_S,
wrapT:require.TEXTURE_WRAP_T},DEFAULT_SAMPLER=(_DEFAULT_SAMPLER={},(0,_defineProperty2["default"])(_DEFAULT_SAMPLER,require.TEXTURE_MAG_FILTER,require.LINEAR),(0,_defineProperty2["default"])(_DEFAULT_SAMPLER,require.TEXTURE_MIN_FILTER,require.NEAREST_MIPMAP_LINEAR),(0,_defineProperty2["default"])(_DEFAULT_SAMPLER,require.TEXTURE_WRAP_S,require.REPEAT),(0,_defineProperty2["default"])(_DEFAULT_SAMPLER,require.TEXTURE_WRAP_,require.REPEAT),_DEFAULT_SAMPLER),GLTFPostProcessor=function(){function GLTFPostProcessor(){(0,
_classCallCheck2["default"])(this,GLTFPostProcessor)}(0,_createClass2["default"])(GLTFPostProcessor,[{key:"postProcess",value:function(gltf){var options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},json=gltf.json,_gltf$buffers=gltf.buffers;_gltf$buffers=void 0===_gltf$buffers?[]:_gltf$buffers;var _gltf$images=gltf.images;_gltf$images=void 0===_gltf$images?[]:_gltf$images;var _gltf$baseUri=gltf.baseUri;_gltf$baseUri=void 0===_gltf$baseUri?"":_gltf$baseUri;(0,_assert["default"])(json);
this.baseUri=_gltf$baseUri;this.json=json;this.buffers=_gltf$buffers;this.images=_gltf$images;this._resolveTree(this.json,options);return this.json}},{key:"_resolveTree",value:function(json){var _this=this;json.bufferViews&&(json.bufferViews=json.bufferViews.map(function(bufView,i){return _this._resolveBufferView(bufView,i)}));json.images&&(json.images=json.images.map(function(image,i){return _this._resolveImage(image,i)}));json.samplers&&(json.samplers=json.samplers.map(function(sampler,i){return _this._resolveSampler(sampler,
i)}));json.textures&&(json.textures=json.textures.map(function(texture,i){return _this._resolveTexture(texture,i)}));json.accessors&&(json.accessors=json.accessors.map(function(accessor,i){return _this._resolveAccessor(accessor,i)}));json.materials&&(json.materials=json.materials.map(function(material,i){return _this._resolveMaterial(material,i)}));json.meshes&&(json.meshes=json.meshes.map(function(mesh,i){return _this._resolveMesh(mesh,i)}));json.nodes&&(json.nodes=json.nodes.map(function(node,i){return _this._resolveNode(node,
i)}));json.skins&&(json.skins=json.skins.map(function(skin,i){return _this._resolveSkin(skin,i)}));json.scenes&&(json.scenes=json.scenes.map(function(scene,i){return _this._resolveScene(scene,i)}));void 0!==json.scene&&(json.scene=json.scenes[this.json.scene])}},{key:"getScene",value:function(index){return this._get("scenes",index)}},{key:"getNode",value:function(index){return this._get("nodes",index)}},{key:"getSkin",value:function(index){return this._get("skins",index)}},{key:"getMesh",value:function(index){return this._get("meshes",
index)}},{key:"getMaterial",value:function(index){return this._get("materials",index)}},{key:"getAccessor",value:function(index){return this._get("accessors",index)}},{key:"getCamera",value:function(index){return null}},{key:"getTexture",value:function(index){return this._get("textures",index)}},{key:"getSampler",value:function(index){return this._get("samplers",index)}},{key:"getImage",value:function(index){return this._get("images",index)}},{key:"getBufferView",value:function(index){return this._get("bufferViews",
index)}},{key:"getBuffer",value:function(index){return this._get("buffers",index)}},{key:"_get",value:function(array,index){if("object"===(0,_typeof2["default"])(index))return index;var object=this.json[array]&&this.json[array][index];object||console.warn("glTF file error: Could not find ".concat(array,"[").concat(index,"]"));return object}},{key:"_resolveScene",value:function(scene,index){var _this2=this;scene.id=scene.id||"scene-".concat(index);scene.nodes=(scene.nodes||[]).map(function(node){return _this2.getNode(node)});
return scene}},{key:"_resolveNode",value:function(node,index){var _this3=this;node.id=node.id||"node-".concat(index);node.children&&(node.children=node.children.map(function(child){return _this3.getNode(child)}));void 0!==node.mesh&&(node.mesh=this.getMesh(node.mesh));void 0!==node.camera&&(node.camera=this.getCamera(node.camera));void 0!==node.skin&&(node.skin=this.getSkin(node.skin));return node}},{key:"_resolveSkin",value:function(skin,index){skin.id=skin.id||"skin-".concat(index);skin.inverseBindMatrices=
this.getAccessor(skin.inverseBindMatrices);return skin}},{key:"_resolveMesh",value:function(mesh,index){var _this4=this;mesh.id=mesh.id||"mesh-".concat(index);mesh.primitives&&(mesh.primitives=mesh.primitives.map(function(primitive){primitive=_objectSpread({},primitive);var attributes=primitive.attributes;primitive.attributes={};for(var attribute in attributes)primitive.attributes[attribute]=_this4.getAccessor(attributes[attribute]);void 0!==primitive.indices&&(primitive.indices=_this4.getAccessor(primitive.indices));
void 0!==primitive.material&&(primitive.material=_this4.getMaterial(primitive.material));return primitive}));return mesh}},{key:"_resolveMaterial",value:function(material,index){material.id=material.id||"material-".concat(index);material.normalTexture&&(material.normalTexture=_objectSpread({},material.normalTexture),material.normalTexture.texture=this.getTexture(material.normalTexture.index));material.occlusionTexture&&(material.occlustionTexture=_objectSpread({},material.occlustionTexture),material.occlusionTexture.texture=
this.getTexture(material.occlusionTexture.index));material.emissiveTexture&&(material.emmisiveTexture=_objectSpread({},material.emmisiveTexture),material.emissiveTexture.texture=this.getTexture(material.emissiveTexture.index));material.pbrMetallicRoughness&&(material.pbrMetallicRoughness=_objectSpread({},material.pbrMetallicRoughness),index=material.pbrMetallicRoughness,index.baseColorTexture&&(index.baseColorTexture=_objectSpread({},index.baseColorTexture),index.baseColorTexture.texture=this.getTexture(index.baseColorTexture.index)),
index.metallicRoughnessTexture&&(index.metallicRoughnessTexture=_objectSpread({},index.metallicRoughnessTexture),index.metallicRoughnessTexture.texture=this.getTexture(index.metallicRoughnessTexture.index)));return material}},{key:"_resolveAccessor",value:function(accessor,index){accessor.id=accessor.id||"accessor-".concat(index);void 0!==accessor.bufferView&&(accessor.bufferView=this.getBufferView(accessor.bufferView));accessor.bytesPerComponent=BYTES[accessor.componentType];accessor.components=
COMPONENTS[accessor.type];accessor.bytesPerElement=accessor.bytesPerComponent*accessor.components;if(accessor.bufferView){index=accessor.bufferView.buffer;var _getAccessorArrayType=(0,_gltfUtils.getAccessorArrayTypeAndLength)(accessor,accessor.bufferView);accessor.value=new _getAccessorArrayType.ArrayType(index.arrayBuffer,(accessor.bufferView.byteOffset||0)+(accessor.byteOffset||0)+index.byteOffset,_getAccessorArrayType.length)}return accessor}},{key:"_resolveTexture",value:function(texture,index){texture.id=
texture.id||"texture-".concat(index);texture.sampler="sampler"in texture?this.getSampler(texture.sampler):DEFAULT_SAMPLER;texture.source=this.getImage(texture.source);return texture}},{key:"_resolveSampler",value:function(sampler,index){sampler.id=sampler.id||"sampler-".concat(index);sampler.parameters={};for(var key in sampler)index=this._enumSamplerParameter(key),void 0!==index&&(sampler.parameters[index]=sampler[key]);return sampler}},{key:"_enumSamplerParameter",value:function(key){return SAMPLER_PARAMETER_GLTF_TO_GL[key]}},
{key:"_resolveImage",value:function(image,index){image.id=image.id||"image-".concat(index);void 0!==image.bufferView&&(image.bufferView=this.getBufferView(image.bufferView));if(index=this.images[index])image.image=index;return image}},{key:"_resolveBufferView",value:function(bufferView,index){bufferView.id=bufferView.id||"bufferView-".concat(index);var bufferIndex=bufferView.buffer;bufferView.buffer=this.buffers[bufferIndex];index=this.buffers[bufferIndex].arrayBuffer;bufferIndex=this.buffers[bufferIndex].byteOffset||
0;"byteOffset"in bufferView&&(bufferIndex+=bufferView.byteOffset);bufferView.data=new Uint8Array(index,bufferIndex,bufferView.byteLength);return bufferView}},{key:"_resolveCamera",value:function(camera,index){camera.id=camera.id||"camera-".concat(index);return camera}}]);return GLTFPostProcessor}()}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$post_process_gltf.js.map
