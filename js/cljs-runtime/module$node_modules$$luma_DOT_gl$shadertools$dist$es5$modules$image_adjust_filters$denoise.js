shadow$provide.module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_adjust_filters$denoise=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.denoise=void 0;exports.denoise={name:"denoise",uniforms:{strength:{value:.5,min:0,max:.1,adjust:function(strength){return.53+200*Math.pow(1-strength,4)}}},fs:"uniform float strength;\n\nvec4 denoise_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  float adjustedExponent \x3d 3. + 200. * pow(1. - strength, 4.);\n\n  vec4 center \x3d texture2D(texture, texCoord);\n  vec4 color \x3d vec4(0.0);\n  float total \x3d 0.0;\n  for (float x \x3d -4.0; x \x3c\x3d 4.0; x +\x3d 1.0) {\n    for (float y \x3d -4.0; y \x3c\x3d 4.0; y +\x3d 1.0) {\n      vec4 sample \x3d texture2D(texture, texCoord + vec2(x, y) / texSize);\n      float weight \x3d 1.0 - abs(dot(sample.rgb - center.rgb, vec3(0.25)));\n      weight \x3d pow(weight, adjustedExponent);\n      color +\x3d sample * weight;\n      total +\x3d weight;\n    }\n  }\n\n  return color / total;\n}\n",
passes:[{sampler:!0},{sampler:!0}]}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_adjust_filters$denoise.js.map
