shadow$provide.module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$hexagon_layer$hexagon_layer=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<
arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();
return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,
[],function(){})),!0}catch(e){return!1}}function nop(){}var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_classCallCheck2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$createClass")),
_get2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$get")),_inherits2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),_layers=
require("module$node_modules$$deck_DOT_gl$layers$dist$es5$index");global=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$color_utils");module=require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$hexagon_layer$hexagon_aggregator");var _cpuAggregator=_interopRequireDefault(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$utils$cpu_aggregator"));require=_interopRequireDefault(require("module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$aggregation_layer"));
global={colorDomain:null,colorRange:global.defaultColorRange,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",value:0,min:0,max:100},upperPercentile:{type:"number",value:100,min:0,max:100},colorScaleType:"quantize",onSetColorDomain:nop,elevationDomain:null,elevationRange:[0,1E3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationLowerPercentile:{type:"number",
value:0,min:0,max:100},elevationUpperPercentile:{type:"number",value:100,min:0,max:100},elevationScale:{type:"number",min:0,value:1},elevationScaleType:"linear",onSetElevationDomain:nop,radius:{type:"number",value:1E3,min:1},coverage:{type:"number",min:0,max:1,value:1},extruded:!1,hexagonAggregator:module.pointToHexbin,getPosition:{type:"accessor",value:function(x){return x.position}},material:!0,_filterData:{type:"function",value:null,optional:!0}};require=function(_AggregationLayer){function HexagonLayer(){(0,
_classCallCheck2["default"])(this,HexagonLayer);return _super.apply(this,arguments)}(0,_inherits2["default"])(HexagonLayer,_AggregationLayer);var _super=_createSuper(HexagonLayer);(0,_createClass2["default"])(HexagonLayer,[{key:"shouldUpdateState",value:function(_ref){return _ref.changeFlags.somethingChanged}},{key:"initializeState",value:function(){var cpuAggregator=new _cpuAggregator["default"]({getAggregator:function(props){return props.hexagonAggregator},getCellSize:function(props){return props.radius}});
this.state={cpuAggregator,aggregatorState:cpuAggregator.state,hexagonVertices:null};this.getAttributeManager().add({positions:{size:3,accessor:"getPosition"}})}},{key:"updateState",value:function(opts){(0,_get2["default"])((0,_getPrototypeOf2["default"])(HexagonLayer.prototype),"updateState",this).call(this,opts);var _this$state=this.state,cpuAggregator=_this$state.cpuAggregator;_this$state=_this$state.hexagonVertices;opts.changeFlags.propsOrDataChanged&&this.setState({aggregatorState:cpuAggregator.updateState(opts,
{viewport:this.context.viewport,attributes:this.getAttributes()})});(opts=(cpuAggregator.state.layerData||{}).hexagonVertices)&&_this$state!==opts?(cpuAggregator=this.convertLatLngToMeterOffset(opts))&&this.setState({hexagonVertices:opts,vertices:cpuAggregator}):this.updateRadiusAngle()}},{key:"updateRadiusAngle",value:function(vertices){vertices=this.context.viewport.getDistanceScales().unitsPerMeter;var cpuAggregator=this.state.cpuAggregator;cpuAggregator.state.layerData&&cpuAggregator.state.layerData.radiusCommon&&
this.setState({angle:90,radius:cpuAggregator.state.layerData.radiusCommon/vertices[0]})}},{key:"convertLatLngToMeterOffset",value:function(hexagonVertices){var viewport=this.context.viewport;if(Array.isArray(hexagonVertices)&&6===hexagonVertices.length){var vertex0=hexagonVertices[0],vertex3=hexagonVertices[3];vertex0=[(vertex0[0]+vertex3[0])/2,(vertex0[1]+vertex3[1])/2];var centroidFlat=viewport.projectFlat(vertex0),metersPerUnit=viewport.getDistanceScales(vertex0).metersPerUnit;return hexagonVertices.map(function(vt){vt=
viewport.projectFlat(vt);return[(vt[0]-centroidFlat[0])*metersPerUnit[0],(vt[1]-centroidFlat[1])*metersPerUnit[1]]})}_core.log.error("HexagonLayer: hexagonVertices needs to be an array of 6 points")();return null}},{key:"getPickingInfo",value:function(_ref3){return this.state.cpuAggregator.getPickingInfo({info:_ref3.info})}},{key:"_onGetSublayerColor",value:function(cell){return this.state.cpuAggregator.getAccessor("fillColor")(cell)}},{key:"_onGetSublayerElevation",value:function(cell){return this.state.cpuAggregator.getAccessor("elevation")(cell)}},
{key:"_getSublayerUpdateTriggers",value:function(){return this.state.cpuAggregator.getUpdateTriggers(this.props)}},{key:"renderLayers",value:function(){var _this$props=this.props,elevationScale=_this$props.elevationScale,extruded=_this$props.extruded,coverage=_this$props.coverage,material=_this$props.material;_this$props=_this$props.transitions;var _this$state2=this.state,angle=_this$state2.angle,radius=_this$state2.radius,cpuAggregator=_this$state2.cpuAggregator;_this$state2=_this$state2.vertices;
var SubLayerClass=this.getSubLayerClass("hexagon-cell",_layers.ColumnLayer),updateTriggers=this._getSublayerUpdateTriggers();return new SubLayerClass(_objectSpread(_objectSpread({},_this$state2&&_this$state2.length?{vertices:_this$state2,radius:1}:{radius,angle}),{},{diskResolution:6,elevationScale,extruded,coverage,material,getFillColor:this._onGetSublayerColor.bind(this),getElevation:this._onGetSublayerElevation.bind(this),transitions:_this$props&&{getFillColor:_this$props.getColorValue||_this$props.getColorWeight,
getElevation:_this$props.getElevationValue||_this$props.getElevationWeight}}),this.getSubLayerProps({id:"hexagon-cell",updateTriggers}),{data:cpuAggregator.state.layerData.data})}}]);return HexagonLayer}(require["default"]);exports["default"]=require;require.layerName="HexagonLayer";require.defaultProps=global}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$hexagon_layer$hexagon_layer.js.map
