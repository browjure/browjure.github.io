shadow$provide.module$node_modules$$math_DOT_gl$polygon$dist$es5$lineclip=function(global,require,module,exports){function intersect(a,b,edge,bbox){var out=4<arguments.length&&void 0!==arguments[4]?arguments[4]:[];if(edge&8){var t=(bbox[3]-a[1])/(b[1]-a[1]);var snap=3}else if(edge&4)t=(bbox[1]-a[1])/(b[1]-a[1]),snap=1;else if(edge&2)t=(bbox[2]-a[0])/(b[0]-a[0]),snap=2;else if(edge&1)t=(bbox[0]-a[0])/(b[0]-a[0]),snap=0;else return null;for(var i=0;i<a.length;i++)out[i]=(snap&1)===i?bbox[snap]:t*(b[i]-
a[i])+a[i];return out}function bitCode(p,bbox){var code=0;p[0]<bbox[0]?code|=1:p[0]>bbox[2]&&(code|=2);p[1]<bbox[1]?code|=4:p[1]>bbox[3]&&(code|=8);return code}Object.defineProperty(exports,"__esModule",{value:!0});exports.clipPolyline=function(positions,bbox){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},_options$size=options.size;_options$size=void 0===_options$size?2:_options$size;var _options$startIndex=options.startIndex;_options$startIndex=void 0===_options$startIndex?
0:_options$startIndex;options=options.endIndex;options=((void 0===options?positions.length:options)-_options$startIndex)/_options$size;for(var result=[],part=[],a,b,codeA=-1,codeB,lastCode,i=1;i<options;i++){a=(0,_utils.getPointAtIndex)(positions,i-1,_options$size,_options$startIndex,a);b=(0,_utils.getPointAtIndex)(positions,i,_options$size,_options$startIndex,b);0>codeA&&(codeA=bitCode(a,bbox));for(codeB=lastCode=bitCode(b,bbox);;)if(codeA|codeB)if(codeA&codeB)break;else codeA?(intersect(a,b,codeA,
bbox,a),codeA=bitCode(a,bbox)):(intersect(a,b,codeB,bbox,b),codeB=bitCode(b,bbox));else{(0,_utils.push)(part,a);codeB!==lastCode?((0,_utils.push)(part,b),i<options-1&&(result.push(part),part=[])):i===options-1&&(0,_utils.push)(part,b);break}codeA=lastCode}part.length&&result.push(part);return result};exports.clipPolygon=function(positions,bbox){var options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},_options$size2=options.size;_options$size2=void 0===_options$size2?2:_options$size2;
var _options$endIndex2=options.endIndex;options=options.startIndex;options=void 0===options?0:options;_options$endIndex2=((void 0===_options$endIndex2?positions.length:_options$endIndex2)-options)/_options$size2;for(var result,p,prev,inside,prevInside,edge=1;8>=edge;edge*=2){result=[];prev=(0,_utils.getPointAtIndex)(positions,_options$endIndex2-1,_options$size2,options,prev);prevInside=!(bitCode(prev,bbox)&edge);for(var i=0;i<_options$endIndex2;i++)p=(0,_utils.getPointAtIndex)(positions,i,_options$size2,
options,p),inside=!(bitCode(p,bbox)&edge),inside!==prevInside&&(0,_utils.push)(result,intersect(prev,p,edge,bbox)),inside&&(0,_utils.push)(result,p),(0,_utils.copy)(prev,p),prevInside=inside;positions=result;options=0;_options$endIndex2=result.length/_options$size2;if(!_options$endIndex2)break}return result};exports.intersect=intersect;exports.bitCode=bitCode;var _utils=require("module$node_modules$$math_DOT_gl$polygon$dist$es5$utils")}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$polygon$dist$es5$lineclip.js.map
