{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$contour_layer$contour_layer.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/contour-layer/contour-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$contour_layer$contour_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _layers = require(\"@deck.gl/layers\");\n\nvar _contourUtils = require(\"./contour-utils\");\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _gpuGridAggregator = _interopRequireDefault(require(\"../utils/gpu-grid-aggregation/gpu-grid-aggregator\"));\n\nvar _aggregationOperationUtils = require(\"../utils/aggregation-operation-utils\");\n\nvar _gridAggregationUtils = require(\"../utils/grid-aggregation-utils\");\n\nvar _gridAggregationLayer = _interopRequireDefault(require(\"../grid-aggregation-layer\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DEFAULT_COLOR = [255, 255, 255, 255];\nvar DEFAULT_STROKE_WIDTH = 1;\nvar DEFAULT_THRESHOLD = 1;\nvar defaultProps = {\n  cellSize: {\n    type: 'number',\n    min: 1,\n    max: 1000,\n    value: 1000\n  },\n  getPosition: {\n    type: 'accessor',\n    value: function value(x) {\n      return x.position;\n    }\n  },\n  getWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  gpuAggregation: true,\n  aggregation: 'SUM',\n  contours: [{\n    threshold: DEFAULT_THRESHOLD\n  }],\n  zOffset: 0.005\n};\nvar POSITION_ATTRIBUTE_NAME = 'positions';\nvar DIMENSIONS = {\n  data: {\n    props: ['cellSize']\n  },\n  weights: {\n    props: ['aggregation'],\n    accessors: ['getWeight']\n  }\n};\n\nvar ContourLayer = function (_GridAggregationLayer) {\n  (0, _inherits2[\"default\"])(ContourLayer, _GridAggregationLayer);\n\n  var _super = _createSuper(ContourLayer);\n\n  function ContourLayer() {\n    (0, _classCallCheck2[\"default\"])(this, ContourLayer);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(ContourLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      var _attributeManager$add;\n\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ContourLayer.prototype), \"initializeState\", this).call(this, {\n        dimensions: DIMENSIONS\n      });\n      this.setState({\n        contourData: {},\n        projectPoints: false,\n        weights: {\n          count: {\n            size: 1,\n            operation: _aggregationOperationUtils.AGGREGATION_OPERATION.SUM\n          }\n        }\n      });\n      var attributeManager = this.getAttributeManager();\n      attributeManager.add((_attributeManager$add = {}, (0, _defineProperty2[\"default\"])(_attributeManager$add, POSITION_ATTRIBUTE_NAME, {\n        size: 3,\n        accessor: 'getPosition',\n        type: 5130,\n        fp64: this.use64bitPositions()\n      }), (0, _defineProperty2[\"default\"])(_attributeManager$add, \"count\", {\n        size: 3,\n        accessor: 'getWeight'\n      }), _attributeManager$add));\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ContourLayer.prototype), \"updateState\", this).call(this, opts);\n      var contoursChanged = false;\n      var oldProps = opts.oldProps,\n          props = opts.props;\n      var aggregationDirty = this.state.aggregationDirty;\n\n      if (oldProps.contours !== props.contours || oldProps.zOffset !== props.zOffset) {\n        contoursChanged = true;\n\n        this._updateThresholdData(opts.props);\n      }\n\n      if (this.getNumInstances() > 0 && (aggregationDirty || contoursChanged)) {\n        this._generateContours();\n      }\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this$state$contourDa = this.state.contourData,\n          contourSegments = _this$state$contourDa.contourSegments,\n          contourPolygons = _this$state$contourDa.contourPolygons;\n      var LinesSubLayerClass = this.getSubLayerClass('lines', _layers.LineLayer);\n      var BandsSubLayerClass = this.getSubLayerClass('bands', _layers.SolidPolygonLayer);\n      var lineLayer = contourSegments && contourSegments.length > 0 && new LinesSubLayerClass(this.getSubLayerProps({\n        id: 'lines'\n      }), {\n        data: this.state.contourData.contourSegments,\n        getSourcePosition: function getSourcePosition(d) {\n          return d.start;\n        },\n        getTargetPosition: function getTargetPosition(d) {\n          return d.end;\n        },\n        getColor: function getColor(d) {\n          return d.contour.color || DEFAULT_COLOR;\n        },\n        getWidth: function getWidth(d) {\n          return d.contour.strokeWidth || DEFAULT_STROKE_WIDTH;\n        }\n      });\n      var bandsLayer = contourPolygons && contourPolygons.length > 0 && new BandsSubLayerClass(this.getSubLayerProps({\n        id: 'bands'\n      }), {\n        data: this.state.contourData.contourPolygons,\n        getPolygon: function getPolygon(d) {\n          return d.vertices;\n        },\n        getFillColor: function getFillColor(d) {\n          return d.contour.color || DEFAULT_COLOR;\n        }\n      });\n      return [lineLayer, bandsLayer];\n    }\n  }, {\n    key: \"updateAggregationState\",\n    value: function updateAggregationState(opts) {\n      var props = opts.props,\n          oldProps = opts.oldProps;\n      var cellSize = props.cellSize,\n          coordinateSystem = props.coordinateSystem;\n      var viewport = this.context.viewport;\n      var cellSizeChanged = oldProps.cellSize !== cellSize;\n      var gpuAggregation = props.gpuAggregation;\n\n      if (this.state.gpuAggregation !== props.gpuAggregation) {\n        if (gpuAggregation && !_gpuGridAggregator[\"default\"].isSupported(this.context.gl)) {\n          _core.log.warn('GPU Grid Aggregation not supported, falling back to CPU')();\n\n          gpuAggregation = false;\n        }\n      }\n\n      var gpuAggregationChanged = gpuAggregation !== this.state.gpuAggregation;\n      this.setState({\n        gpuAggregation: gpuAggregation\n      });\n      var dimensions = this.state.dimensions;\n      var positionsChanged = this.isAttributeChanged(POSITION_ATTRIBUTE_NAME);\n      var data = dimensions.data,\n          weights = dimensions.weights;\n      var boundingBox = this.state.boundingBox;\n\n      if (positionsChanged) {\n        boundingBox = (0, _gridAggregationUtils.getBoundingBox)(this.getAttributes(), this.getNumInstances());\n        this.setState({\n          boundingBox: boundingBox\n        });\n      }\n\n      if (positionsChanged || cellSizeChanged) {\n        var _getGridParams = (0, _gridAggregationUtils.getGridParams)(boundingBox, cellSize, viewport, coordinateSystem),\n            gridOffset = _getGridParams.gridOffset,\n            translation = _getGridParams.translation,\n            width = _getGridParams.width,\n            height = _getGridParams.height,\n            numCol = _getGridParams.numCol,\n            numRow = _getGridParams.numRow;\n\n        this.allocateResources(numRow, numCol);\n        this.setState({\n          gridOffset: gridOffset,\n          boundingBox: boundingBox,\n          translation: translation,\n          posOffset: translation.slice(),\n          gridOrigin: [-1 * translation[0], -1 * translation[1]],\n          width: width,\n          height: height,\n          numCol: numCol,\n          numRow: numRow\n        });\n      }\n\n      var aggregationDataDirty = positionsChanged || gpuAggregationChanged || this.isAggregationDirty(opts, {\n        dimension: data,\n        compareAll: gpuAggregation\n      });\n      var aggregationWeightsDirty = this.isAggregationDirty(opts, {\n        dimension: weights\n      });\n\n      if (aggregationWeightsDirty) {\n        this._updateAccessors(opts);\n      }\n\n      if (aggregationDataDirty || aggregationWeightsDirty) {\n        this._resetResults();\n      }\n\n      this.setState({\n        aggregationDataDirty: aggregationDataDirty,\n        aggregationWeightsDirty: aggregationWeightsDirty\n      });\n    }\n  }, {\n    key: \"_updateAccessors\",\n    value: function _updateAccessors(opts) {\n      var _opts$props = opts.props,\n          getWeight = _opts$props.getWeight,\n          aggregation = _opts$props.aggregation,\n          data = _opts$props.data;\n      var count = this.state.weights.count;\n\n      if (count) {\n        count.getWeight = getWeight;\n        count.operation = _aggregationOperationUtils.AGGREGATION_OPERATION[aggregation];\n      }\n\n      this.setState({\n        getValue: (0, _aggregationOperationUtils.getValueFunc)(aggregation, getWeight, {\n          data: data\n        })\n      });\n    }\n  }, {\n    key: \"_resetResults\",\n    value: function _resetResults() {\n      var count = this.state.weights.count;\n\n      if (count) {\n        count.aggregationData = null;\n      }\n    }\n  }, {\n    key: \"_generateContours\",\n    value: function _generateContours() {\n      var _this$state = this.state,\n          numCol = _this$state.numCol,\n          numRow = _this$state.numRow,\n          gridOrigin = _this$state.gridOrigin,\n          gridOffset = _this$state.gridOffset,\n          thresholdData = _this$state.thresholdData;\n      var count = this.state.weights.count;\n      var aggregationData = count.aggregationData;\n\n      if (!aggregationData) {\n        aggregationData = count.aggregationBuffer.getData();\n        count.aggregationData = aggregationData;\n      }\n\n      var _GPUGridAggregator$ge = _gpuGridAggregator[\"default\"].getCellData({\n        countsData: aggregationData\n      }),\n          cellWeights = _GPUGridAggregator$ge.cellWeights;\n\n      var contourData = (0, _contourUtils.generateContours)({\n        thresholdData: thresholdData,\n        cellWeights: cellWeights,\n        gridSize: [numCol, numRow],\n        gridOrigin: gridOrigin,\n        cellSize: [gridOffset.xOffset, gridOffset.yOffset]\n      });\n      this.setState({\n        contourData: contourData\n      });\n    }\n  }, {\n    key: \"_updateThresholdData\",\n    value: function _updateThresholdData(props) {\n      var contours = props.contours,\n          zOffset = props.zOffset;\n      var count = contours.length;\n      var thresholdData = new Array(count);\n\n      for (var i = 0; i < count; i++) {\n        var contour = contours[i];\n        thresholdData[i] = {\n          contour: contour,\n          zIndex: contour.zIndex || i,\n          zOffset: zOffset\n        };\n      }\n\n      this.setState({\n        thresholdData: thresholdData\n      });\n    }\n  }]);\n  return ContourLayer;\n}(_gridAggregationLayer[\"default\"]);\n\nexports[\"default\"] = ContourLayer;\nContourLayer.layerName = 'ContourLayer';\nContourLayer.defaultProps = defaultProps;\n//# sourceMappingURL=contour-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","NewTarget","constructor","result","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Date","prototype","toString","call","e","_interopRequireDefault","Object","defineProperty","value","_defineProperty2","_classCallCheck2","_createClass2","_get2","_inherits2","_layers","_contourUtils","_core","_gpuGridAggregator","_aggregationOperationUtils","_gridAggregationUtils","DEFAULT_COLOR","DIMENSIONS","data","props","weights","accessors","ContourLayer","_GridAggregationLayer","_super","key","initializeState","_attributeManager$add","dimensions","setState","contourData","projectPoints","count","size","operation","AGGREGATION_OPERATION","SUM","attributeManager","getAttributeManager","add","POSITION_ATTRIBUTE_NAME","accessor","type","fp64","use64bitPositions","updateState","opts","contoursChanged","oldProps","aggregationDirty","state","contours","zOffset","_updateThresholdData","getNumInstances","_generateContours","renderLayers","_this$state$contourDa","contourSegments","contourPolygons","LinesSubLayerClass","getSubLayerClass","LineLayer","BandsSubLayerClass","SolidPolygonLayer","lineLayer","length","getSubLayerProps","id","getSourcePosition","d","start","getTargetPosition","end","getColor","contour","color","getWidth","strokeWidth","DEFAULT_STROKE_WIDTH","bandsLayer","getPolygon","vertices","getFillColor","updateAggregationState","cellSize","coordinateSystem","viewport","context","cellSizeChanged","gpuAggregation","isSupported","gl","log","warn","gpuAggregationChanged","positionsChanged","isAttributeChanged","boundingBox","getBoundingBox","getAttributes","_getGridParams","getGridParams","gridOffset","translation","width","height","numCol","numRow","allocateResources","posOffset","slice","gridOrigin","aggregationDataDirty","isAggregationDirty","dimension","compareAll","aggregationWeightsDirty","_updateAccessors","_resetResults","_opts$props","getWeight","aggregation","getValue","getValueFunc","aggregationData","_this$state","thresholdData","aggregationBuffer","getData","cellWeights","_GPUGridAggregator$ge","getCellData","countsData","generateContours","gridSize","xOffset","yOffset","Array","i","zIndex","_gridAggregationLayer","layerName","defaultProps","min","max","getPosition","x","position","threshold","DEFAULT_THRESHOLD"]
}
