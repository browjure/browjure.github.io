shadow$provide.module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_blur_filters$zoomblur=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.zoomBlur=void 0;global=require("module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$utils$random");exports.zoomBlur={name:"zoomBlur",uniforms:{center:[.5,.5],strength:{value:.3,min:0,softMax:1}},fs:"\nuniform vec2 center;\nuniform float strength;\n\nvec4 zoomBlur_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec4 color \x3d vec4(0.0);\n  float total \x3d 0.0;\n  vec2 toCenter \x3d center * texSize - texCoord * texSize;\n  float offset \x3d random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n  for (float t \x3d 0.0; t \x3c\x3d 40.0; t++) {\n    float percent \x3d (t + offset) / 40.0;\n    float weight \x3d 4.0 * (percent - percent * percent);\n    vec4 sample \x3d texture2D(texture, texCoord + toCenter * percent * strength / texSize);\n    sample.rgb *\x3d sample.a;\n\n    color +\x3d sample * weight;\n    total +\x3d weight;\n  }\n\n  color \x3d color / total;\n  color.rgb /\x3d color.a + 0.00001;\n\n  return color;\n}\n",
dependencies:[global.random],passes:[{sampler:!0}]}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_blur_filters$zoomblur.js.map
