shadow$provide.module$node_modules$$luma_DOT_gl$engine$dist$es5$geometries$truncated_cone_geometry=function(global,require,module,exports){function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=
null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=
(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,
[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=
global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf"));global=global(require("module$node_modules$$luma_DOT_gl$engine$dist$es5$geometry$geometry"));var _webgl=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$index"),INDEX_OFFSETS={x:[2,0,1],y:[0,1,2],z:[1,2,0]};require=function(_Geometry){function TruncatedConeGeometry(){var props=0<arguments.length&&void 0!==arguments[0]?
arguments[0]:{};(0,_classCallCheck2["default"])(this,TruncatedConeGeometry);var _props$id=props.id;_props$id=void 0===_props$id?(0,_webgl.uid)("truncated-code-geometry"):_props$id;var _props$bottomRadius=props.bottomRadius;_props$bottomRadius=void 0===_props$bottomRadius?0:_props$bottomRadius;var _props$topRadius=props.topRadius,topRadius=void 0===_props$topRadius?0:_props$topRadius;_props$topRadius=props.height;var height=void 0===_props$topRadius?1:_props$topRadius;_props$topRadius=props.nradial;
_props$topRadius=void 0===_props$topRadius?10:_props$topRadius;var _props$nvertical=props.nvertical;_props$nvertical=void 0===_props$nvertical?10:_props$nvertical;var _props$verticalAxis=props.verticalAxis,verticalAxis=void 0===_props$verticalAxis?"y":_props$verticalAxis;_props$verticalAxis=props.topCap;var topCap=void 0===_props$verticalAxis?!1:_props$verticalAxis;_props$verticalAxis=props.bottomCap;var bottomCap=void 0===_props$verticalAxis?!1:_props$verticalAxis;_props$verticalAxis=(topCap?2:0)+
(bottomCap?2:0);var numVertices=(_props$topRadius+1)*(_props$nvertical+1+_props$verticalAxis),slant=Math.atan2(_props$bottomRadius-topRadius,height),msin=Math.sin,mcos=Math.cos,mpi=Math.PI,cosSlant=mcos(slant);slant=msin(slant);var start=topCap?-2:0,end=_props$nvertical+(bottomCap?2:0);bottomCap=_props$topRadius+1;topCap=new Uint16Array(_props$topRadius*(_props$nvertical+_props$verticalAxis)*6);var indexOffset=INDEX_OFFSETS[verticalAxis];verticalAxis=new Float32Array(3*numVertices);var normals=new Float32Array(3*
numVertices);numVertices=new Float32Array(2*numVertices);for(var i3=0,i2=0;start<=end;start++){var v=start/_props$nvertical,y=height*v;if(0>start){y=0;v=1;var ringRadius=_props$bottomRadius}else start>_props$nvertical?(y=height,v=1,ringRadius=topRadius):ringRadius=_props$bottomRadius+start/_props$nvertical*(topRadius-_props$bottomRadius);if(-2===start||start===_props$nvertical+2)v=ringRadius=0;y-=height/2;for(var j=0;j<bottomCap;j++){var sin=msin(j*mpi*2/_props$topRadius),cos=mcos(j*mpi*2/_props$topRadius);
verticalAxis[i3+indexOffset[0]]=sin*ringRadius;verticalAxis[i3+indexOffset[1]]=y;verticalAxis[i3+indexOffset[2]]=cos*ringRadius;normals[i3+indexOffset[0]]=0>start||start>_props$nvertical?0:sin*cosSlant;normals[i3+indexOffset[1]]=0>start?-1:start>_props$nvertical?1:slant;normals[i3+indexOffset[2]]=0>start||start>_props$nvertical?0:cos*cosSlant;numVertices[i2+0]=j/_props$topRadius;numVertices[i2+1]=v;i2+=2;i3+=3}}for(_props$bottomRadius=0;_props$bottomRadius<_props$nvertical+_props$verticalAxis;_props$bottomRadius++)for(topRadius=
0;topRadius<_props$topRadius;topRadius++)height=6*(_props$bottomRadius*_props$topRadius+topRadius),topCap[height+0]=bottomCap*(_props$bottomRadius+0)+topRadius,topCap[height+1]=bottomCap*(_props$bottomRadius+0)+1+topRadius,topCap[height+2]=bottomCap*(_props$bottomRadius+1)+1+topRadius,topCap[height+3]=bottomCap*(_props$bottomRadius+0)+topRadius,topCap[height+4]=bottomCap*(_props$bottomRadius+1)+1+topRadius,topCap[height+5]=bottomCap*(_props$bottomRadius+1)+topRadius;_props$bottomRadius={POSITION:{size:3,
value:verticalAxis},NORMAL:{size:3,value:normals},TEXCOORD_0:{size:2,value:numVertices}};return _super.call(this,_objectSpread(_objectSpread({},props),{},{id:_props$id,indices:topCap,attributes:_objectSpread(_objectSpread({},_props$bottomRadius),props.attributes)}))}(0,_inherits2["default"])(TruncatedConeGeometry,_Geometry);var _super=_createSuper(TruncatedConeGeometry);return TruncatedConeGeometry}(global["default"]);exports["default"]=require}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$engine$dist$es5$geometries$truncated_cone_geometry.js.map
