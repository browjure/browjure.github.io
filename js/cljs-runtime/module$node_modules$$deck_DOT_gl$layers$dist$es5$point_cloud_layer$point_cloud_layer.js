shadow$provide.module$node_modules$$deck_DOT_gl$layers$dist$es5$point_cloud_layer$point_cloud_layer=function(global,require,module,exports){function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,
Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),
_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_get2=global(require("module$node_modules$$babel$runtime$helpers$get")),_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_core=require("module$node_modules$$deck_DOT_gl$core$dist$es5$index"),
_core2=require("module$node_modules$$luma_DOT_gl$core$dist$es5$index"),_pointCloudLayerVertex=global(require("module$node_modules$$deck_DOT_gl$layers$dist$es5$point_cloud_layer$point_cloud_layer_vertex_glsl")),_pointCloudLayerFragment=global(require("module$node_modules$$deck_DOT_gl$layers$dist$es5$point_cloud_layer$point_cloud_layer_fragment_glsl")),DEFAULT_COLOR=[0,0,0,255],DEFAULT_NORMAL=[0,0,1];require={sizeUnits:"pixels",pointSize:{type:"number",min:0,value:10},getPosition:{type:"accessor",value:function(x){return x.position}},
getNormal:{type:"accessor",value:DEFAULT_NORMAL},getColor:{type:"accessor",value:DEFAULT_COLOR},material:!0,radiusPixels:{deprecatedFor:"pointSize"}};global=function(_Layer){function PointCloudLayer(){(0,_classCallCheck2["default"])(this,PointCloudLayer);return _super.apply(this,arguments)}(0,_inherits2["default"])(PointCloudLayer,_Layer);var _super=_createSuper(PointCloudLayer);(0,_createClass2["default"])(PointCloudLayer,[{key:"getShaders",value:function(){return(0,_get2["default"])((0,_getPrototypeOf2["default"])(PointCloudLayer.prototype),
"getShaders",this).call(this,{vs:_pointCloudLayerVertex["default"],fs:_pointCloudLayerFragment["default"],modules:[_core.project32,_core.gouraudLighting,_core.picking]})}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:5130,fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceNormals:{size:3,transition:!0,accessor:"getNormal",defaultValue:DEFAULT_NORMAL},instanceColors:{size:this.props.colorFormat.length,type:5121,
normalized:!0,transition:!0,accessor:"getColor",defaultValue:DEFAULT_COLOR}})}},{key:"updateState",value:function(_ref){var props=_ref.props,oldProps=_ref.oldProps;_ref=_ref.changeFlags;(0,_get2["default"])((0,_getPrototypeOf2["default"])(PointCloudLayer.prototype),"updateState",this).call(this,{props,oldProps,changeFlags:_ref});if(_ref.extensionsChanged){oldProps=this.context.gl;if(this.state.model)this.state.model["delete"]();this.setState({model:this._getModel(oldProps)});this.getAttributeManager().invalidateAll()}_ref.dataChanged&&
(props=props.data,oldProps=props.header,_ref=props.attributes,oldProps&&_ref&&(props.length=oldProps.vertexCount,_ref.POSITION&&(_ref.instancePositions=_ref.POSITION),_ref.NORMAL&&(_ref.instanceNormals=_ref.NORMAL),_ref.COLOR_0&&(_ref.instanceColors=_ref.COLOR_0)))}},{key:"draw",value:function(_ref2){var viewport=this.context.viewport,_this$props=this.props;this.state.model.setUniforms(Object.assign({},_ref2.uniforms,{radiusPixels:_this$props.pointSize*("meters"===_this$props.sizeUnits?1/viewport.metersPerPixel:
1)})).draw()}},{key:"_getModel",value:function(gl){for(var positions=[],i=0;3>i;i++){var angle=i/3*Math.PI*2;positions.push(2*Math.cos(angle),2*Math.sin(angle),0)}return new _core2.Model(gl,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new _core2.Geometry({drawMode:4,attributes:{positions:new Float32Array(positions)}}),isInstanced:!0}))}}]);return PointCloudLayer}(_core.Layer);exports["default"]=global;global.layerName="PointCloudLayer";global.defaultProps=require}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$layers$dist$es5$point_cloud_layer$point_cloud_layer.js.map
