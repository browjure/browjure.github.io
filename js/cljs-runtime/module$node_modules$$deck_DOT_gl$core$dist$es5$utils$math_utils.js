shadow$provide.module$node_modules$$deck_DOT_gl$core$dist$es5$utils$math_utils=function(global,require,module,exports){function getFrustumPlane(a,b,c,d){scratchVector.set(a,b,c);var L=scratchVector.len();return{distance:d/L,normal:new _math.Vector3(-a/L,-b/L,-c/L)}}function fp64LowPart(x){return x-Math.fround(x)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.createMat4=function(){return[1,0,0,0,0,1,
0,0,0,0,1,0,0,0,0,1]};exports.mod=function(value,divisor){value%=divisor;return 0>value?divisor+value:value};exports.getCameraPosition=function(viewMatrixInverse){return[viewMatrixInverse[12],viewMatrixInverse[13],viewMatrixInverse[14]]};exports.getFrustumPlanes=function(viewProjectionMatrix){var planes={};planes.left=getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[0],viewProjectionMatrix[7]+viewProjectionMatrix[4],viewProjectionMatrix[11]+viewProjectionMatrix[8],viewProjectionMatrix[15]+
viewProjectionMatrix[12]);planes.right=getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[0],viewProjectionMatrix[7]-viewProjectionMatrix[4],viewProjectionMatrix[11]-viewProjectionMatrix[8],viewProjectionMatrix[15]-viewProjectionMatrix[12]);planes.bottom=getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[1],viewProjectionMatrix[7]+viewProjectionMatrix[5],viewProjectionMatrix[11]+viewProjectionMatrix[9],viewProjectionMatrix[15]+viewProjectionMatrix[13]);planes.top=getFrustumPlane(viewProjectionMatrix[3]-
viewProjectionMatrix[1],viewProjectionMatrix[7]-viewProjectionMatrix[5],viewProjectionMatrix[11]-viewProjectionMatrix[9],viewProjectionMatrix[15]-viewProjectionMatrix[13]);planes.near=getFrustumPlane(viewProjectionMatrix[3]+viewProjectionMatrix[2],viewProjectionMatrix[7]+viewProjectionMatrix[6],viewProjectionMatrix[11]+viewProjectionMatrix[10],viewProjectionMatrix[15]+viewProjectionMatrix[14]);planes.far=getFrustumPlane(viewProjectionMatrix[3]-viewProjectionMatrix[2],viewProjectionMatrix[7]-viewProjectionMatrix[6],
viewProjectionMatrix[11]-viewProjectionMatrix[10],viewProjectionMatrix[15]-viewProjectionMatrix[14]);return planes};exports.fp64LowPart=fp64LowPart;exports.toDoublePrecisionArray=function(typedArray,_ref){var _ref$size=_ref.size;_ref$size=void 0===_ref$size?1:_ref$size;var _ref$startIndex=_ref.startIndex,startIndex=void 0===_ref$startIndex?0:_ref$startIndex;_ref=_ref.endIndex;Number.isFinite(_ref)||(_ref=typedArray.length);_ref$startIndex=(_ref-startIndex)/_ref$size;scratchArray=_typedArrayManager["default"].allocate(scratchArray,
_ref$startIndex,{type:Float32Array,size:2*_ref$size});for(var targetIndex=0;startIndex<_ref;){for(var j=0;j<_ref$size;j++){var value=typedArray[startIndex++];scratchArray[targetIndex+j]=value;scratchArray[targetIndex+j+_ref$size]=fp64LowPart(value)}targetIndex+=2*_ref$size}return scratchArray.subarray(0,_ref$startIndex*_ref$size*2)};var _typedArrayManager=global(require("module$node_modules$$deck_DOT_gl$core$dist$es5$utils$typed_array_manager")),_math=require("module$node_modules$math_DOT_gl$dist$es5$index"),
scratchVector=new _math.Vector3,scratchArray}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$core$dist$es5$utils$math_utils.js.map
