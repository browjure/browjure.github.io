shadow$provide.module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$texture=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e;
},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=o[Symbol.iterator]()},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,
minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _createSuper(Derived){var hasNativeReflectConstruct=
_isNativeReflectConstruct();return function(){var Super=(0,_getPrototypeOf2["default"])(Derived);if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2["default"])(this).constructor;Super=Reflect.construct(Super,arguments,NewTarget)}else Super=Super.apply(this,arguments);return(0,_possibleConstructorReturn2["default"])(this,Super)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;
try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _slicedToArray2=global(require("module$node_modules$$babel$runtime$helpers$slicedToArray")),_classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),
_inherits2=global(require("module$node_modules$$babel$runtime$helpers$inherits")),_possibleConstructorReturn2=global(require("module$node_modules$$babel$runtime$helpers$possibleConstructorReturn")),_getPrototypeOf2=global(require("module$node_modules$$babel$runtime$helpers$getPrototypeOf")),_gltools=require("module$node_modules$$luma_DOT_gl$gltools$dist$es5$index");module=require("module$node_modules$probe_DOT_gl$env");var _resource=global(require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$resource")),
_buffer=global(require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$buffer")),_textureFormats=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$texture_formats"),_utils=require("module$node_modules$$luma_DOT_gl$webgl$dist$es5$utils$index"),NPOT_MIN_FILTERS=[9729,9728],WebGLBuffer=module.global.WebGLBuffer||function(){};require=function(_Resource){function Texture(gl,props){(0,_classCallCheck2["default"])(this,Texture);var _props$id=props.id,id=void 0===_props$id?(0,_utils.uid)("texture"):
_props$id;_props$id=props.target;gl=_super.call(this,gl,{id,handle:props.handle});gl.target=_props$id;gl.textureUnit=void 0;gl.loaded=!1;gl.width=void 0;gl.height=void 0;gl.depth=void 0;gl.format=void 0;gl.type=void 0;gl.dataFormat=void 0;gl.border=void 0;gl.textureUnit=void 0;gl.mipmaps=void 0;return gl}(0,_inherits2["default"])(Texture,_Resource);var _super=_createSuper(Texture);(0,_createClass2["default"])(Texture,null,[{key:"isSupported",value:function(gl){var opts=1<arguments.length&&void 0!==
arguments[1]?arguments[1]:{},format=opts.format;opts=opts.linearFiltering;var supported=!0;format&&(supported=(supported=supported&&(0,_textureFormats.isFormatSupported)(gl,format))&&(!opts||(0,_textureFormats.isLinearFilteringSupported)(gl,format)));return supported}}]);(0,_createClass2["default"])(Texture,[{key:"toString",value:function(){return"Texture(".concat(this.id,",").concat(this.width,"x").concat(this.height,")")}},{key:"initialize",value:function(){var _this2=this,props=0<arguments.length&&
void 0!==arguments[0]?arguments[0]:{},data=props.data;if(data instanceof Promise)return data.then(function(resolvedImageData){return _this2.initialize(Object.assign({},props,{pixels:resolvedImageData,data:resolvedImageData}))}),this;var isVideo="undefined"!==typeof HTMLVideoElement&&data instanceof HTMLVideoElement;if(isVideo&&data.readyState<HTMLVideoElement.HAVE_METADATA)return this._video=null,data.addEventListener("loadeddata",function(){return _this2.initialize(props)}),this;var _props$pixels=
props.pixels,_props$format=props.format;_props$format=void 0===_props$format?6408:_props$format;var _props$border=props.border;_props$border=void 0===_props$border?0:_props$border;var _props$recreate=props.recreate;_props$recreate=void 0===_props$recreate?!1:_props$recreate;var _props$parameters=props.parameters;_props$parameters=void 0===_props$parameters?{}:_props$parameters;var _props$pixelStore=props.pixelStore;_props$pixelStore=void 0===_props$pixelStore?{}:_props$pixelStore;var _props$textureUnit=
props.textureUnit;_props$textureUnit=void 0===_props$textureUnit?void 0:_props$textureUnit;data||(data=void 0===_props$pixels?null:_props$pixels);_props$pixels=props.width;var height=props.height,dataFormat=props.dataFormat,type=props.type,_props$compressed=props.compressed,_props$mipmaps=props.mipmaps;_props$mipmaps=void 0===_props$mipmaps?!0:_props$mipmaps;var _props$depth=props.depth;_props$depth=void 0===_props$depth?0:_props$depth;type=this._deduceParameters({format:_props$format,type,dataFormat,
compressed:void 0===_props$compressed?!1:_props$compressed,data,width:_props$pixels,height});_props$pixels=type.width;height=type.height;_props$compressed=type.compressed;dataFormat=type.dataFormat;type=type.type;this.width=_props$pixels;this.height=height;this.depth=_props$depth;this.format=_props$format;this.type=type;this.dataFormat=dataFormat;this.border=_props$border;this.textureUnit=_props$textureUnit;Number.isFinite(this.textureUnit)&&(this.gl.activeTexture(33984+this.textureUnit),this.gl.bindTexture(this.target,
this.handle));_props$mipmaps&&this._isNPOT()&&(_gltools.log.warn("texture: ".concat(this," is Non-Power-Of-Two, disabling mipmaping"))(),_props$mipmaps=!1,this._updateForNPOT(_props$parameters));this.mipmaps=_props$mipmaps;this.setImageData({data,width:_props$pixels,height,depth:_props$depth,format:_props$format,type,dataFormat,border:_props$border,mipmaps:_props$mipmaps,parameters:_props$pixelStore,compressed:_props$compressed});_props$mipmaps&&this.generateMipmap();this.setParameters(_props$parameters);
_props$recreate&&(this.data=data);isVideo&&(this._video={video:data,parameters:_props$parameters,lastTime:data.readyState>=HTMLVideoElement.HAVE_CURRENT_DATA?data.currentTime:-1});return this}},{key:"update",value:function(){if(this._video){var _this$_video=this._video,video=_this$_video.video;_this$_video.lastTime===video.currentTime||video.readyState<HTMLVideoElement.HAVE_CURRENT_DATA||(this.setSubImageData({data:video,parameters:_this$_video.parameters}),this.mipmaps&&this.generateMipmap(),this._video.lastTime=
video.currentTime)}}},{key:"resize",value:function(_ref){var height=_ref.height,width=_ref.width;_ref=_ref.mipmaps;return width!==this.width||height!==this.height?this.initialize({width,height,format:this.format,type:this.type,dataFormat:this.dataFormat,border:this.border,mipmaps:void 0===_ref?!1:_ref}):this}},{key:"generateMipmap",value:function(){var _this3=this,params=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(this._isNPOT())return _gltools.log.warn("texture: ".concat(this," is Non-Power-Of-Two, disabling mipmaping"))(),
this;this.mipmaps=!0;this.gl.bindTexture(this.target,this.handle);(0,_gltools.withParameters)(this.gl,params,function(){_this3.gl.generateMipmap(_this3.target)});this.gl.bindTexture(this.target,null);return this}},{key:"setImageData",value:function(options){this._trackDeallocatedMemory("Texture");var _options$target=options.target,target=void 0===_options$target?this.target:_options$target;_options$target=options.pixels;var _options$level=options.level,level=void 0===_options$level?0:_options$level;
_options$level=options.format;var format=void 0===_options$level?this.format:_options$level;_options$level=options.border;var border=void 0===_options$level?this.border:_options$level;_options$level=options.offset;var offset=void 0===_options$level?0:_options$level;_options$level=options.parameters;_options$level=void 0===_options$level?{}:_options$level;var _options$data=options.data,data=void 0===_options$data?null:_options$data;_options$data=options.type;var type=void 0===_options$data?this.type:
_options$data;_options$data=options.width;var width=void 0===_options$data?this.width:_options$data;_options$data=options.height;var height=void 0===_options$data?this.height:_options$data;_options$data=options.dataFormat;var dataFormat=void 0===_options$data?this.dataFormat:_options$data;options=options.compressed;data||(data=void 0===_options$target?null:_options$target);_options$target=this._deduceParameters({format,type,dataFormat,compressed:void 0===options?!1:options,data,width,height});type=
_options$target.type;dataFormat=_options$target.dataFormat;options=_options$target.compressed;width=_options$target.width;height=_options$target.height;var gl=this.gl;gl.bindTexture(this.target,this.handle);var dataType=null;options=this._getDataType({data,compressed:options});data=options.data;dataType=options.dataType;var gl2;(0,_gltools.withParameters)(this.gl,_options$level,function(){switch(dataType){case "null":gl.texImage2D(target,level,format,width,height,border,dataFormat,type,data);break;
case "typed-array":gl.texImage2D(target,level,format,width,height,border,dataFormat,type,data,offset);break;case "buffer":gl2=(0,_gltools.assertWebGL2Context)(gl);gl2.bindBuffer(35052,data.handle||data);gl2.texImage2D(target,level,format,width,height,border,dataFormat,type,offset);gl2.bindBuffer(35052,null);break;case "browser-object":(0,_gltools.isWebGL2)(gl)?gl.texImage2D(target,level,format,width,height,border,dataFormat,type,data):gl.texImage2D(target,level,format,dataFormat,type,data);break;
case "compressed":var _iterator=_createForOfIteratorHelper(data.entries()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=(0,_slicedToArray2["default"])(_step.value,2),levelData=_step$value[1];gl.compressedTexImage2D(target,_step$value[0],levelData.format,levelData.width,levelData.height,border,levelData.data)}}catch(err){_iterator.e(err)}finally{_iterator.f()}break;default:(0,_utils.assert)(!1,"Unknown image data type")}});data&&data.byteLength?this._trackAllocatedMemory(data.byteLength,
"Texture"):this._trackAllocatedMemory(this.width*this.height*(_textureFormats.DATA_FORMAT_CHANNELS[this.dataFormat]||4)*(_textureFormats.TYPE_SIZES[this.type]||1),"Texture");this.loaded=!0;return this}},{key:"setSubImageData",value:function(_ref2){var _this4=this,_ref2$target=_ref2.target,target=void 0===_ref2$target?this.target:_ref2$target;_ref2$target=_ref2.pixels;_ref2$target=void 0===_ref2$target?null:_ref2$target;var _ref2$data=_ref2.data,data=void 0===_ref2$data?null:_ref2$data;_ref2$data=
_ref2.x;var x=void 0===_ref2$data?0:_ref2$data;_ref2$data=_ref2.y;var y=void 0===_ref2$data?0:_ref2$data;_ref2$data=_ref2.width;var width=void 0===_ref2$data?this.width:_ref2$data;_ref2$data=_ref2.height;var height=void 0===_ref2$data?this.height:_ref2$data;_ref2$data=_ref2.level;var level=void 0===_ref2$data?0:_ref2$data;_ref2$data=_ref2.format;var format=void 0===_ref2$data?this.format:_ref2$data;_ref2$data=_ref2.type;var type=void 0===_ref2$data?this.type:_ref2$data;_ref2$data=_ref2.dataFormat;
var dataFormat=void 0===_ref2$data?this.dataFormat:_ref2$data;_ref2$data=_ref2.compressed;var compressed=void 0===_ref2$data?!1:_ref2$data;_ref2$data=_ref2.offset;var offset=void 0===_ref2$data?0:_ref2$data;_ref2=_ref2.parameters;_ref2=void 0===_ref2?{}:_ref2;_ref2$data=this._deduceParameters({format,type,dataFormat,compressed,data,width,height});type=_ref2$data.type;dataFormat=_ref2$data.dataFormat;compressed=_ref2$data.compressed;width=_ref2$data.width;height=_ref2$data.height;(0,_utils.assert)(0===
this.depth,"texSubImage not supported for 3D textures");data||(data=_ref2$target);data&&data.data&&(_ref2$target=data,data=_ref2$target.data,width=_ref2$target.shape[0],height=_ref2$target.shape[1]);data instanceof _buffer["default"]&&(data=data.handle);this.gl.bindTexture(this.target,this.handle);(0,_gltools.withParameters)(this.gl,_ref2,function(){if(compressed)_this4.gl.compressedTexSubImage2D(target,level,x,y,width,height,format,data);else if(null===data)_this4.gl.texSubImage2D(target,level,x,
y,width,height,dataFormat,type,null);else if(ArrayBuffer.isView(data))_this4.gl.texSubImage2D(target,level,x,y,width,height,dataFormat,type,data,offset);else if(data instanceof WebGLBuffer){var gl2=(0,_gltools.assertWebGL2Context)(_this4.gl);gl2.bindBuffer(35052,data);gl2.texSubImage2D(target,level,x,y,width,height,dataFormat,type,offset);gl2.bindBuffer(35052,null)}else(0,_gltools.isWebGL2)(_this4.gl)?(0,_gltools.assertWebGL2Context)(_this4.gl).texSubImage2D(target,level,x,y,width,height,dataFormat,
type,data):_this4.gl.texSubImage2D(target,level,x,y,dataFormat,type,data)});this.gl.bindTexture(this.target,null)}},{key:"copyFramebuffer",value:function(){_gltools.log.error("Texture.copyFramebuffer({...}) is no logner supported, use copyToTexture(source, target, opts})")();return null}},{key:"getActiveUnit",value:function(){return this.gl.getParameter(34016)-33984}},{key:"bind",value:function(){var textureUnit=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.textureUnit,gl=this.gl;void 0!==
textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit));gl.bindTexture(this.target,this.handle);return textureUnit}},{key:"unbind",value:function(){var textureUnit=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this.textureUnit,gl=this.gl;void 0!==textureUnit&&(this.textureUnit=textureUnit,gl.activeTexture(33984+textureUnit));gl.bindTexture(this.target,null);return textureUnit}},{key:"_getDataType",value:function(_ref3){var data=_ref3.data;_ref3=_ref3.compressed;return(void 0===
_ref3?0:_ref3)?{data,dataType:"compressed"}:null===data?{data,dataType:"null"}:ArrayBuffer.isView(data)?{data,dataType:"typed-array"}:data instanceof _buffer["default"]?{data:data.handle,dataType:"buffer"}:data instanceof WebGLBuffer?{data,dataType:"buffer"}:{data,dataType:"browser-object"}}},{key:"_deduceParameters",value:function(opts){var format=opts.format,data=opts.data,width=opts.width,height=opts.height,dataFormat=opts.dataFormat,type=opts.type;opts=opts.compressed;var textureFormat=_textureFormats.TEXTURE_FORMATS[format];
dataFormat=dataFormat||textureFormat&&textureFormat.dataFormat;type=type||textureFormat&&textureFormat.types[0];opts=opts||textureFormat&&textureFormat.compressed;height=this._deduceImageSize(data,width,height);width=height.width;height=height.height;return{dataFormat,type,compressed:opts,width,height,format,data}}},{key:"_deduceImageSize",value:function(data,width,height){data="undefined"!==typeof ImageData&&data instanceof ImageData?{width:data.width,height:data.height}:"undefined"!==typeof HTMLImageElement&&
data instanceof HTMLImageElement?{width:data.naturalWidth,height:data.naturalHeight}:"undefined"!==typeof HTMLCanvasElement&&data instanceof HTMLCanvasElement?{width:data.width,height:data.height}:"undefined"!==typeof ImageBitmap&&data instanceof ImageBitmap?{width:data.width,height:data.height}:"undefined"!==typeof HTMLVideoElement&&data instanceof HTMLVideoElement?{width:data.videoWidth,height:data.videoHeight}:data?{width,height}:{width:0<=width?width:1,height:0<=height?height:1};(0,_utils.assert)(data,
"Could not deduced texture size");(0,_utils.assert)(void 0===width||data.width===width,"Deduced texture width does not match supplied width");(0,_utils.assert)(void 0===height||data.height===height,"Deduced texture height does not match supplied height");return data}},{key:"_createHandle",value:function(){return this.gl.createTexture()}},{key:"_deleteHandle",value:function(){this.gl.deleteTexture(this.handle);this._trackDeallocatedMemory("Texture")}},{key:"_getParameter",value:function(pname){switch(pname){case 4096:return this.width;
case 4097:return this.height;default:return this.gl.bindTexture(this.target,this.handle),pname=this.gl.getTexParameter(this.target,pname),this.gl.bindTexture(this.target,null),pname}}},{key:"_setParameter",value:function(pname,param){this.gl.bindTexture(this.target,this.handle);param=this._getNPOTParam(pname,param);switch(pname){case 33082:case 33083:this.gl.texParameterf(this.handle,pname,param);break;case 4096:case 4097:(0,_utils.assert)(!1);break;default:this.gl.texParameteri(this.target,pname,
param)}this.gl.bindTexture(this.target,null);return this}},{key:"_isNPOT",value:function(){return!(0,_gltools.isWebGL2)(this.gl)&&this.width&&this.height?!(0,_utils.isPowerOfTwo)(this.width)||!(0,_utils.isPowerOfTwo)(this.height):!1}},{key:"_updateForNPOT",value:function(parameters){void 0===parameters[this.gl.TEXTURE_MIN_FILTER]&&(parameters[this.gl.TEXTURE_MIN_FILTER]=this.gl.LINEAR);void 0===parameters[this.gl.TEXTURE_WRAP_S]&&(parameters[this.gl.TEXTURE_WRAP_S]=this.gl.CLAMP_TO_EDGE);void 0===
parameters[this.gl.TEXTURE_WRAP_T]&&(parameters[this.gl.TEXTURE_WRAP_T]=this.gl.CLAMP_TO_EDGE)}},{key:"_getNPOTParam",value:function(pname,param){if(this._isNPOT())switch(pname){case 10241:-1===NPOT_MIN_FILTERS.indexOf(param)&&(param=9729);break;case 10242:case 10243:33071!==param&&(param=33071)}return param}}]);return Texture}(_resource["default"]);exports["default"]=require}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$webgl$dist$es5$classes$texture.js.map
