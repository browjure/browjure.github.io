shadow$provide.module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$lib$binary_utils$array_buffer_utils=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},
e:function(_e){throw _e;},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=o[Symbol.iterator]()},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,
minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");
module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.toArrayBuffer=function(data){node.toArrayBuffer&&(data=node.toArrayBuffer(data));return data instanceof ArrayBuffer?data:ArrayBuffer.isView(data)?data.buffer:"string"===typeof data?(new TextEncoder).encode(data).buffer:data&&"object"===(0,_typeof2["default"])(data)&&data._toArrayBuffer?data._toArrayBuffer():(0,_assert["default"])(!1)};exports.compareArrayBuffers=
function(arrayBuffer1,arrayBuffer2,byteLength){byteLength=byteLength||arrayBuffer1.byteLength;if(arrayBuffer1.byteLength<byteLength||arrayBuffer2.byteLength<byteLength)return!1;arrayBuffer1=new Uint8Array(arrayBuffer1);arrayBuffer2=new Uint8Array(arrayBuffer2);for(byteLength=0;byteLength<arrayBuffer1.length;++byteLength)if(arrayBuffer1[byteLength]!==arrayBuffer2[byteLength])return!1;return!0};exports.concatenateArrayBuffers=function(){for(var _len=arguments.length,sources=Array(_len),_key=0;_key<
_len;_key++)sources[_key]=arguments[_key];_len=sources.map(function(source2){return source2 instanceof ArrayBuffer?new Uint8Array(source2):source2});sources=_len.reduce(function(length,typedArray){return length+typedArray.byteLength},0);sources=new Uint8Array(sources);_key=0;_len=_createForOfIteratorHelper(_len);var _step;try{for(_len.s();!(_step=_len.n()).done;){var sourceArray=_step.value;sources.set(sourceArray,_key);_key+=sourceArray.byteLength}}catch(err){_len.e(err)}finally{_len.f()}return sources.buffer};
exports.sliceArrayBuffer=function(arrayBuffer,byteOffset,byteLength){arrayBuffer=void 0!==byteLength?(new Uint8Array(arrayBuffer)).subarray(byteOffset,byteOffset+byteLength):(new Uint8Array(arrayBuffer)).subarray(byteOffset);return(new Uint8Array(arrayBuffer)).buffer};var _typeof2=module(require("module$node_modules$$babel$runtime$helpers$typeof")),_assert=module(require("module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$lib$env_utils$assert")),node=global(require("shadow$empty"))}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$lib$binary_utils$array_buffer_utils.js.map
