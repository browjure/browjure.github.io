shadow$provide.module$node_modules$rxjs$dist$cjs$internal$operators$mergeMap=function(global,require,module,exports){function mergeMap(project,resultSelector,concurrent){void 0===concurrent&&(concurrent=Infinity);if(isFunction_1.isFunction(resultSelector))return mergeMap(function(a,i){return map_1.map(function(b,ii){return resultSelector(a,b,i,ii)})(from_1.innerFrom(project(a,i)))},concurrent);"number"===typeof resultSelector&&(concurrent=resultSelector);return lift_1.operate(function(source,subscriber){return mergeInternals_1.mergeInternals(source,
subscriber,project,concurrent)})}Object.defineProperty(exports,"__esModule",{value:!0});exports.mergeMap=void 0;var map_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$map"),from_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$from"),lift_1=require("module$node_modules$rxjs$dist$cjs$internal$util$lift"),mergeInternals_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$mergeInternals"),isFunction_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isFunction");
exports.mergeMap=mergeMap}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$operators$mergeMap.js.map
