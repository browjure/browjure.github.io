shadow$provide.module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$parse_glb=function(global,require,module,exports){function getMagicString(dataView){var byteOffset=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;return"".concat(String.fromCharCode(dataView.getUint8(byteOffset+0))).concat(String.fromCharCode(dataView.getUint8(byteOffset+1))).concat(String.fromCharCode(dataView.getUint8(byteOffset+2))).concat(String.fromCharCode(dataView.getUint8(byteOffset+3)))}function parseJSONChunk(glb,
dataView,byteOffset,chunkLength,options){dataView=new Uint8Array(dataView.buffer,byteOffset,chunkLength);dataView=(new TextDecoder("utf8")).decode(dataView);glb.json=JSON.parse(dataView);return(0,_loaderUtils.padTo4Bytes)(chunkLength)}function parseBINChunk(glb,dataView,byteOffset,chunkLength,options){glb.header.hasBinChunk=!0;glb.binChunks.push({byteOffset,byteLength:chunkLength,arrayBuffer:dataView.buffer});return(0,_loaderUtils.padTo4Bytes)(chunkLength)}Object.defineProperty(exports,"__esModule",
{value:!0});exports.isGLB=function(arrayBuffer){var byteOffset=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,options=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},dataView=new DataView(arrayBuffer);options=options.magic;options=void 0===options?MAGIC_glTF:options;byteOffset=dataView.getUint32(byteOffset,!1);return byteOffset===options||byteOffset===MAGIC_glTF};exports["default"]=function(glb,arrayBuffer){var byteOffset=2<arguments.length&&void 0!==arguments[2]?arguments[2]:
0,dataView=new DataView(arrayBuffer);glb.type=getMagicString(dataView,byteOffset+0);glb.version=dataView.getUint32(byteOffset+4,LE);var byteLength=dataView.getUint32(byteOffset+8,LE);glb.header={byteOffset,byteLength};glb.json={};glb.binChunks=[];byteOffset+=GLB_FILE_HEADER_SIZE;switch(glb.version){case 1:byteLength={};(0,_loaderUtils.assert)(glb.header.byteLength>GLB_FILE_HEADER_SIZE+GLB_CHUNK_HEADER_SIZE);var contentLength=dataView.getUint32(byteOffset+0,LE),contentFormat=dataView.getUint32(byteOffset+
4,LE);byteOffset+=GLB_CHUNK_HEADER_SIZE;(0,_loaderUtils.assert)(contentFormat===GLB_V1_CONTENT_FORMAT_JSON);parseJSONChunk(glb,dataView,byteOffset,contentLength,byteLength);byteOffset+=contentLength;return byteOffset+=parseBINChunk(glb,dataView,byteOffset,glb.header.byteLength,byteLength);case 2:(0,_loaderUtils.assert)(glb.header.byteLength>GLB_FILE_HEADER_SIZE+GLB_CHUNK_HEADER_SIZE);byteLength=byteOffset;for(contentLength={};byteLength+8<=glb.header.byteLength;){contentFormat=dataView.getUint32(byteLength+
0,LE);var chunkFormat=dataView.getUint32(byteLength+4,LE);byteLength+=GLB_CHUNK_HEADER_SIZE;switch(chunkFormat){case GLB_CHUNK_TYPE_JSON:parseJSONChunk(glb,dataView,byteLength,contentFormat,contentLength);break;case GLB_CHUNK_TYPE_BIN:parseBINChunk(glb,dataView,byteLength,contentFormat,contentLength);break;case GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED:contentLength.glb.strict||parseJSONChunk(glb,dataView,byteLength,contentFormat,contentLength);break;case GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED:contentLength.glb.strict||
parseBINChunk(glb,dataView,byteLength,contentFormat,contentLength)}byteLength+=(0,_loaderUtils.padTo4Bytes)(contentFormat)}return byteOffset+glb.header.byteLength;default:throw Error("Invalid GLB version ".concat(glb.version,". Only supports v1 and v2."));}};var _loaderUtils=require("module$node_modules$$loaders_DOT_gl$loader_utils$dist$es5$index"),MAGIC_glTF=1735152710,GLB_FILE_HEADER_SIZE=12,GLB_CHUNK_HEADER_SIZE=8,GLB_CHUNK_TYPE_JSON=1313821514,GLB_CHUNK_TYPE_BIN=5130562,GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED=
0,GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED=1,GLB_V1_CONTENT_FORMAT_JSON=0,LE=!0}
//# sourceMappingURL=module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$parse_glb.js.map
