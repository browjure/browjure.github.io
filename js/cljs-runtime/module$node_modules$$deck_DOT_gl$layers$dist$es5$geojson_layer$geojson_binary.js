shadow$provide.module$node_modules$$deck_DOT_gl$layers$dist$es5$geojson_layer$geojson_binary=function(global,require,module,exports){function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"===typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"===typeof o.length){it&&(o=it);var i=0;allowArrayLike=function(){};return{s:allowArrayLike,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e;
},f:allowArrayLike}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=!0,didErr=!1,err;return{s:function(){it=o[Symbol.iterator]()},n:function(){var step=it.next();normalCompletion=step.done;return step},e:function(_e2){didErr=!0;err=_e2},f:function(){try{if(!normalCompletion&&null!=it["return"])it["return"]()}finally{if(didErr)throw err;}}}}function _unsupportedIterableToArray(o,
minLen){if(o){if("string"===typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){if(null==len||len>arr.length)len=arr.length;for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(object,enumerableOnly){var keys=
Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])}):Object.getOwnPropertyDescriptors?
Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}function getPropertiesForIndex(data,propertiesIndex,numericPropsIndex){propertiesIndex={properties:_objectSpread({},data.properties[propertiesIndex])};for(var prop in data.numericProps)propertiesIndex.properties[prop]=data.numericProps[prop].value[numericPropsIndex];return propertiesIndex}
function findIndexByType(data,uniqueIdProperty,featureId,geomType){if(!(data&&geomType in data&&data[geomType].positions.value.length))return-1;var index=-1;data[geomType].numericProps[uniqueIdProperty]?index=data[geomType].numericProps[uniqueIdProperty].value.indexOf(featureId):(index=data[geomType].properties.findIndex(function(elem){return elem[uniqueIdProperty]===featureId}),index=data[geomType].featureIds.value.indexOf(index));return index}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");
Object.defineProperty(exports,"__esModule",{value:!0});exports.binaryToFeature=function(data,featureIdIndex){if(!data)return null;var index=data.featureIds.value.indexOf(featureIdIndex);return-1!==index?getPropertiesForIndex(data,featureIdIndex,index):null};exports.binaryToFeatureForAccesor=function(data,index){if(!data)return null;index="startIndices"in data?data.startIndices[index]:index;var geometryIndex=data.featureIds.value[index];return-1!==index?getPropertiesForIndex(data,geometryIndex,index):
null};exports.findIndexBinary=function(data,uniqueIdProperty,featureId){if(!data)return-1;var _iterator=_createForOfIteratorHelper(GEOM_TYPES),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var index=findIndexByType(data,uniqueIdProperty,featureId,_step.value);if(-1!==index)return index}}catch(err){_iterator.e(err)}finally{_iterator.f()}return-1};exports.calculatePickingColors=function(geojsonBinary,encodePickingColor){var pickingColors={points:null,lines:null,polygons:null},key;for(key in pickingColors){var featureIds=
geojsonBinary[key].featureIds.value;pickingColors[key]=new Uint8ClampedArray(3*featureIds.length);for(var pickingColor=[],i=0;i<featureIds.length;i++)encodePickingColor(featureIds[i],pickingColor),pickingColors[key][3*i]=pickingColor[0],pickingColors[key][3*i+1]=pickingColor[1],pickingColors[key][3*i+2]=pickingColor[2]}return pickingColors};var _defineProperty2=global(require("module$node_modules$$babel$runtime$helpers$defineProperty")),GEOM_TYPES=["points","lines","polygons"]}
//# sourceMappingURL=module$node_modules$$deck_DOT_gl$layers$dist$es5$geojson_layer$geojson_binary.js.map
