{
"version":3,
"file":"module$node_modules$gl_matrix$cjs$vec2.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/gl-matrix/cjs/vec2.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$gl_matrix$cjs$vec2\"] = function(global,require,module,exports) {\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.rotate = rotate;\nexports.angle = angle;\nexports.zero = zero;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = void 0;\n\nvar glMatrix = _interopRequireWildcard(require(\"./common.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexports.len = len;\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexports.sub = sub;\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexports.mul = mul;\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexports.div = div;\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexports.dist = dist;\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexports.sqrDist = sqrDist;\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexports.sqrLen = sqrLen;\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nexports.forEach = forEach;\n};"],
"names":["shadow$provide","global","require","module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_getRequireWildcardCache","WeakMap","cache","create","out","glMatrix","ARRAY_TYPE","Float32Array","subtract","a","b","multiply","divide","distance","Math","hypot","squaredDistance","x","y","length","squaredLength","Object","defineProperty","value","clone","fromValues","copy","set","add","ceil","floor","min","max","round","scale","scaleAndAdd","negate","inverse","normalize","len","sqrt","dot","cross","z","lerp","t","ax","ay","random","r","RANDOM","PI","cos","sin","transformMat2","m","transformMat2d","transformMat3","transformMat4","rotate","rad","p0","p1","sinC","cosC","angle","x1","y1","x2","y2","mag","acos","zero","str","exactEquals","equals","a0","a1","b0","b1","abs","EPSILON","forEach","sqrLen","sqrDist","dist","div","mul","sub","_interopRequireWildcard","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","vec","stride","offset","count","fn","arg","l","i"]
}
