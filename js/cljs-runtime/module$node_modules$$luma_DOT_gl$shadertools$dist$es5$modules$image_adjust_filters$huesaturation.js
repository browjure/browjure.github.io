shadow$provide.module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_adjust_filters$huesaturation=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.hueSaturation=void 0;exports.hueSaturation={name:"hueSaturation",uniforms:{hue:{value:0,min:-1,max:1},saturation:{value:0,min:-1,max:1}},fs:"uniform float hue;\nuniform float saturation;\n\nvec4 hueSaturation_filterColor(vec4 color) {\n  float angle \x3d hue * 3.14159265;\n  float s \x3d sin(angle), c \x3d cos(angle);\n  vec3 weights \x3d (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\n  float len \x3d length(color.rgb);\n  color.rgb \x3d vec3(\n    dot(color.rgb, weights.xyz),\n    dot(color.rgb, weights.zxy),\n    dot(color.rgb, weights.yzx)\n  );\n  float average \x3d (color.r + color.g + color.b) / 3.0;\n  if (saturation \x3e 0.0) {\n    color.rgb +\x3d (average - color.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n  } else {\n    color.rgb +\x3d (average - color.rgb) * (-saturation);\n  }\n\n  return color;\n}\n\nvec4 hueSaturation_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n  return hueSaturation_filterColor(color);\n}\n",
passes:[{filter:!0}]}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_adjust_filters$huesaturation.js.map
