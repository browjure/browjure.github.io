shadow$provide.module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_warp_filters$swirl=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.swirl=void 0;global=require("module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_warp_filters$warp");exports.swirl={name:"swirl",fs:"uniform float radius;\nuniform float angle;\nuniform vec2 center;\n\nvec2 swirl_warp(vec2 coord, vec2 texCenter) {\n  coord -\x3d texCenter;\n  float distance \x3d length(coord);\n  if (distance \x3c radius) {\n    float percent \x3d (radius - distance) / radius;\n    float theta \x3d percent * percent * angle;\n    float s \x3d sin(theta);\n    float c \x3d cos(theta);\n    coord \x3d vec2(\n      coord.x * c - coord.y * s,\n      coord.x * s + coord.y * c\n    );\n  }\n  coord +\x3d texCenter;\n  return coord;\n}\n\nvec4 swirl_sampleColor(sampler2D texture, vec2 texSize, vec2 texCoord) {\n  vec2 coord \x3d texCoord * texSize;\n  coord \x3d swirl_warp(coord, center * texSize);\n\n  return warp_sampleColor(texture, texSize, coord);\n}\n",
uniforms:{center:[.5,.5],radius:{value:200,min:1,softMax:600},angle:{value:3,softMin:-25,softMax:25}},dependencies:[global.warp],passes:[{sampler:!0}]}}
//# sourceMappingURL=module$node_modules$$luma_DOT_gl$shadertools$dist$es5$modules$image_warp_filters$swirl.js.map
