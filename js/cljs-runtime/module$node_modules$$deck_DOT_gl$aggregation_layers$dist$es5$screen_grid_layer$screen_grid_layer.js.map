{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$screen_grid_layer$screen_grid_layer.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/aggregation-layers/dist/es5/screen-grid-layer/screen-grid-layer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$aggregation_layers$dist$es5$screen_grid_layer$screen_grid_layer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _gpuGridAggregator = _interopRequireDefault(require(\"../utils/gpu-grid-aggregation/gpu-grid-aggregator\"));\n\nvar _aggregationOperationUtils = require(\"../utils/aggregation-operation-utils\");\n\nvar _screenGridCellLayer = _interopRequireDefault(require(\"./screen-grid-cell-layer\"));\n\nvar _gridAggregationLayer = _interopRequireDefault(require(\"../grid-aggregation-layer\"));\n\nvar _resourceUtils = require(\"../utils/resource-utils.js\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar defaultProps = Object.assign({}, _screenGridCellLayer[\"default\"].defaultProps, {\n  getPosition: {\n    type: 'accessor',\n    value: function value(d) {\n      return d.position;\n    }\n  },\n  getWeight: {\n    type: 'accessor',\n    value: 1\n  },\n  gpuAggregation: true,\n  aggregation: 'SUM'\n});\nvar POSITION_ATTRIBUTE_NAME = 'positions';\nvar DIMENSIONS = {\n  data: {\n    props: ['cellSizePixels']\n  },\n  weights: {\n    props: ['aggregation'],\n    accessors: ['getWeight']\n  }\n};\n\nvar ScreenGridLayer = function (_GridAggregationLayer) {\n  (0, _inherits2[\"default\"])(ScreenGridLayer, _GridAggregationLayer);\n\n  var _super = _createSuper(ScreenGridLayer);\n\n  function ScreenGridLayer() {\n    (0, _classCallCheck2[\"default\"])(this, ScreenGridLayer);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(ScreenGridLayer, [{\n    key: \"initializeState\",\n    value: function initializeState() {\n      var _attributeManager$add;\n\n      var gl = this.context.gl;\n\n      if (!_screenGridCellLayer[\"default\"].isSupported(gl)) {\n        this.setState({\n          supported: false\n        });\n\n        _core.log.error(\"ScreenGridLayer: \".concat(this.id, \" is not supported on this browser\"))();\n\n        return;\n      }\n\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ScreenGridLayer.prototype), \"initializeState\", this).call(this, {\n        dimensions: DIMENSIONS,\n        getCellSize: function getCellSize(props) {\n          return props.cellSizePixels;\n        }\n      });\n      var weights = {\n        count: {\n          size: 1,\n          operation: _aggregationOperationUtils.AGGREGATION_OPERATION.SUM,\n          needMax: true,\n          maxTexture: (0, _resourceUtils.getFloatTexture)(gl, {\n            id: \"\".concat(this.id, \"-max-texture\")\n          })\n        }\n      };\n      this.setState({\n        supported: true,\n        projectPoints: true,\n        weights: weights,\n        subLayerData: {\n          attributes: {}\n        },\n        maxTexture: weights.count.maxTexture,\n        positionAttributeName: 'positions',\n        posOffset: [0, 0],\n        translation: [1, -1]\n      });\n      var attributeManager = this.getAttributeManager();\n      attributeManager.add((_attributeManager$add = {}, (0, _defineProperty2[\"default\"])(_attributeManager$add, POSITION_ATTRIBUTE_NAME, {\n        size: 3,\n        accessor: 'getPosition',\n        type: 5130,\n        fp64: this.use64bitPositions()\n      }), (0, _defineProperty2[\"default\"])(_attributeManager$add, \"count\", {\n        size: 3,\n        accessor: 'getWeight'\n      }), _attributeManager$add));\n    }\n  }, {\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref) {\n      var changeFlags = _ref.changeFlags;\n      return this.state.supported && changeFlags.somethingChanged;\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(opts) {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ScreenGridLayer.prototype), \"updateState\", this).call(this, opts);\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      if (!this.state.supported) {\n        return [];\n      }\n\n      var _this$state = this.state,\n          maxTexture = _this$state.maxTexture,\n          numRow = _this$state.numRow,\n          numCol = _this$state.numCol,\n          weights = _this$state.weights;\n      var updateTriggers = this.props.updateTriggers;\n      var aggregationBuffer = weights.count.aggregationBuffer;\n      var CellLayerClass = this.getSubLayerClass('cells', _screenGridCellLayer[\"default\"]);\n      return new CellLayerClass(this.props, this.getSubLayerProps({\n        id: 'cell-layer',\n        updateTriggers: updateTriggers\n      }), {\n        data: {\n          attributes: {\n            instanceCounts: aggregationBuffer\n          }\n        },\n        maxTexture: maxTexture,\n        numInstances: numRow * numCol\n      });\n    }\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState() {\n      (0, _get2[\"default\"])((0, _getPrototypeOf2[\"default\"])(ScreenGridLayer.prototype), \"finalizeState\", this).call(this);\n      var _this$state2 = this.state,\n          aggregationBuffer = _this$state2.aggregationBuffer,\n          maxBuffer = _this$state2.maxBuffer,\n          maxTexture = _this$state2.maxTexture;\n\n      if (aggregationBuffer) {\n        aggregationBuffer[\"delete\"]();\n      }\n\n      if (maxBuffer) {\n        maxBuffer[\"delete\"]();\n      }\n\n      if (maxTexture) {\n        maxTexture[\"delete\"]();\n      }\n    }\n  }, {\n    key: \"getPickingInfo\",\n    value: function getPickingInfo(_ref2) {\n      var info = _ref2.info,\n          mode = _ref2.mode;\n      var index = info.index;\n\n      if (index >= 0) {\n        var gpuGridAggregator = this.state.gpuGridAggregator;\n        var aggregationResults = gpuGridAggregator.getData('count');\n        info.object = _gpuGridAggregator[\"default\"].getAggregationData(Object.assign({\n          pixelIndex: index\n        }, aggregationResults));\n      }\n\n      return info;\n    }\n  }, {\n    key: \"updateResults\",\n    value: function updateResults(_ref3) {\n      var aggregationData = _ref3.aggregationData,\n          maxData = _ref3.maxData;\n      var count = this.state.weights.count;\n      count.aggregationData = aggregationData;\n      count.aggregationBuffer.setData({\n        data: aggregationData\n      });\n      count.maxData = maxData;\n      count.maxTexture.setImageData({\n        data: maxData\n      });\n    }\n  }, {\n    key: \"updateAggregationState\",\n    value: function updateAggregationState(opts) {\n      var cellSize = opts.props.cellSizePixels;\n      var cellSizeChanged = opts.oldProps.cellSizePixels !== cellSize;\n      var viewportChanged = opts.changeFlags.viewportChanged;\n      var gpuAggregation = opts.props.gpuAggregation;\n\n      if (this.state.gpuAggregation !== opts.props.gpuAggregation) {\n        if (gpuAggregation && !_gpuGridAggregator[\"default\"].isSupported(this.context.gl)) {\n          _core.log.warn('GPU Grid Aggregation not supported, falling back to CPU')();\n\n          gpuAggregation = false;\n        }\n      }\n\n      var gpuAggregationChanged = gpuAggregation !== this.state.gpuAggregation;\n      this.setState({\n        gpuAggregation: gpuAggregation\n      });\n      var positionsChanged = this.isAttributeChanged(POSITION_ATTRIBUTE_NAME);\n      var dimensions = this.state.dimensions;\n      var data = dimensions.data,\n          weights = dimensions.weights;\n      var aggregationDataDirty = positionsChanged || gpuAggregationChanged || viewportChanged || this.isAggregationDirty(opts, {\n        compareAll: gpuAggregation,\n        dimension: data\n      });\n      var aggregationWeightsDirty = this.isAggregationDirty(opts, {\n        dimension: weights\n      });\n      this.setState({\n        aggregationDataDirty: aggregationDataDirty,\n        aggregationWeightsDirty: aggregationWeightsDirty\n      });\n      var viewport = this.context.viewport;\n\n      if (viewportChanged || cellSizeChanged) {\n        var width = viewport.width,\n            height = viewport.height;\n        var numCol = Math.ceil(width / cellSize);\n        var numRow = Math.ceil(height / cellSize);\n        this.allocateResources(numRow, numCol);\n        this.setState({\n          scaling: [width / 2, -height / 2, 1],\n          gridOffset: {\n            xOffset: cellSize,\n            yOffset: cellSize\n          },\n          width: width,\n          height: height,\n          numCol: numCol,\n          numRow: numRow\n        });\n      }\n\n      if (aggregationWeightsDirty) {\n        this._updateAccessors(opts);\n      }\n\n      if (aggregationDataDirty || aggregationWeightsDirty) {\n        this._resetResults();\n      }\n    }\n  }, {\n    key: \"_updateAccessors\",\n    value: function _updateAccessors(opts) {\n      var _opts$props = opts.props,\n          getWeight = _opts$props.getWeight,\n          aggregation = _opts$props.aggregation,\n          data = _opts$props.data;\n      var count = this.state.weights.count;\n\n      if (count) {\n        count.getWeight = getWeight;\n        count.operation = _aggregationOperationUtils.AGGREGATION_OPERATION[aggregation];\n      }\n\n      this.setState({\n        getValue: (0, _aggregationOperationUtils.getValueFunc)(aggregation, getWeight, {\n          data: data\n        })\n      });\n    }\n  }, {\n    key: \"_resetResults\",\n    value: function _resetResults() {\n      var count = this.state.weights.count;\n\n      if (count) {\n        count.aggregationData = null;\n      }\n    }\n  }]);\n  return ScreenGridLayer;\n}(_gridAggregationLayer[\"default\"]);\n\nexports[\"default\"] = ScreenGridLayer;\nScreenGridLayer.layerName = 'ScreenGridLayer';\nScreenGridLayer.defaultProps = defaultProps;\n//# sourceMappingURL=screen-grid-layer.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","NewTarget","constructor","result","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Date","prototype","toString","call","e","_interopRequireDefault","Object","defineProperty","value","_defineProperty2","_classCallCheck2","_createClass2","_get2","_inherits2","_core","_gpuGridAggregator","_aggregationOperationUtils","_screenGridCellLayer","_gridAggregationLayer","_resourceUtils","defaultProps","assign","getPosition","type","d","position","getWeight","gpuAggregation","aggregation","DIMENSIONS","data","props","weights","accessors","ScreenGridLayer","_GridAggregationLayer","_super","key","initializeState","_attributeManager$add","gl","context","isSupported","dimensions","getCellSize","cellSizePixels","count","size","operation","AGGREGATION_OPERATION","SUM","needMax","maxTexture","getFloatTexture","id","concat","setState","supported","projectPoints","subLayerData","attributes","positionAttributeName","posOffset","translation","attributeManager","getAttributeManager","add","POSITION_ATTRIBUTE_NAME","accessor","fp64","use64bitPositions","log","error","shouldUpdateState","_ref","changeFlags","state","somethingChanged","updateState","opts","renderLayers","_this$state","numRow","numCol","updateTriggers","aggregationBuffer","CellLayerClass","getSubLayerClass","getSubLayerProps","instanceCounts","numInstances","finalizeState","_this$state2","maxBuffer","getPickingInfo","_ref2","info","index","aggregationResults","gpuGridAggregator","getData","object","getAggregationData","pixelIndex","updateResults","_ref3","aggregationData","maxData","setData","setImageData","updateAggregationState","cellSize","cellSizeChanged","oldProps","viewportChanged","warn","gpuAggregationChanged","positionsChanged","isAttributeChanged","aggregationDataDirty","isAggregationDirty","compareAll","dimension","aggregationWeightsDirty","viewport","width","height","Math","ceil","allocateResources","scaling","gridOffset","xOffset","yOffset","_updateAccessors","_resetResults","_opts$props","getValue","getValueFunc","layerName"]
}
