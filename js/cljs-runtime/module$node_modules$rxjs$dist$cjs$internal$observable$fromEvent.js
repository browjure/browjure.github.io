shadow$provide.module$node_modules$rxjs$dist$cjs$internal$observable$fromEvent=function(global,require,module,exports){function fromEvent(target,eventName,options,resultSelector){isFunction_1.isFunction(options)&&(resultSelector=options,options=void 0);if(resultSelector)return fromEvent(target,eventName,options).pipe(mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector));resultSelector=__read(isEventTarget(target)?eventTargetMethods.map(function(methodName){return function(handler){return target[methodName](eventName,
handler,options)}}):isNodeStyleEventEmitter(target)?nodeEventEmitterMethods.map(toCommonHandlerRegistry(target,eventName)):isJQueryStyleEventEmitter(target)?jqueryMethods.map(toCommonHandlerRegistry(target,eventName)):[],2);var add=resultSelector[0],remove=resultSelector[1];if(!add&&isArrayLike_1.isArrayLike(target))return mergeMap_1.mergeMap(function(subTarget){return fromEvent(subTarget,eventName,options)})(fromArray_1.internalFromArray(target));if(!add)throw new TypeError("Invalid event target");
return new Observable_1.Observable(function(subscriber){var handler=function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return subscriber.next(1<args.length?args:args[0])};add(handler);return function(){return remove(handler)}})}function toCommonHandlerRegistry(target,eventName){return function(methodName){return function(handler){return target[methodName](eventName,handler)}}}function isNodeStyleEventEmitter(target){return isFunction_1.isFunction(target.addListener)&&
isFunction_1.isFunction(target.removeListener)}function isJQueryStyleEventEmitter(target){return isFunction_1.isFunction(target.on)&&isFunction_1.isFunction(target.off)}function isEventTarget(target){return isFunction_1.isFunction(target.addEventListener)&&isFunction_1.isFunction(target.removeEventListener)}var __read=this&&this.__read||function(o,n){var m="function"===typeof Symbol&&o[Symbol.iterator];if(!m)return o;o=m.call(o);var r,ar=[];try{for(;(void 0===n||0<n--)&&!(r=o.next()).done;)ar.push(r.value)}catch(error){var e=
{error}}finally{try{r&&!r.done&&(m=o["return"])&&m.call(o)}finally{if(e)throw e.error;}}return ar};Object.defineProperty(exports,"__esModule",{value:!0});exports.fromEvent=void 0;var Observable_1=require("module$node_modules$rxjs$dist$cjs$internal$Observable"),mergeMap_1=require("module$node_modules$rxjs$dist$cjs$internal$operators$mergeMap"),isArrayLike_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isArrayLike"),isFunction_1=require("module$node_modules$rxjs$dist$cjs$internal$util$isFunction"),
mapOneOrManyArgs_1=require("module$node_modules$rxjs$dist$cjs$internal$util$mapOneOrManyArgs"),fromArray_1=require("module$node_modules$rxjs$dist$cjs$internal$observable$fromArray"),nodeEventEmitterMethods=["addListener","removeListener"],eventTargetMethods=["addEventListener","removeEventListener"],jqueryMethods=["on","off"];exports.fromEvent=fromEvent}
//# sourceMappingURL=module$node_modules$rxjs$dist$cjs$internal$observable$fromEvent.js.map
