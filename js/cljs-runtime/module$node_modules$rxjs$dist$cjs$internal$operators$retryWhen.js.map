{
"version":3,
"file":"module$node_modules$rxjs$dist$cjs$internal$operators$retryWhen.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,8DAAf,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAE3HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAA,CAAQI,SAAR,CAAoB,IAAK,EACzB,KAAIC,UAAYP,OAAA,CAAQ,oDAAR,CAAhB,CACIQ,OAASR,OAAA,CAAQ,sDAAR,CADb,CAEIS,qBAAuBT,OAAA,CAAQ,yEAAR,CA4B3BE,QAAA,CAAQI,SAAR,CA3BAA,QAAkB,CAACI,QAAD,CAAW,CACzB,MAAOF,OAAA,CAAOG,OAAP,CAAe,QAAS,CAACC,MAAD;AAASC,UAAT,CAAqB,CAChD,IAAIC,QAAJ,CACIC,UAAY,CAAA,CADhB,CAEIC,OAFJ,CAGIC,sBAAwBA,QAAS,EAAG,CACpCH,QAAA,CAAWF,MAAA,CAAOM,SAAP,CAAiB,IAAIT,oBAAJ,CAAyBU,kBAAzB,CAA4CN,UAA5C,CAAwDO,IAAAA,EAAxD,CAAmE,QAAS,CAACC,GAAD,CAAM,CACrGL,OAAL,GACIA,OACA,CADU,IAAIT,SAAJ,CAAce,OACxB,CAAAZ,QAAA,CAASM,OAAT,CAAA,CAAkBE,SAAlB,CAA4B,IAAIT,oBAAJ,CAAyBU,kBAAzB,CAA4CN,UAA5C,CAAwD,QAAS,EAAG,CAC5F,MAAOC,SAAA,CAAWG,qBAAA,EAAX,CAAsCF,SAAtC,CAAkD,CAAA,CADmC,CAApE,CAA5B,CAFJ,CAMIC,QAAJ,EACIA,OAAA,CAAQO,IAAR,CAAaF,GAAb,CARsG,CAAlF,CAAjB,CAWPN,UAAJ,GACID,QAAA,CAASU,WAAT,EAGA,CAFAV,QAEA,CAFW,IAEX,CADAC,SACA,CADY,CAAA,CACZ,CAAAE,qBAAA,EAJJ,CAZoC,CAmBxCA,sBAAA,EAvBgD,CAA7C,CADkB,CAP8F;",
"sources":["node_modules/rxjs/dist/cjs/internal/operators/retryWhen.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rxjs$dist$cjs$internal$operators$retryWhen\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryWhen = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction retryWhen(notifier) {\n    return lift_1.operate(function (source, subscriber) {\n        var innerSub;\n        var syncResub = false;\n        var errors$;\n        var subscribeForRetryWhen = function () {\n            innerSub = source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, undefined, function (err) {\n                if (!errors$) {\n                    errors$ = new Subject_1.Subject();\n                    notifier(errors$).subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function () {\n                        return innerSub ? subscribeForRetryWhen() : (syncResub = true);\n                    }));\n                }\n                if (errors$) {\n                    errors$.next(err);\n                }\n            }));\n            if (syncResub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                syncResub = false;\n                subscribeForRetryWhen();\n            }\n        };\n        subscribeForRetryWhen();\n    });\n}\nexports.retryWhen = retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","retryWhen","Subject_1","lift_1","OperatorSubscriber_1","notifier","operate","source","subscriber","innerSub","syncResub","errors$","subscribeForRetryWhen","subscribe","OperatorSubscriber","undefined","err","Subject","next","unsubscribe"]
}
