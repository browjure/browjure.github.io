shadow$provide.module$node_modules$$math_DOT_gl$culling$dist$es5$lib$axis_aligned_bounding_box=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports["default"]=void 0;var _classCallCheck2=global(require("module$node_modules$$babel$runtime$helpers$classCallCheck")),_createClass2=global(require("module$node_modules$$babel$runtime$helpers$createClass")),_core=require("module$node_modules$$math_DOT_gl$core$dist$es5$index"),
_constants=require("module$node_modules$$math_DOT_gl$culling$dist$es5$constants"),scratchVector=new _core.Vector3,scratchNormal=new _core.Vector3;require=function(){function AxisAlignedBoundingBox(){var minimum=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[0,0,0],maximum=1<arguments.length&&void 0!==arguments[1]?arguments[1]:[0,0,0],center=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;(0,_classCallCheck2["default"])(this,AxisAlignedBoundingBox);center=center||scratchVector.copy(minimum).add(maximum).scale(.5);
this.center=new _core.Vector3(center);this.halfDiagonal=(new _core.Vector3(maximum)).subtract(this.center);this.minimum=new _core.Vector3(minimum);this.maximum=new _core.Vector3(maximum)}(0,_createClass2["default"])(AxisAlignedBoundingBox,[{key:"clone",value:function(){return new AxisAlignedBoundingBox(this.minimum,this.maximum,this.center)}},{key:"equals",value:function(right){return this===right||!!right&&this.minimum.equals(right.minimum)&&this.maximum.equals(right.maximum)}},{key:"intersectPlane",
value:function(plane){var halfDiagonal=this.halfDiagonal,normal=scratchNormal.from(plane.normal);halfDiagonal=halfDiagonal.x*Math.abs(normal.x)+halfDiagonal.y*Math.abs(normal.y)+halfDiagonal.z*Math.abs(normal.z);plane=this.center.dot(normal)+plane.distance;return 0<plane-halfDiagonal?_constants.INTERSECTION.INSIDE:0>plane+halfDiagonal?_constants.INTERSECTION.OUTSIDE:_constants.INTERSECTION.INTERSECTING}},{key:"distanceTo",value:function(point){return Math.sqrt(this.distanceSquaredTo(point))}},{key:"distanceSquaredTo",
value:function(point){point=scratchVector.from(point).subtract(this.center);var halfDiagonal=this.halfDiagonal,distanceSquared=0;var d=Math.abs(point.x)-halfDiagonal.x;0<d&&(distanceSquared+=d*d);d=Math.abs(point.y)-halfDiagonal.y;0<d&&(distanceSquared+=d*d);d=Math.abs(point.z)-halfDiagonal.z;0<d&&(distanceSquared+=d*d);return distanceSquared}}]);return AxisAlignedBoundingBox}();exports["default"]=require}
//# sourceMappingURL=module$node_modules$$math_DOT_gl$culling$dist$es5$lib$axis_aligned_bounding_box.js.map
