{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$parse_glb.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@loaders_DOT_gl/gltf/dist/es5/lib/parse-glb.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$gltf$dist$es5$lib$parse_glb\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isGLB = isGLB;\nexports[\"default\"] = parseGLBSync;\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nvar MAGIC_glTF = 0x676c5446;\nvar GLB_FILE_HEADER_SIZE = 12;\nvar GLB_CHUNK_HEADER_SIZE = 8;\nvar GLB_CHUNK_TYPE_JSON = 0x4e4f534a;\nvar GLB_CHUNK_TYPE_BIN = 0x004e4942;\nvar GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED = 0;\nvar GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED = 1;\nvar GLB_V1_CONTENT_FORMAT_JSON = 0x0;\nvar LE = true;\n\nfunction getMagicString(dataView) {\n  var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return \"\".concat(String.fromCharCode(dataView.getUint8(byteOffset + 0))).concat(String.fromCharCode(dataView.getUint8(byteOffset + 1))).concat(String.fromCharCode(dataView.getUint8(byteOffset + 2))).concat(String.fromCharCode(dataView.getUint8(byteOffset + 3)));\n}\n\nfunction isGLB(arrayBuffer) {\n  var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var dataView = new DataView(arrayBuffer);\n  var _options$magic = options.magic,\n      magic = _options$magic === void 0 ? MAGIC_glTF : _options$magic;\n  var magic1 = dataView.getUint32(byteOffset, false);\n  return magic1 === magic || magic1 === MAGIC_glTF;\n}\n\nfunction parseGLBSync(glb, arrayBuffer) {\n  var byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var dataView = new DataView(arrayBuffer);\n  glb.type = getMagicString(dataView, byteOffset + 0);\n  glb.version = dataView.getUint32(byteOffset + 4, LE);\n  var byteLength = dataView.getUint32(byteOffset + 8, LE);\n  glb.header = {\n    byteOffset: byteOffset,\n    byteLength: byteLength\n  };\n  glb.json = {};\n  glb.binChunks = [];\n  byteOffset += GLB_FILE_HEADER_SIZE;\n\n  switch (glb.version) {\n    case 1:\n      return parseGLBV1(glb, dataView, byteOffset, options = {});\n\n    case 2:\n      return parseGLBV2(glb, dataView, byteOffset, options = {});\n\n    default:\n      throw new Error(\"Invalid GLB version \".concat(glb.version, \". Only supports v1 and v2.\"));\n  }\n}\n\nfunction parseGLBV1(glb, dataView, byteOffset, options) {\n  (0, _loaderUtils.assert)(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n  var contentLength = dataView.getUint32(byteOffset + 0, LE);\n  var contentFormat = dataView.getUint32(byteOffset + 4, LE);\n  byteOffset += GLB_CHUNK_HEADER_SIZE;\n  (0, _loaderUtils.assert)(contentFormat === GLB_V1_CONTENT_FORMAT_JSON);\n  parseJSONChunk(glb, dataView, byteOffset, contentLength, options);\n  byteOffset += contentLength;\n  byteOffset += parseBINChunk(glb, dataView, byteOffset, glb.header.byteLength, options);\n  return byteOffset;\n}\n\nfunction parseGLBV2(glb, dataView, byteOffset, options) {\n  (0, _loaderUtils.assert)(glb.header.byteLength > GLB_FILE_HEADER_SIZE + GLB_CHUNK_HEADER_SIZE);\n  parseGLBChunksSync(glb, dataView, byteOffset, options);\n  return byteOffset + glb.header.byteLength;\n}\n\nfunction parseGLBChunksSync(glb, dataView, byteOffset, options) {\n  while (byteOffset + 8 <= glb.header.byteLength) {\n    var chunkLength = dataView.getUint32(byteOffset + 0, LE);\n    var chunkFormat = dataView.getUint32(byteOffset + 4, LE);\n    byteOffset += GLB_CHUNK_HEADER_SIZE;\n\n    switch (chunkFormat) {\n      case GLB_CHUNK_TYPE_JSON:\n        parseJSONChunk(glb, dataView, byteOffset, chunkLength, options);\n        break;\n\n      case GLB_CHUNK_TYPE_BIN:\n        parseBINChunk(glb, dataView, byteOffset, chunkLength, options);\n        break;\n\n      case GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED:\n        if (!options.glb.strict) {\n          parseJSONChunk(glb, dataView, byteOffset, chunkLength, options);\n        }\n\n        break;\n\n      case GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED:\n        if (!options.glb.strict) {\n          parseBINChunk(glb, dataView, byteOffset, chunkLength, options);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    byteOffset += (0, _loaderUtils.padTo4Bytes)(chunkLength);\n  }\n\n  return byteOffset;\n}\n\nfunction parseJSONChunk(glb, dataView, byteOffset, chunkLength, options) {\n  var jsonChunk = new Uint8Array(dataView.buffer, byteOffset, chunkLength);\n  var textDecoder = new TextDecoder('utf8');\n  var jsonText = textDecoder.decode(jsonChunk);\n  glb.json = JSON.parse(jsonText);\n  return (0, _loaderUtils.padTo4Bytes)(chunkLength);\n}\n\nfunction parseBINChunk(glb, dataView, byteOffset, chunkLength, options) {\n  glb.header.hasBinChunk = true;\n  glb.binChunks.push({\n    byteOffset: byteOffset,\n    byteLength: chunkLength,\n    arrayBuffer: dataView.buffer\n  });\n  return (0, _loaderUtils.padTo4Bytes)(chunkLength);\n}\n//# sourceMappingURL=parse-glb.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getMagicString","dataView","byteOffset","arguments","length","undefined","concat","String","fromCharCode","getUint8","parseJSONChunk","glb","chunkLength","options","jsonChunk","Uint8Array","buffer","jsonText","textDecoder","TextDecoder","decode","json","JSON","parse","_loaderUtils","padTo4Bytes","parseBINChunk","header","hasBinChunk","binChunks","push","byteLength","arrayBuffer","Object","defineProperty","value","isGLB","DataView","_options$magic","magic","MAGIC_glTF","magic1","getUint32","parseGLBSync","type","version","LE","GLB_FILE_HEADER_SIZE","assert","GLB_CHUNK_HEADER_SIZE","contentLength","contentFormat","GLB_V1_CONTENT_FORMAT_JSON","chunkFormat","GLB_CHUNK_TYPE_JSON","GLB_CHUNK_TYPE_BIN","GLB_CHUNK_TYPE_JSON_XVIZ_DEPRECATED","strict","GLB_CHUNK_TYPE_BIX_XVIZ_DEPRECATED","Error"]
}
