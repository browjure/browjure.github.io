{
"version":3,
"file":"module$node_modules$$deck_DOT_gl$layers$dist$es5$text_layer$utils.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/@deck_DOT_gl/layers/dist/es5/text-layer/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$deck_DOT_gl$layers$dist$es5$text_layer$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nextPowOfTwo = nextPowOfTwo;\nexports.buildMapping = buildMapping;\nexports.autoWrapping = autoWrapping;\nexports.transformParagraph = transformParagraph;\nexports.getTextFromBuffer = getTextFromBuffer;\n\nvar _core = require(\"@deck.gl/core\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar MISSING_CHAR_WIDTH = 32;\nvar SINGLE_LINE = [];\n\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\nfunction buildMapping(_ref) {\n  var characterSet = _ref.characterSet,\n      getFontWidth = _ref.getFontWidth,\n      fontHeight = _ref.fontHeight,\n      buffer = _ref.buffer,\n      maxCanvasWidth = _ref.maxCanvasWidth,\n      _ref$mapping = _ref.mapping,\n      mapping = _ref$mapping === void 0 ? {} : _ref$mapping,\n      _ref$xOffset = _ref.xOffset,\n      xOffset = _ref$xOffset === void 0 ? 0 : _ref$xOffset,\n      _ref$yOffset = _ref.yOffset,\n      yOffset = _ref$yOffset === void 0 ? 0 : _ref$yOffset;\n  var row = 0;\n  var x = xOffset;\n  var i = 0;\n\n  var _iterator = _createForOfIteratorHelper(characterSet),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _char = _step.value;\n\n      if (!mapping[_char]) {\n        var width = getFontWidth(_char, i++);\n\n        if (x + width + buffer * 2 > maxCanvasWidth) {\n          x = 0;\n          row++;\n        }\n\n        mapping[_char] = {\n          x: x + buffer,\n          y: yOffset + row * (fontHeight + buffer * 2) + buffer,\n          width: width,\n          height: fontHeight\n        };\n        x += width + buffer * 2;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var rowHeight = fontHeight + buffer * 2;\n  return {\n    mapping: mapping,\n    xOffset: x,\n    yOffset: yOffset + row * rowHeight,\n    canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n  };\n}\n\nfunction getTextWidth(text, startIndex, endIndex, mapping) {\n  var width = 0;\n\n  for (var i = startIndex; i < endIndex; i++) {\n    var character = text[i];\n    var frameWidth = null;\n    var frame = mapping && mapping[character];\n\n    if (frame) {\n      frameWidth = frame.width;\n    }\n\n    width += frameWidth;\n  }\n\n  return width;\n}\n\nfunction breakAll(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  var rowStartCharIndex = startIndex;\n  var rowOffsetLeft = 0;\n\n  for (var i = startIndex; i < endIndex; i++) {\n    var textWidth = getTextWidth(text, i, i + 1, iconMapping);\n\n    if (rowOffsetLeft + textWidth > maxWidth) {\n      if (rowStartCharIndex < i) {\n        target.push(i);\n      }\n\n      rowStartCharIndex = i;\n      rowOffsetLeft = 0;\n    }\n\n    rowOffsetLeft += textWidth;\n  }\n\n  return rowOffsetLeft;\n}\n\nfunction breakWord(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  var rowStartCharIndex = startIndex;\n  var groupStartCharIndex = startIndex;\n  var groupEndCharIndex = startIndex;\n  var rowOffsetLeft = 0;\n\n  for (var i = startIndex; i < endIndex; i++) {\n    if (text[i] === ' ') {\n      groupEndCharIndex = i + 1;\n    } else if (text[i + 1] === ' ' || i + 1 === endIndex) {\n      groupEndCharIndex = i + 1;\n    }\n\n    if (groupEndCharIndex > groupStartCharIndex) {\n      var groupWidth = getTextWidth(text, groupStartCharIndex, groupEndCharIndex, iconMapping);\n\n      if (rowOffsetLeft + groupWidth > maxWidth) {\n        if (rowStartCharIndex < groupStartCharIndex) {\n          target.push(groupStartCharIndex);\n          rowStartCharIndex = groupStartCharIndex;\n          rowOffsetLeft = 0;\n        }\n\n        if (groupWidth > maxWidth) {\n          groupWidth = breakAll(text, groupStartCharIndex, groupEndCharIndex, maxWidth, iconMapping, target);\n          rowStartCharIndex = target[target.length - 1];\n        }\n      }\n\n      groupStartCharIndex = groupEndCharIndex;\n      rowOffsetLeft += groupWidth;\n    }\n  }\n\n  return rowOffsetLeft;\n}\n\nfunction autoWrapping(text, wordBreak, maxWidth, iconMapping) {\n  var startIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var endIndex = arguments.length > 5 ? arguments[5] : undefined;\n\n  if (endIndex === undefined) {\n    endIndex = text.length;\n  }\n\n  var result = [];\n\n  if (wordBreak === 'break-all') {\n    breakAll(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  } else {\n    breakWord(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  }\n\n  return result;\n}\n\nfunction transformRow(line, startIndex, endIndex, iconMapping, leftOffsets, rowSize) {\n  var x = 0;\n  var rowHeight = 0;\n\n  for (var i = startIndex; i < endIndex; i++) {\n    var character = line[i];\n    var frame = iconMapping[character];\n\n    if (frame) {\n      if (!rowHeight) {\n        rowHeight = frame.height;\n      }\n\n      leftOffsets[i] = x + frame.width / 2;\n      x += frame.width;\n    } else {\n      _core.log.warn(\"Missing character: \".concat(character, \" (\").concat(character.codePointAt(0), \")\"))();\n\n      leftOffsets[i] = x;\n      x += MISSING_CHAR_WIDTH;\n    }\n  }\n\n  rowSize[0] = x;\n  rowSize[1] = rowHeight;\n}\n\nfunction transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping) {\n  paragraph = Array.from(paragraph);\n  var numCharacters = paragraph.length;\n  var x = new Array(numCharacters);\n  var y = new Array(numCharacters);\n  var rowWidth = new Array(numCharacters);\n  var autoWrappingEnabled = (wordBreak === 'break-word' || wordBreak === 'break-all') && isFinite(maxWidth) && maxWidth > 0;\n  var size = [0, 0];\n  var rowSize = [];\n  var rowOffsetTop = 0;\n  var lineStartIndex = 0;\n  var lineEndIndex = 0;\n\n  for (var i = 0; i <= numCharacters; i++) {\n    var _char2 = paragraph[i];\n\n    if (_char2 === '\\n' || i === numCharacters) {\n      lineEndIndex = i;\n    }\n\n    if (lineEndIndex > lineStartIndex) {\n      var rows = autoWrappingEnabled ? autoWrapping(paragraph, wordBreak, maxWidth, iconMapping, lineStartIndex, lineEndIndex) : SINGLE_LINE;\n\n      for (var rowIndex = 0; rowIndex <= rows.length; rowIndex++) {\n        var rowStart = rowIndex === 0 ? lineStartIndex : rows[rowIndex - 1];\n        var rowEnd = rowIndex < rows.length ? rows[rowIndex] : lineEndIndex;\n        transformRow(paragraph, rowStart, rowEnd, iconMapping, x, rowSize);\n\n        for (var j = rowStart; j < rowEnd; j++) {\n          y[j] = rowOffsetTop + rowSize[1] / 2;\n          rowWidth[j] = rowSize[0];\n        }\n\n        rowOffsetTop = rowOffsetTop + rowSize[1] * lineHeight;\n        size[0] = autoWrappingEnabled ? maxWidth : Math.max(size[0], rowSize[0]);\n      }\n\n      lineStartIndex = lineEndIndex;\n    }\n\n    if (_char2 === '\\n') {\n      x[lineStartIndex] = 0;\n      y[lineStartIndex] = 0;\n      rowWidth[lineStartIndex] = 0;\n      lineStartIndex++;\n    }\n  }\n\n  size[1] = rowOffsetTop;\n  return {\n    x: x,\n    y: y,\n    rowWidth: rowWidth,\n    size: size\n  };\n}\n\nfunction getTextFromBuffer(_ref2) {\n  var value = _ref2.value,\n      length = _ref2.length,\n      stride = _ref2.stride,\n      offset = _ref2.offset,\n      startIndices = _ref2.startIndices;\n  var bytesPerElement = value.BYTES_PER_ELEMENT;\n  var elementStride = stride ? stride / bytesPerElement : 1;\n  var elementOffset = offset ? offset / bytesPerElement : 0;\n  var characterCount = startIndices[length] || Math.floor((value.length - elementOffset - bytesPerElement) / elementStride) + 1;\n  var texts = new Array(length);\n  var codes = value;\n\n  if (elementStride > 1 || elementOffset > 0) {\n    codes = new value.constructor(characterCount);\n\n    for (var i = 0; i < characterCount; i++) {\n      codes[i] = value[i * elementStride + elementOffset];\n    }\n  }\n\n  for (var index = 0; index < length; index++) {\n    var startIndex = startIndices[index];\n    var endIndex = startIndices[index + 1] || characterCount;\n    texts[index] = String.fromCodePoint.apply(null, codes.subarray(startIndex, endIndex));\n  }\n\n  return {\n    texts: texts,\n    characterCount: characterCount\n  };\n}\n//# sourceMappingURL=utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","nextPowOfTwo","number","Math","pow","ceil","log2","getTextWidth","text","startIndex","endIndex","mapping","width","character","frameWidth","frame","breakAll","maxWidth","iconMapping","target","rowStartCharIndex","rowOffsetLeft","textWidth","push","autoWrapping","wordBreak","arguments","undefined","result","groupStartCharIndex","groupEndCharIndex","groupWidth","defineProperty","buildMapping","_ref","getFontWidth","fontHeight","buffer","maxCanvasWidth","_ref$mapping","_ref$xOffset","xOffset","_ref$yOffset","yOffset","row","x","_iterator","characterSet","_step","_char","y","height","rowHeight","canvasHeight","transformParagraph","paragraph","lineHeight","numCharacters","rowWidth","autoWrappingEnabled","isFinite","size","rowSize","rowOffsetTop","lineStartIndex","lineEndIndex","_char2","rows","SINGLE_LINE","rowIndex","rowStart","rowEnd","line","leftOffsets","_core","log","warn","concat","codePointAt","MISSING_CHAR_WIDTH","j","max","getTextFromBuffer","_ref2","stride","offset","startIndices","bytesPerElement","BYTES_PER_ELEMENT","elementStride","elementOffset","characterCount","floor","texts","codes","index","String","fromCodePoint","apply","subarray"]
}
