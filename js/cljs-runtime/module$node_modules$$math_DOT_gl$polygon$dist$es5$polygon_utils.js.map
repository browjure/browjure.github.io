{
"version":3,
"file":"module$node_modules$$math_DOT_gl$polygon$dist$es5$polygon_utils.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@math_DOT_gl/polygon/dist/es5/polygon-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$math_DOT_gl$polygon$dist$es5$polygon_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modifyPolygonWindingDirection = modifyPolygonWindingDirection;\nexports.getPolygonWindingDirection = getPolygonWindingDirection;\nexports.getPolygonSignedArea = getPolygonSignedArea;\nexports.forEachSegmentInPolygon = forEachSegmentInPolygon;\nexports.modifyPolygonWindingDirectionPoints = modifyPolygonWindingDirectionPoints;\nexports.getPolygonWindingDirectionPoints = getPolygonWindingDirectionPoints;\nexports.getPolygonSignedAreaPoints = getPolygonSignedAreaPoints;\nexports.forEachSegmentInPolygonPoints = forEachSegmentInPolygonPoints;\nexports.WINDING = void 0;\n\nvar _core = require(\"@math.gl/core\");\n\nvar WINDING = {\n  CLOCKWISE: 1,\n  COUNTER_CLOCKWISE: -1\n};\nexports.WINDING = WINDING;\n\nfunction modifyPolygonWindingDirection(points, direction) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var windingDirection = getPolygonWindingDirection(points, options);\n\n  if (windingDirection !== direction) {\n    reversePolygon(points, options);\n    return true;\n  }\n\n  return false;\n}\n\nfunction getPolygonWindingDirection(points) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Math.sign(getPolygonSignedArea(points, options));\n}\n\nfunction getPolygonSignedArea(points) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var area = 0;\n  forEachSegmentInPolygon(points, function (p1x, p1y, p2x, p2y) {\n    area += areaCalcCallback(p1x, p1y, p2x, p2y);\n  }, options);\n  return area / 2;\n}\n\nfunction forEachSegmentInPolygon(points, visitor) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$start = options.start,\n      start = _options$start === void 0 ? 0 : _options$start,\n      _options$end = options.end,\n      end = _options$end === void 0 ? points.length : _options$end,\n      _options$size = options.size,\n      size = _options$size === void 0 ? 2 : _options$size,\n      isClosed = options.isClosed;\n  var numPoints = (end - start) / size;\n\n  for (var i = 0; i < numPoints - 1; ++i) {\n    visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n  }\n\n  var endPointIndex = start + (numPoints - 1) * size;\n  var isClosedEx = isClosed || (0, _core.equals)(points[start], points[endPointIndex]) && (0, _core.equals)(points[start + 1], points[endPointIndex + 1]);\n\n  if (!isClosedEx) {\n    visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n  }\n}\n\nfunction reversePolygon(points, options) {\n  var _options$start2 = options.start,\n      start = _options$start2 === void 0 ? 0 : _options$start2,\n      _options$end2 = options.end,\n      end = _options$end2 === void 0 ? points.length : _options$end2,\n      _options$size2 = options.size,\n      size = _options$size2 === void 0 ? 2 : _options$size2;\n  var numPoints = (end - start) / size;\n  var numSwaps = Math.floor(numPoints / 2);\n\n  for (var i = 0; i < numSwaps; ++i) {\n    var b1 = start + i * size;\n    var b2 = start + (numPoints - 1 - i) * size;\n\n    for (var j = 0; j < size; ++j) {\n      var tmp = points[b1 + j];\n      points[b1 + j] = points[b2 + j];\n      points[b2 + j] = tmp;\n    }\n  }\n}\n\nfunction modifyPolygonWindingDirectionPoints(points, direction) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var currentDirection = getPolygonWindingDirectionPoints(points, params);\n\n  if (currentDirection !== direction) {\n    points.reverse();\n    return true;\n  }\n\n  return false;\n}\n\nfunction getPolygonWindingDirectionPoints(points) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Math.sign(getPolygonSignedAreaPoints(points, params));\n}\n\nfunction getPolygonSignedAreaPoints(points) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var area = 0;\n  forEachSegmentInPolygonPoints(points, function (p1, p2) {\n    area += areaCalcCallback(p1[0], p1[1], p2[0], p2[1]);\n  }, params);\n  return area / 2;\n}\n\nfunction forEachSegmentInPolygonPoints(points, visitor) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _params$start = params.start,\n      start = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      end = _params$end === void 0 ? points.length : _params$end,\n      isClosed = params.isClosed;\n\n  for (var i = start; i < end - 1; ++i) {\n    visitor(points[i], points[i + 1], i, i + 1);\n  }\n\n  var isClosedEx = isClosed || (0, _core.equals)(points[end - 1], points[0]);\n\n  if (!isClosedEx) {\n    visitor(points[end - 1], points[0], end - 1, 0);\n  }\n}\n\nfunction areaCalcCallback(p1x, p1y, p2x, p2y) {\n  return (p1x + p2x) * (p1y - p2y);\n}\n//# sourceMappingURL=polygon-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","getPolygonWindingDirection","points","Math","sign","getPolygonSignedArea","options","arguments","length","undefined","area","forEachSegmentInPolygon","p1x","p1y","p2x","p2y","visitor","_options$start","start","_options$end","end","_options$size","size","isClosed","numPoints","i","endPointIndex","_core","equals","getPolygonWindingDirectionPoints","getPolygonSignedAreaPoints","params","forEachSegmentInPolygonPoints","p1","p2","_params$start","_params$end","Object","defineProperty","value","modifyPolygonWindingDirection","direction","windingDirection","_options$start2","_options$end2","_options$size2","numSwaps","floor","b1","b2","j","tmp","modifyPolygonWindingDirectionPoints","currentDirection","reverse","WINDING","CLOCKWISE","COUNTER_CLOCKWISE"]
}
