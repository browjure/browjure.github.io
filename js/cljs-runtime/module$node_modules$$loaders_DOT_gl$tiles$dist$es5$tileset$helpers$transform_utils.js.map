{
"version":3,
"file":"module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$transform_utils.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,kFAAf,CAAuG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/IC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,uBAAR,CAQAA,QAAgC,CAACC,UAAD,CAAaC,IAAb,CAAmB,CACjD,CAAC,CAAA,CAAGC,YAAH,CAAgBC,MAAjB,EAAyBH,UAAzB,CACA,EAAC,CAAA,CAAGE,YAAH,CAAgBC,MAAjB,EAAyBF,IAAzB,CAFiD,KAG7CG,UAAYH,IAAZG,CAAiBA,SAH4B,CAI7CC,WAAaJ,IAAbI,CAAkBA,UAJ2B,CAM7CC,OAASN,UAATM,CAAoBC,cAApBD,CAAmCA,MACnCE,WAAAA,CAAc,IAAIC,KAAJ,CAAUC,OAAV,CAFMV,UAEN,CAFiBW,iBAEjB,CAEdP,UAAJ,EACEI,UAAA,CAAYI,SAAZ,CAAsBR,SAAtB,CAGF;OAAQC,UAAR,EAIE,KAAK,GAAL,CACMQ,SAAAA,CAAY,CAAA,IAAIJ,KAAJ,CAAUC,OAAV,EAAoBI,OAApB,CAA4BC,IAA5B,CAAiCC,EAAjC,CAAsC,CAAtC,CAChBR,WAAA,CAAcA,UAAA,CAAYS,aAAZ,CAA0BJ,SAA1B,CACd,MAEF,MAAK,GAAL,CACMK,SACJ,CADgB,CAAA,IAAIT,KAAJ,CAAUC,OAAV,EAAoBS,OAApB,CAA4B,CAACJ,IAAD,CAAMC,EAAlC,CAAuC,CAAvC,CAChB,CAAAR,UAAA,CAAcA,UAAA,CAAYS,aAAZ,CAA0BC,SAA1B,CAXlB,CAkBIjB,IAAJ,CAASmB,WAAT,EACEZ,UAAA,CAAYI,SAAZ,CAAsBX,IAAtB,CAA2BoB,qBAA3B,CAAA,CAAkDC,KAAlD,CAAwDrB,IAAxD,CAA6DsB,oBAA7D,CAGEC,UAAAA,CAAkB,IAAIf,KAAJ,CAAUgB,OAAV,CAAkBnB,MAAlB,CACtBL,KAAA,CAAKyB,oBAAL,CAA4BlB,UAC5BP,KAAA,CAAKuB,eAAL,CAAuBA,SAEnBG,OAAAA,CAAqBC,WAAA,CAAYC,SAAZ,CAAsBC,KAAtB,CAA4BC,uBAA5B,CAAoDP,SAApD;AAAqE,IAAIf,KAAJ,CAAUgB,OAA/E,CAIrBO,UAAAA,CAFuBJ,WAAAK,CAAYJ,SAAZI,CAAsBH,KAAtBG,CAA4BC,uBAA5BD,CAAoDT,SAApDS,CAEF,CAAqBE,MAArB,EACzBlC,KAAA,CAAKmC,uBAAL,CAA+BJ,SAAA,CAAmBf,aAAnB,CAAiCT,UAAjC,CAC/BP,KAAA,CAAK0B,kBAAL,CAA0BA,MAC1B1B,KAAA,CAAKO,WAAL,CAAmBP,IAAnB,CAAwBmC,uBA9CyB,CANnD,KAAIR,YAAcnC,OAAA,CAAQ,4DAAR,CAAlB,CAEIgB,MAAQhB,OAAA,CAAQ,sDAAR,CAFZ,CAIIS,aAAeT,OAAA,CAAQ,iEAAR,CAZ4H;",
"sources":["node_modules/@loaders_DOT_gl/tiles/dist/es5/tileset/helpers/transform-utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$loaders_DOT_gl$tiles$dist$es5$tileset$helpers$transform_utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateTransformProps = calculateTransformProps;\n\nvar _geospatial = require(\"@math.gl/geospatial\");\n\nvar _core = require(\"@math.gl/core\");\n\nvar _loaderUtils = require(\"@loaders.gl/loader-utils\");\n\nfunction calculateTransformProps(tileHeader, tile) {\n  (0, _loaderUtils.assert)(tileHeader);\n  (0, _loaderUtils.assert)(tile);\n  var rtcCenter = tile.rtcCenter,\n      gltfUpAxis = tile.gltfUpAxis;\n  var computedTransform = tileHeader.computedTransform,\n      center = tileHeader.boundingVolume.center;\n  var modelMatrix = new _core.Matrix4(computedTransform);\n\n  if (rtcCenter) {\n    modelMatrix.translate(rtcCenter);\n  }\n\n  switch (gltfUpAxis) {\n    case 'Z':\n      break;\n\n    case 'Y':\n      var rotationY = new _core.Matrix4().rotateX(Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationY);\n      break;\n\n    case 'X':\n      var rotationX = new _core.Matrix4().rotateY(-Math.PI / 2);\n      modelMatrix = modelMatrix.multiplyRight(rotationX);\n      break;\n\n    default:\n      break;\n  }\n\n  if (tile.isQuantized) {\n    modelMatrix.translate(tile.quantizedVolumeOffset).scale(tile.quantizedVolumeScale);\n  }\n\n  var cartesianOrigin = new _core.Vector3(center);\n  tile.cartesianModelMatrix = modelMatrix;\n  tile.cartesianOrigin = cartesianOrigin;\n\n  var cartographicOrigin = _geospatial.Ellipsoid.WGS84.cartesianToCartographic(cartesianOrigin, new _core.Vector3());\n\n  var fromFixedFrameMatrix = _geospatial.Ellipsoid.WGS84.eastNorthUpToFixedFrame(cartesianOrigin);\n\n  var toFixedFrameMatrix = fromFixedFrameMatrix.invert();\n  tile.cartographicModelMatrix = toFixedFrameMatrix.multiplyRight(modelMatrix);\n  tile.cartographicOrigin = cartographicOrigin;\n  tile.modelMatrix = tile.cartographicModelMatrix;\n}\n//# sourceMappingURL=transform-utils.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","calculateTransformProps","tileHeader","tile","_loaderUtils","assert","rtcCenter","gltfUpAxis","center","boundingVolume","modelMatrix","_core","Matrix4","computedTransform","translate","rotationY","rotateX","Math","PI","multiplyRight","rotationX","rotateY","isQuantized","quantizedVolumeOffset","scale","quantizedVolumeScale","cartesianOrigin","Vector3","cartesianModelMatrix","cartographicOrigin","_geospatial","Ellipsoid","WGS84","cartesianToCartographic","toFixedFrameMatrix","fromFixedFrameMatrix","eastNorthUpToFixedFrame","invert","cartographicModelMatrix"]
}
