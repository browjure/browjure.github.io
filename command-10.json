["^ ","~:payload",["~:div",["~:react-fn-component",["~#list",["~$fn",["~$props","~$&","~$args"],["^3",["~$let",[],["^3",["~$$",["^3",["~$get","~$key->class","~:paper"]],["^3",["~$$",["^3",["^8","^9","~:app-bar"]],["^ ","~:position","static","~:style",["^ ","~:padding","10px"]],["^3",["~$$",["^3",["^8","^9","~:typography"]],["^ ","~:variant","h5"],"Browjure"]]]]]]]]]]],["~:codemirror-clojure",["^ ","~:width","100%","~:minHeight","100px"],"[:div\n ((with-hooks\n   [controlled-lon\n    {:type :path, :path [:my-app :lon]}\n    controlled-lat\n    {:type :path, :path [:my-app :lat]}]\n   (mat-ui/card\n    {:style\n     {:margin \"10px\",\n      :padding \"10px\",\n      :height \"300px\",\n      :width \"300px\",\n      :position \"absolute\",\n      :zIndex 3}}\n    (mat-ui/slider\n     {:value controlled-lat,\n      :orientation \"vertical\",\n      :style {:height \"200px\"},\n      :step 1.0E-4,\n      :min 37,\n      :max 38,\n      :onChange (fn [e num] (set-path-value [:my-app :lat] num))})\n    (mat-ui/typography {:variant \"caption\"} \"long-lat dataflow\")\n    (mat-ui/slider\n     {:value controlled-lon,\n      :style {:width \"200px\"},\n      :step 1.0E-4,\n      :min -123,\n      :max -122,\n      :onChange (fn [e num] (set-path-value [:my-app :lon] num))})))\n  (deck.layers/component\n   {:dataset/dependencies {:lon [:my-app :lon], :lat [:my-app :lat]},\n    :deck/data->layers\n    (fn\n     [{:keys [lon lat]}]\n     {:line-layer\n      [{:id \"controlled-line\",\n        :data\n        [{:sourcePosition [-122.41669 37.7853],\n          :targetPosition [lon lat]}],\n        :getWidth 20,\n        :getColor [150 150 250]}]})}))]\n"],["^2",["^3",["^4",["^5","~$&","^6"],["^3",["^7",["~$controlled-lat",["^3",["~$use-path-sub",["~:my-app","~:lat"],null]],"~$controlled-lon",["^3",["^E",["^F","~:lon"],null]]],["^3",["~$$",["^3",["^8","^9","~:card"]],["^ ","^=",["^ ","~:margin","10px","^>","10px","~:height","300px","^B","300px","^<","absolute","~:zIndex",3]],["^3",["~$$",["^3",["^8","^9","~:slider"]],["^ ","~:value","^D","~:orientation","vertical","^=",["^ ","^L","200px"],"~:step",1.0E-4,"~:min",37,"~:max",38,"~:onChange",["^3",["^4",["~$e","~$num"],["^3",["~$set-path-value",["^F","^G"],"^U"]]]]]]],["^3",["~$$",["^3",["^8","^9","^?"]],["^ ","^@","caption"],"long-lat dataflow"]],["^3",["~$$",["^3",["^8","^9","^N"]],["^ ","^O","^H","^=",["^ ","^B","200px"],"^Q",1.0E-4,"^R",-123,"^S",-122,"^T",["^3",["^4",["~$e","^U"],["^3",["^V",["^F","^I"],"^U"]]]]]]]]]]]]]],["~:deck-component",["^ ","~:dataset/dependencies",["^ ","^I",["^F","^I"],"^G",["^F","^G"]],"~:deck/data->layers",["~#fun",["^3",["^4",[["^ ","~:keys",["~$lon","~$lat"]]],["^ ","~:line-layer",[["^ ","~:id","controlled-line","~:data",[["^ ","~:sourcePosition",[-122.41669,37.7853],"~:targetPosition",["^10","^11"]]],"~:getWidth",20,"~:getColor",[150,150,250]]]]]]]]]],"~:type","~:view-sablono"]