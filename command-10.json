["^ ","~:payload",["~:div",["~:react-fn-component",["~#list",["~$fn",["~$props","~$&","~$args"],["^3",["~$let",["~$menu-open?",["^3",["~$use-path-sub",["~:menu","~:is-open?"],null]],"~$selected-view",["^3",["^9",["^:","~:selected-view"],null]]],["^3",["~$$",["^3",["~$get","~$key->class","~:paper"]],["^3",["~$$",["^3",["^>","^?","~:app-bar"]],["^ ","~:position","sticky","~:style",["^ ","~:display","flex","~:flexDirection","row","~:alignItems","center"]],["^3",["~$$",["^3",["^>","^?","~:icon-button"]],["^ ","~:onClick",["^3",["^4",[],["^3",["~$set-path-value",["^:","^;"],["^3",["~$not","^8"]]]]]]],["^3",["~$if","^8",["^3",["~$$",["^3",["^>","^?","~:menu-open"]]]],["^3",["~$$",["^3",["^>","^?","~:drag-handle"]]]]]]]],["^3",["~$$",["^3",["^>","^?","~:typography"]],["^ ","~:variant","h5"],"Browjure"]]]],["^3",["~$$",["^3",["^>","^?","~:drawer"]],["^ ","~:open",["^3",["~$boolean","^8"]],"~:onClose",["^3",["^4",[],["^3",["^I",["^:","^;"],false]]]]],["^3",["~$$",["^3",["^>","^?","~:list"]],["^ "],["^3",["~$$",["^3",["^>","^?","~:list-item"]],["^ ","~:button",true,"~:selected",["^3",["~$=","basic","^<"]],"^H",["^3",["^4",[],["^3",["^I",["^:","^="],"basics"]],["^3",["^I",["^:","^;"],false]]]]],"browjure-basics"]],["^3",["~$$",["^3",["^>","^?","^U"]],["^ ","^V",true,"^W",["^3",["~$=","deck","^<"]],"^H",["^3",["^4",[],["^3",["^I",["^:","^="],"deck"]],["^3",["^I",["^:","^;"],false]]]]],"browjure-deck"]]]]]]]]]]]]],["~:codemirror-clojure",["^ ","~:minHeight","100px"],"[:div\n ([:div\n   {}\n   (with-hooks\n    [selected-view {:type :path, :path [:menu :selected-view]}]\n    (mat-ui/card\n     {:style\n      {:margin \"10px\",\n       :padding \"10px\",\n       :height \"300px\",\n       :width \"300px\",\n       :display (when-not (= selected-view \"basics\") \"none\")}}\n     (mat-ui/typography\n      {:variant \"caption\"}\n      \"todo: add codemirror + basic browjure usage\")))\n   (with-hooks\n    [controlled-lon\n     {:type :path, :path [:my-app :lon]}\n     controlled-lat\n     {:type :path, :path [:my-app :lat]}\n     selected-view\n     {:type :path, :path [:menu :selected-view]}]\n    (mat-ui/card\n     {:style\n      {:margin \"10px\",\n       :padding \"10px\",\n       :height \"300px\",\n       :width \"300px\",\n       :display (when-not (= selected-view \"deck\") \"none\"),\n       :position \"absolute\",\n       :zIndex 3}}\n     (mat-ui/slider\n      {:value controlled-lat,\n       :orientation \"vertical\",\n       :style {:height \"200px\"},\n       :step 1.0E-4,\n       :min 37,\n       :max 38,\n       :onChange (fn [e num] (set-path-value [:my-app :lat] num))})\n     (mat-ui/typography {:variant \"caption\"} \"long-lat dataflow\")\n     (mat-ui/slider\n      {:value controlled-lon,\n       :style {:width \"200px\"},\n       :step 1.0E-4,\n       :min -123,\n       :max -122,\n       :onChange (fn [e num] (set-path-value [:my-app :lon] num))})))]\n  (deck.layers/component\n   {:dataset/dependencies\n    {:lon [:my-app :lon],\n     :lat [:my-app :lat],\n     :selected-view [:menu :selected-view]},\n    :deck/data->layers\n    (fn\n     [{:keys [lon lat]}]\n     {:line-layer\n      [{:id \"controlled-line\",\n        :data\n        [{:sourcePosition [-122.41669 37.7853],\n          :targetPosition [lon lat]}],\n        :getWidth 20,\n        :getColor [150 150 250]}]}),\n    :container-props-fn\n    (fn\n     [{:keys [selected-view]}]\n     {:style\n      {:display (when-not (= \"deck\" selected-view) \"none\"),\n       :height \"1000px\",\n       :width \"1000px\"}})}))]\n"],["^1",["^ "],["^2",["^3",["^4",["^5","~$&","^6"],["^3",["^7",["^<",["^3",["^9",["^:","^="],null]]],["^3",["~$$",["^3",["^>","^?","~:card"]],["^ ","^C",["^ ","~:margin","10px","~:padding","10px","~:height","300px","~:width","300px","^D",["^3",["~$when-not",["^3",["~$=","^<","basics"]],"none"]]]],["^3",["~$$",["^3",["^>","^?","^N"]],["^ ","^O","caption"],"todo: add codemirror + basic browjure usage"]]]]]]]]],["^2",["^3",["^4",["^5","~$&","^6"],["^3",["^7",["~$controlled-lat",["^3",["^9",["~:my-app","~:lat"],null]],"~$controlled-lon",["^3",["^9",["^15","~:lon"],null]],"^<",["^3",["^9",["^:","^="],null]]],["^3",["~$$",["^3",["^>","^?","^Z"]],["^ ","^C",["^ ","^[","10px","^10","10px","^11","300px","^12","300px","^D",["^3",["^13",["^3",["~$=","^<","deck"]],"none"]],"^B","absolute","~:zIndex",3]],["^3",["~$$",["^3",["^>","^?","~:slider"]],["^ ","~:value","^14","~:orientation","vertical","^C",["^ ","^11","200px"],"~:step",1.0E-4,"~:min",37,"~:max",38,"~:onChange",["^3",["^4",["~$e","~$num"],["^3",["^I",["^15","^16"],"^1A"]]]]]]],["^3",["~$$",["^3",["^>","^?","^N"]],["^ ","^O","caption"],"long-lat dataflow"]],["^3",["~$$",["^3",["^>","^?","^1:"]],["^ ","^1;","^17","^C",["^ ","^12","200px"],"^1=",1.0E-4,"^1>",-123,"^1?",-122,"^1@",["^3",["^4",["~$e","^1A"],["^3",["^I",["^15","^18"],"^1A"]]]]]]]]]]]]]]],["~:deck-component",["^ ","~:dataset/dependencies",["^ ","^18",["^15","^18"],"^16",["^15","^16"],"^=",["^:","^="]],"~:deck/data->layers",["~#fun",["^3",["^4",[["^ ","~:keys",["~$lon","~$lat"]]],["^ ","~:line-layer",[["^ ","~:id","controlled-line","~:data",[["^ ","~:sourcePosition",[-122.41669,37.7853],"~:targetPosition",["^1G","^1H"]]],"~:getWidth",20,"~:getColor",[150,150,250]]]]]]],"~:container-props-fn",["^1E",["^3",["^4",[["^ ","^1F",["^<"]]],["^ ","^C",["^ ","^D",["^3",["^13",["^3",["~$=","deck","^<"]],"none"]],"^11","1000px","^12","1000px"]]]]]]]],"~:type","~:view-sablono"]